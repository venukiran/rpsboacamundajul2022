{"ast":null,"code":"import { isArray, isString, isObject, assign, forEach, find, filter, matchPattern, isDefined } from 'min-dash';\nimport { domify, classes as domClasses, attr as domAttr, remove as domRemove, clear as domClear } from 'min-dom';\nimport { getBBox } from '../../util/Elements';\nimport Ids from '../../util/IdGenerator'; // document wide unique overlay ids\n\nvar ids = new Ids('ov');\nvar LOW_PRIORITY = 500;\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\n\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n  this._ids = ids;\n  this._overlayDefaults = assign({\n    // no show constraints\n    show: null,\n    // always scale\n    scale: true\n  }, config && config.defaults);\n  /**\n   * Mapping overlayId -> overlay\n   */\n\n  this._overlays = {};\n  /**\n   * Mapping elementId -> overlay container\n   */\n\n  this._overlayContainers = []; // root html element for all overlays\n\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\nOverlays.$inject = ['config.overlays', 'eventBus', 'canvas', 'elementRegistry'];\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {string} [search.id]\n * @param {string|djs.model.Base} [search.element]\n * @param {string} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\n\nOverlays.prototype.get = function (search) {\n  if (isString(search)) {\n    search = {\n      id: search\n    };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true); // return a list of overlays when searching by element (+type)\n\n\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({\n        type: search.type\n      })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else if (search.type) {\n    return filter(this._overlays, matchPattern({\n      type: search.type\n    }));\n  } else {\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {string|djs.model.Base}   element   attach overlay to this shape\n * @param {string}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {string|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {number}                  [overlay.position.right]     relative to element bbox right attachment\n * @param {boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\n *                                                               diagram zoom\n * @param {number}                  [overlay.scale.min]\n * @param {number}                  [overlay.scale.max]\n *\n * @return {string}                 id that may be used to reference the overlay for update or removal\n */\n\n\nOverlays.prototype.add = function (element, type, overlay) {\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {string} [id]\n * @param {Object} [filter]\n */\n\n\nOverlays.prototype.remove = function (filter) {\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [overlays];\n  }\n\n  var self = this;\n  forEach(overlays, function (overlay) {\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n      delete overlay.htmlContainer;\n      delete overlay.element;\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n};\n\nOverlays.prototype.show = function () {\n  setVisible(this._overlayRoot);\n};\n\nOverlays.prototype.hide = function () {\n  setVisible(this._overlayRoot, false);\n};\n\nOverlays.prototype.clear = function () {\n  this._overlays = {};\n  this._overlayContainers = [];\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function (container) {\n  var element = container.element,\n      html = container.html; // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\nOverlays.prototype._updateOverlay = function (overlay) {\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element; // update overlay html relative to shape because\n  // it is already positioned on the element\n  // update relative\n\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n};\n\nOverlays.prototype._createOverlayContainer = function (element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\nOverlays.prototype._updateRoot = function (viewbox) {\n  var scale = viewbox.scale || 1;\n  var matrix = 'matrix(' + [scale, 0, 0, scale, -1 * viewbox.x * scale, -1 * viewbox.y * scale].join(',') + ')';\n  setTransform(this._overlayRoot, matrix);\n};\n\nOverlays.prototype._getOverlayContainer = function (element, raw) {\n  var container = find(this._overlayContainers, function (c) {\n    return c.element === element;\n  });\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\nOverlays.prototype._addOverlay = function (overlay) {\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer; // unwrap jquery (for those who need it)\n\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  } // create proper html elements from\n  // overlay HTML strings\n\n\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  var plane = this._canvas.findPlane(element);\n\n  var activePlane = this._canvas.getActivePlane();\n\n  overlay.plane = plane;\n\n  if (plane !== activePlane) {\n    setVisible(htmlContainer, false);\n  }\n\n  overlay.htmlContainer = htmlContainer;\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\nOverlays.prototype._updateOverlayVisibilty = function (overlay, viewbox) {\n  var show = overlay.show,\n      plane = overlay.plane,\n      minZoom = show && show.minZoom,\n      maxZoom = show && show.maxZoom,\n      htmlContainer = overlay.htmlContainer,\n      activePlane = this._canvas.getActivePlane(),\n      visible = true;\n\n  if (plane !== activePlane) {\n    visible = false;\n  } else if (show) {\n    if (isDefined(minZoom) && minZoom > viewbox.scale || isDefined(maxZoom) && maxZoom < viewbox.scale) {\n      visible = false;\n    }\n  }\n\n  setVisible(htmlContainer, visible);\n\n  this._updateOverlayScale(overlay, viewbox);\n};\n\nOverlays.prototype._updateOverlayScale = function (overlay, viewbox) {\n  var shouldScale = overlay.scale,\n      minScale,\n      maxScale,\n      htmlContainer = overlay.htmlContainer;\n  var scale,\n      transform = '';\n\n  if (shouldScale !== true) {\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n\n  setTransform(htmlContainer, transform);\n};\n\nOverlays.prototype._updateOverlaysVisibilty = function (viewbox) {\n  var self = this;\n  forEach(this._overlays, function (overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\nOverlays.prototype._init = function () {\n  var eventBus = this._eventBus;\n  var self = this; // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function (event) {\n    self.hide();\n  });\n  eventBus.on('canvas.viewbox.changed', function (event) {\n    updateViewbox(event.viewbox);\n  }); // remove integration\n\n  eventBus.on(['shape.remove', 'connection.remove'], function (e) {\n    var element = e.element;\n    var overlays = self.get({\n      element: element\n    });\n    forEach(overlays, function (o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n\n      var i = self._overlayContainers.indexOf(container);\n\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  }); // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function (e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function (overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  }); // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function (e) {\n    var container = self._getOverlayContainer(e.element, true);\n\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n  eventBus.on('plane.set', function (e) {\n    forEach(self._overlays, function (el) {\n      setVisible(el.htmlContainer, el.plane === e.plane);\n    });\n  }); // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n}; // helpers /////////////////////////////\n\n\nfunction createRoot(parentNode) {\n  var root = domify('<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />');\n  parentNode.insertBefore(root, parentNode.firstChild);\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assign(el.style, {\n    left: x + 'px',\n    top: y + 'px'\n  });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nfunction setTransform(el, transform) {\n  el.style['transform-origin'] = 'top left';\n  ['', '-ms-', '-webkit-'].forEach(function (prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}","map":{"version":3,"names":["isArray","isString","isObject","assign","forEach","find","filter","matchPattern","isDefined","domify","classes","domClasses","attr","domAttr","remove","domRemove","clear","domClear","getBBox","Ids","ids","LOW_PRIORITY","Overlays","config","eventBus","canvas","elementRegistry","_eventBus","_canvas","_elementRegistry","_ids","_overlayDefaults","show","scale","defaults","_overlays","_overlayContainers","_overlayRoot","createRoot","getContainer","_init","$inject","prototype","get","search","id","element","container","_getOverlayContainer","type","overlays","slice","add","overlay","position","Error","html","next","_addOverlay","self","htmlContainer","idx","indexOf","splice","setVisible","hide","_updateOverlayContainer","x","y","waypoints","bbox","setPosition","_updateOverlay","left","top","right","undefined","width","bottom","height","_createOverlayContainer","appendChild","push","_updateRoot","viewbox","matrix","join","setTransform","raw","c","overlayContainer","constructor","jquery","plane","findPlane","activePlane","getActivePlane","_updateOverlayVisibilty","minZoom","maxZoom","visible","_updateOverlayScale","shouldScale","minScale","maxScale","transform","min","max","_updateOverlaysVisibilty","updateViewbox","on","event","e","o","i","marker","el","parentNode","root","insertBefore","firstChild","style","display","prefix"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/features/overlays/Overlays.js"],"sourcesContent":["import {\n  isArray,\n  isString,\n  isObject,\n  assign,\n  forEach,\n  find,\n  filter,\n  matchPattern,\n  isDefined\n} from 'min-dash';\n\nimport {\n  domify,\n  classes as domClasses,\n  attr as domAttr,\n  remove as domRemove,\n  clear as domClear\n} from 'min-dom';\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n\n  this._ids = ids;\n\n  this._overlayDefaults = assign({\n\n    // no show constraints\n    show: null,\n\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * Mapping overlayId -> overlay\n   */\n  this._overlays = {};\n\n  /**\n   * Mapping elementId -> overlay container\n   */\n  this._overlayContainers = [];\n\n  // root html element for all overlays\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\n\n\nOverlays.$inject = [\n  'config.overlays',\n  'eventBus',\n  'canvas',\n  'elementRegistry'\n];\n\n\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {string} [search.id]\n * @param {string|djs.model.Base} [search.element]\n * @param {string} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\nOverlays.prototype.get = function(search) {\n\n  if (isString(search)) {\n    search = { id: search };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({ type: search.type })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else\n  if (search.type) {\n    return filter(this._overlays, matchPattern({ type: search.type }));\n  } else {\n\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {string|djs.model.Base}   element   attach overlay to this shape\n * @param {string}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {string|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {number}                  [overlay.position.right]     relative to element bbox right attachment\n * @param {boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\n *                                                               diagram zoom\n * @param {number}                  [overlay.scale.min]\n * @param {number}                  [overlay.scale.max]\n *\n * @return {string}                 id that may be used to reference the overlay for update or removal\n */\nOverlays.prototype.add = function(element, type, overlay) {\n\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n\n\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {string} [id]\n * @param {Object} [filter]\n */\nOverlays.prototype.remove = function(filter) {\n\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [ overlays ];\n  }\n\n  var self = this;\n\n  forEach(overlays, function(overlay) {\n\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n\n      delete overlay.htmlContainer;\n      delete overlay.element;\n\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n\n};\n\n\nOverlays.prototype.show = function() {\n  setVisible(this._overlayRoot);\n};\n\n\nOverlays.prototype.hide = function() {\n  setVisible(this._overlayRoot, false);\n};\n\nOverlays.prototype.clear = function() {\n  this._overlays = {};\n\n  this._overlayContainers = [];\n\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function(container) {\n  var element = container.element,\n      html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\n\nOverlays.prototype._updateOverlay = function(overlay) {\n\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n};\n\n\nOverlays.prototype._createOverlayContainer = function(element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\n\nOverlays.prototype._updateRoot = function(viewbox) {\n  var scale = viewbox.scale || 1;\n\n  var matrix = 'matrix(' +\n  [\n    scale,\n    0,\n    0,\n    scale,\n    -1 * viewbox.x * scale,\n    -1 * viewbox.y * scale\n  ].join(',') +\n  ')';\n\n  setTransform(this._overlayRoot, matrix);\n};\n\n\nOverlays.prototype._getOverlayContainer = function(element, raw) {\n  var container = find(this._overlayContainers, function(c) {\n    return c.element === element;\n  });\n\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\n\nOverlays.prototype._addOverlay = function(overlay) {\n\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  var plane = this._canvas.findPlane(element);\n  var activePlane = this._canvas.getActivePlane();\n  overlay.plane = plane;\n  if (plane !== activePlane) {\n    setVisible(htmlContainer, false);\n  }\n\n  overlay.htmlContainer = htmlContainer;\n\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\n  var show = overlay.show,\n      plane = overlay.plane,\n      minZoom = show && show.minZoom,\n      maxZoom = show && show.maxZoom,\n      htmlContainer = overlay.htmlContainer,\n      activePlane = this._canvas.getActivePlane(),\n      visible = true;\n\n  if (plane !== activePlane) {\n    visible = false;\n  } else if (show) {\n    if (\n      (isDefined(minZoom) && minZoom > viewbox.scale) ||\n      (isDefined(maxZoom) && maxZoom < viewbox.scale)\n    ) {\n      visible = false;\n    }\n  }\n\n  setVisible(htmlContainer, visible);\n\n  this._updateOverlayScale(overlay, viewbox);\n};\n\n\nOverlays.prototype._updateOverlayScale = function(overlay, viewbox) {\n  var shouldScale = overlay.scale,\n      minScale,\n      maxScale,\n      htmlContainer = overlay.htmlContainer;\n\n  var scale, transform = '';\n\n  if (shouldScale !== true) {\n\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n\n  setTransform(htmlContainer, transform);\n};\n\n\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\n\n  var self = this;\n\n  forEach(this._overlays, function(overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\n\nOverlays.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n\n\n  // remove integration\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    var overlays = self.get({ element: element });\n\n    forEach(overlays, function(o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function(overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  });\n\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function(e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n\n\n  eventBus.on('plane.set', function(e) {\n    forEach(self._overlays, function(el) {\n      setVisible(el.htmlContainer, el.plane === e.plane);\n    });\n  });\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />'\n  );\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nfunction setTransform(el, transform) {\n\n  el.style['transform-origin'] = 'top left';\n\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}