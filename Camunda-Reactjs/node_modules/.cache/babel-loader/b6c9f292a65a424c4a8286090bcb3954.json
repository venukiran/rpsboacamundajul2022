{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _difference from 'lodash/difference';\nimport _isUndefined from 'lodash/isUndefined';\nimport _startsWith from 'lodash/startsWith';\nimport _filter from 'lodash/filter';\nimport _isEmpty from 'lodash/isEmpty';\nimport _keys from 'lodash/keys';\nimport _intersection from 'lodash/intersection';\nimport _has from 'lodash/has';\nimport _each from 'lodash/each';\nimport _invoke from 'lodash/invoke';\n/* eslint-disable no-console */\n\n/**\n * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.\n * In short, we need identical functionality to setState(), unless there is a prop defined\n * for the state key.  Also:\n *\n * 1. Single Renders\n *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()\n *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.\n *    See www.react.run/4kJFdKoxb/27 for an example of this issue.\n *\n * 2. Simple Testing\n *    Using a HOC means you must either test the undecorated component or test through the decorator.\n *    Testing the undecorated component means you must mock the decorator functionality.\n *    Testing through the HOC means you can not simply shallow render your component.\n *\n * 3. Statics\n *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more\n *    looping over properties and storing references.  We rely heavily on statics for testing and sub\n *    components.\n *\n * 4. Instance Methods\n *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless\n *    hoisted and exposed by the HOC.\n */\n\nimport { Component } from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return 'default' + (prop[0].toUpperCase() + prop.slice(1));\n};\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\n\n\nexport var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false; // regular props\n\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined\n\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  } // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n\n\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined\n};\n\nvar AutoControlledComponent = function (_Component) {\n  _inherits(AutoControlledComponent, _Component);\n\n  function AutoControlledComponent() {\n    var _ref;\n\n    _classCallCheck(this, AutoControlledComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var autoControlledProps = _this.constructor.autoControlledProps;\n    var state = _invoke(_this, 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor = _this.constructor,\n          defaultProps = _this$constructor.defaultProps,\n          name = _this$constructor.name,\n          propTypes = _this$constructor.propTypes; // require static autoControlledProps\n\n      if (!autoControlledProps) {\n        console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');\n      } // require propTypes\n\n\n      _each(autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop); // regular prop\n\n        if (!_has(propTypes, defaultProp)) {\n          console.error(name + ' is missing \"' + defaultProp + '\" propTypes validation for auto controlled prop \"' + prop + '\".');\n        } // its default prop\n\n\n        if (!_has(propTypes, prop)) {\n          console.error(name + ' is missing propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n      }); // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n\n\n      var illegalDefaults = _intersection(autoControlledProps, _keys(defaultProps));\n\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: \"' + illegalDefaults + '\".'].join(' '));\n      } // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n\n\n      var illegalAutoControlled = _filter(autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: \"' + illegalAutoControlled + '\".'].join(' '));\n      }\n    } // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n\n\n    var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(_name + ' prop \"' + prop + '\" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');\n        }\n      }\n\n      return acc;\n    }, {});\n    _this.state = _extends({}, state, initialAutoControlledState);\n    return _this;\n  }\n\n  _createClass(AutoControlledComponent, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var autoControlledProps = this.constructor.autoControlledProps; // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextUndefined = _isUndefined(nextProps[prop]);\n\n        var propWasRemoved = !_isUndefined(_this2.props[prop]) && isNextUndefined; // if next is defined then use its value\n\n        if (!isNextUndefined) acc[prop] = nextProps[prop]; // reinitialize state for props just removed / set undefined\n        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);\n        return acc;\n      }, {});\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n\n  }]);\n\n  return AutoControlledComponent;\n}(Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.trySetState = function (maybeState, state) {\n    var autoControlledProps = _this3.constructor.autoControlledProps;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var name = _this3.constructor.name; // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n      var illegalKeys = _difference(_keys(maybeState), autoControlledProps);\n\n      if (!_isEmpty(illegalKeys)) {\n        console.error([name + ' called trySetState() with controlled props: \"' + illegalKeys + '\".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n      }\n    }\n\n    var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n      // ignore props defined by the parent\n      if (_this3.props[prop] !== undefined) return acc; // ignore props not listed in auto controlled props\n\n      if (autoControlledProps.indexOf(prop) === -1) return acc;\n      acc[prop] = maybeState[prop];\n      return acc;\n    }, {});\n    if (state) newState = _extends({}, newState, state);\n    if (Object.keys(newState).length > 0) _this3.setState(newState);\n  };\n};\n\nexport default AutoControlledComponent;","map":{"version":3,"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_difference","_isUndefined","_startsWith","_filter","_isEmpty","_keys","_intersection","_has","_each","_invoke","Component","getDefaultPropName","prop","toUpperCase","slice","getAutoControlledStateValue","propName","props","state","includeDefaults","arguments","length","undefined","propValue","defaultProp","initialState","multiple","AutoControlledComponent","_Component","_ref","_len","args","Array","_key","_this","__proto__","Object","getPrototypeOf","call","apply","concat","_initialiseProps","autoControlledProps","constructor","process","env","NODE_ENV","_this$constructor","defaultProps","name","propTypes","console","error","illegalDefaults","join","illegalAutoControlled","initialAutoControlledState","reduce","acc","defaultPropName","_name","key","value","componentWillReceiveProps","nextProps","_this2","newState","isNextUndefined","propWasRemoved","keys","setState","_this3","trySetState","maybeState","illegalKeys","indexOf"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/lib/AutoControlledComponent.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _difference from 'lodash/difference';\nimport _isUndefined from 'lodash/isUndefined';\nimport _startsWith from 'lodash/startsWith';\nimport _filter from 'lodash/filter';\nimport _isEmpty from 'lodash/isEmpty';\nimport _keys from 'lodash/keys';\nimport _intersection from 'lodash/intersection';\nimport _has from 'lodash/has';\nimport _each from 'lodash/each';\nimport _invoke from 'lodash/invoke'; /* eslint-disable no-console */\n/**\n * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.\n * In short, we need identical functionality to setState(), unless there is a prop defined\n * for the state key.  Also:\n *\n * 1. Single Renders\n *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()\n *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.\n *    See www.react.run/4kJFdKoxb/27 for an example of this issue.\n *\n * 2. Simple Testing\n *    Using a HOC means you must either test the undecorated component or test through the decorator.\n *    Testing the undecorated component means you must mock the decorator functionality.\n *    Testing through the HOC means you can not simply shallow render your component.\n *\n * 3. Statics\n *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more\n *    looping over properties and storing references.  We rely heavily on statics for testing and sub\n *    components.\n *\n * 4. Instance Methods\n *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless\n *    hoisted and exposed by the HOC.\n */\n\nimport { Component } from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return 'default' + (prop[0].toUpperCase() + prop.slice(1));\n};\n\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\nexport var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // regular props\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp;\n\n    // initial state - state may be null or undefined\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  }\n\n  // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : '';\n\n  // otherwise, undefined\n};\n\nvar AutoControlledComponent = function (_Component) {\n  _inherits(AutoControlledComponent, _Component);\n\n  function AutoControlledComponent() {\n    var _ref;\n\n    _classCallCheck(this, AutoControlledComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var autoControlledProps = _this.constructor.autoControlledProps;\n\n    var state = _invoke(_this, 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor = _this.constructor,\n          defaultProps = _this$constructor.defaultProps,\n          name = _this$constructor.name,\n          propTypes = _this$constructor.propTypes;\n      // require static autoControlledProps\n\n      if (!autoControlledProps) {\n        console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');\n      }\n\n      // require propTypes\n      _each(autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop);\n        // regular prop\n        if (!_has(propTypes, defaultProp)) {\n          console.error(name + ' is missing \"' + defaultProp + '\" propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n        // its default prop\n        if (!_has(propTypes, prop)) {\n          console.error(name + ' is missing propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n      });\n\n      // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n      var illegalDefaults = _intersection(autoControlledProps, _keys(defaultProps));\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: \"' + illegalDefaults + '\".'].join(' '));\n      }\n\n      // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n      var illegalAutoControlled = _filter(autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: \"' + illegalAutoControlled + '\".'].join(' '));\n      }\n    }\n\n    // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n    var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name;\n        // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(_name + ' prop \"' + prop + '\" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');\n        }\n      }\n\n      return acc;\n    }, {});\n\n    _this.state = _extends({}, state, initialAutoControlledState);\n    return _this;\n  }\n\n  _createClass(AutoControlledComponent, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var autoControlledProps = this.constructor.autoControlledProps;\n\n      // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextUndefined = _isUndefined(nextProps[prop]);\n        var propWasRemoved = !_isUndefined(_this2.props[prop]) && isNextUndefined;\n\n        // if next is defined then use its value\n        if (!isNextUndefined) acc[prop] = nextProps[prop];\n\n        // reinitialize state for props just removed / set undefined\n        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);\n\n        return acc;\n      }, {});\n\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n\n  }]);\n\n  return AutoControlledComponent;\n}(Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.trySetState = function (maybeState, state) {\n    var autoControlledProps = _this3.constructor.autoControlledProps;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var name = _this3.constructor.name;\n      // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n      var illegalKeys = _difference(_keys(maybeState), autoControlledProps);\n      if (!_isEmpty(illegalKeys)) {\n        console.error([name + ' called trySetState() with controlled props: \"' + illegalKeys + '\".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n      }\n    }\n\n    var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n      // ignore props defined by the parent\n      if (_this3.props[prop] !== undefined) return acc;\n\n      // ignore props not listed in auto controlled props\n      if (autoControlledProps.indexOf(prop) === -1) return acc;\n\n      acc[prop] = maybeState[prop];\n      return acc;\n    }, {});\n\n    if (state) newState = _extends({}, newState, state);\n\n    if (Object.keys(newState).length > 0) _this3.setState(newState);\n  };\n};\n\nexport default AutoControlledComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}