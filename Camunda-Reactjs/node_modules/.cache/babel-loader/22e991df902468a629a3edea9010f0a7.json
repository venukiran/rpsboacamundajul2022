{"ast":null,"code":"'use strict';\n/**\n * This file contains source code adapted from Snap.svg (licensed Apache-2.0).\n *\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\n */\n\n/* eslint no-fallthrough: \"off\" */\n\nvar p2s = /,?([a-z]),?/gi,\n    toFloat = parseFloat,\n    math = Math,\n    PI = math.PI,\n    mmin = math.min,\n    mmax = math.max,\n    pow = math.pow,\n    abs = math.abs,\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\d+)?)[\\s]*,?[\\s]*/ig;\n\nvar isArray = Array.isArray || function (o) {\n  return o instanceof Array;\n};\n\nfunction hasProperty(obj, property) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\nfunction clone(obj) {\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n\n  var res = new obj.constructor();\n\n  for (var key in obj) {\n    if (hasProperty(obj, key)) {\n      res[key] = clone(obj[key]);\n    }\n  }\n\n  return res;\n}\n\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\n\nfunction cacher(f) {\n  function newf() {\n    var arg = Array.prototype.slice.call(arguments, 0),\n        args = arg.join('\\u2400'),\n        cache = newf.cache = newf.cache || {},\n        count = newf.count = newf.count || [];\n\n    if (hasProperty(cache, args)) {\n      repush(count, args);\n      return cache[args];\n    }\n\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(0, arg);\n    return cache[args];\n  }\n\n  return newf;\n}\n\nfunction parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  var pth = paths(pathString);\n\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    h: 1,\n    l: 2,\n    m: 2,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    z: 0\n  },\n      data = [];\n\n  if (isArray(pathString) && isArray(pathString[0])) {\n    // rough assumption\n    data = clone(pathString);\n  }\n\n  if (!data.length) {\n    String(pathString).replace(pathCommand, function (a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n      c.replace(pathValues, function (a, b) {\n        b && params.push(+b);\n      });\n\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n  return data;\n}\n\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n\n  setTimeout(function () {\n    for (var key in p) {\n      if (hasProperty(p, key) && key != ps) {\n        p[key].sleep--;\n        !p[key].sleep && delete p[key];\n      }\n    }\n  });\n  return p[ps];\n}\n\nfunction rectBBox(x, y, width, height) {\n  if (arguments.length === 1) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    x2: x + width,\n    y2: y + height\n  };\n}\n\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\n\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n      t13 = pow(t1, 3),\n      t12 = pow(t1, 2),\n      t2 = t * t,\n      t3 = t2 * t,\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  return {\n    x: fixError(x),\n    y: fixError(y)\n  };\n}\n\nfunction bezierBBox(points) {\n  var bbox = curveBBox.apply(null, points);\n  return rectBBox(bbox.x0, bbox.y0, bbox.x1 - bbox.x0, bbox.y1 - bbox.y0);\n}\n\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n}\n\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = rectBBox(bbox1);\n  bbox2 = rectBBox(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z == null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2,\n      n = 12,\n      Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n      Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n      sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n        xbase = base3(ct, x1, x2, x3, x4),\n        ybase = base3(ct, y1, y2, y3, y4),\n        comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = fixError(nx / denominator),\n      py = fixError(ny / denominator),\n      px2 = +px.toFixed(2),\n      py2 = +py.toFixed(2);\n\n  if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n    return;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n}\n\nfunction fixError(number) {\n  return Math.round(number * 100000000000) / 100000000000;\n}\n\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n      bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  } // As an optimization, lines will have only 1 segment\n\n\n  var l1 = bezlen.apply(0, bez1),\n      l2 = bezlen.apply(0, bez2),\n      n1 = isLine(bez1) ? 1 : ~~(l1 / 5) || 1,\n      n2 = isLine(bez2) ? 1 : ~~(l2 / 5) || 1,\n      dots1 = [],\n      dots2 = [],\n      xy = {},\n      res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: p.x,\n      y: p.y,\n      t: i / n1\n    });\n  }\n\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({\n      x: p.x,\n      y: p.y,\n      t: i / n2\n    });\n  }\n\n  for (i = 0; i < n1; i++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n          di1 = dots1[i + 1],\n          dj = dots2[j],\n          dj1 = dots2[j + 1],\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y),\n          key;\n\n      if (is) {\n        key = is.x.toFixed(9) + '#' + is.y.toFixed(9);\n\n        if (xy[key]) {\n          continue;\n        }\n\n        xy[key] = true;\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n/**\n * Find or counts the intersections between two SVG paths.\n *\n * Returns a number in counting mode and a list of intersections otherwise.\n *\n * A single intersection entry contains the intersection coordinates (x, y)\n * as well as additional information regarding the intersecting segments\n * on each path (segment1, segment2) and the relative location of the\n * intersection on these segments (t1, t2).\n *\n * The path may be an SVG path string or a list of path components\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\n *\n * @example\n *\n * var intersections = findPathIntersections(\n *   'M0,0L100,100',\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\n * );\n *\n * // intersections = [\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\n * // ]\n *\n * @param {String|Array<PathDef>} path1\n * @param {String|Array<PathDef>} path2\n * @param {Boolean} [justCount=false]\n *\n * @return {Array<Intersection>|Number}\n */\n\n\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n  var x1,\n      y1,\n      x2,\n      y2,\n      x1m,\n      y1m,\n      x2m,\n      y2m,\n      bez1,\n      bez2,\n      res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n\n  if (!isArray(pathArray) || !isArray(pathArray && pathArray[0])) {\n    // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n\n        default:\n          for (var j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + (j % 2 ? x : y);\n          }\n\n      }\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n\n    pa0 = pa0.toUpperCase();\n\n    switch (r[0]) {\n      case 'Z':\n        x = +mx;\n        y = +my;\n        break;\n\n      case 'H':\n        x = r[1];\n        break;\n\n      case 'V':\n        y = r[1];\n        break;\n\n      case 'M':\n        mx = r[r.length - 2];\n        my = r[r.length - 1];\n\n      default:\n        x = r[r.length - 2];\n        y = r[r.length - 1];\n    }\n  }\n\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n  return res;\n}\n\nfunction isLine(bez) {\n  return bez[0] === bez[2] && bez[1] === bez[3] && bez[4] === bez[6] && bez[5] === bez[7];\n}\n\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n}\n\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n}\n\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n      rad = PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = cacher(function (x, y, rad) {\n    var X = x * math.cos(rad) - y * math.sin(rad),\n        Y = x * math.sin(rad) + y * math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  });\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n  var c1 = math.cos(f1),\n      s1 = math.sin(f1),\n      c2 = math.cos(f2),\n      s2 = math.sin(f2),\n      t = math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n} // Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\n\n\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a,\n      b,\n      c,\n      t,\n      t1,\n      t2,\n      b2ac,\n      sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    x0: mmin.apply(0, bounds[0]),\n    y0: mmin.apply(0, bounds[1]),\n    x1: mmax.apply(0, bounds[0]),\n    y1: mmax.apply(0, bounds[1])\n  };\n}\n\nfunction pathToCurve(path) {\n  var pth = paths(path); // return cached curve, if existing\n\n  if (pth.curve) {\n    return pathClone(pth.curve);\n  }\n\n  var curvedPath = pathToAbsolute(path),\n      attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  },\n      processPath = function (path, d, pathCommand) {\n    var nx, ny;\n\n    if (!path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n\n    switch (path[0]) {\n      case 'M':\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n\n      case 'A':\n        path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n\n      case 'S':\n        if (pathCommand == 'C' || pathCommand == 'S') {\n          // In 'S' case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n\n        path = ['C', nx, ny].concat(path.slice(1));\n        break;\n\n      case 'T':\n        if (pathCommand == 'Q' || pathCommand == 'T') {\n          // In 'T' case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n          d.qy = d.y * 2 - d.qy; // to case 'S'.\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n\n        path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n\n      case 'Q':\n        d.qx = path[1];\n        d.qy = path[2];\n        path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n\n      case 'L':\n        path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n        break;\n\n      case 'H':\n        path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n        break;\n\n      case 'V':\n        path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n        break;\n\n      case 'Z':\n        path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n        break;\n    }\n\n    return path;\n  },\n      fixArc = function (pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n\n      while (pi.length) {\n        pathCommands[i] = 'A'; // if created multiple C:s, their original seg is saved\n\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n\n      pp.splice(i, 1);\n      ii = curvedPath.length;\n    }\n  },\n      pathCommands = [],\n      // path commands of original path p\n  pfirst = '',\n      // temporary holder for original path command\n  pathCommand = ''; // holder for previous path command of original path\n\n\n  for (var i = 0, ii = curvedPath.length; i < ii; i++) {\n    curvedPath[i] && (pfirst = curvedPath[i][0]); // save current path command\n\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n      {\n        pathCommands[i] = pfirst; // Save current path command\n\n        i && (pathCommand = pathCommands[i - 1]); // Get previous path command pathCommand\n      }\n\n    curvedPath[i] = processPath(curvedPath[i], attrs, pathCommand); // Previous path command is inputted to processPath\n\n    if (pathCommands[i] != 'A' && pfirst == 'C') pathCommands[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(curvedPath, i); // fixArc adds also the right amount of A:s to pathCommands\n\n    var seg = curvedPath[i],\n        seglen = seg.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n  } // cache curve\n\n\n  pth.curve = pathClone(curvedPath);\n  return curvedPath;\n}\n\nmodule.exports = findPathIntersections;","map":{"version":3,"names":["p2s","toFloat","parseFloat","math","Math","PI","mmin","min","mmax","max","pow","abs","pathCommand","pathValues","isArray","Array","o","hasProperty","obj","property","Object","prototype","hasOwnProperty","call","clone","res","constructor","key","repush","array","item","i","ii","length","push","splice","cacher","f","newf","arg","slice","arguments","args","join","cache","count","shift","apply","parsePathString","pathString","pth","paths","arr","paramCounts","a","c","h","l","m","q","s","t","v","z","data","String","replace","b","params","name","toLowerCase","concat","toString","ps","p","sleep","setTimeout","rectBBox","x","y","width","height","x2","y2","pathToString","pathClone","pathArray","findDotsAtSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t1","t13","t12","t2","t3","fixError","bezierBBox","points","bbox","curveBBox","x0","y0","x1","y1","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","bezlen","x3","y3","x4","y4","z2","n","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","sqrt","intersectLines","nx","ny","denominator","px","py","px2","toFixed","py2","number","round","findBezierIntersections","bez1","bez2","justCount","l1","l2","n1","isLine","n2","dots1","dots2","xy","j","di","di1","dj","dj1","ci","cj","is","findPathIntersections","path1","path2","pathToCurve","x1m","y1m","x2m","y2m","pi","jj","pj","intr","k","kk","segment1","segment2","pathToAbsolute","mx","my","start","pa0","r","pa","toUpperCase","bez","lineToCurve","qubicToCurve","ax","ay","_13","_23","arcToCurve","rx","ry","angle","large_arc_flag","sweep_flag","recursive","_120","rad","rotate","X","cos","sin","Y","rx2","ry2","cx","cy","f1","asin","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","split","newres","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","path","curve","curvedPath","attrs","bx","by","qx","qy","processPath","d","T","Q","fixArc","pp","pathCommands","pfirst","seg","seglen","module","exports"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/path-intersection/intersect.js"],"sourcesContent":["'use strict';\n\n/**\n * This file contains source code adapted from Snap.svg (licensed Apache-2.0).\n *\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\n */\n\n/* eslint no-fallthrough: \"off\" */\n\nvar p2s = /,?([a-z]),?/gi,\n    toFloat = parseFloat,\n    math = Math,\n    PI = math.PI,\n    mmin = math.min,\n    mmax = math.max,\n    pow = math.pow,\n    abs = math.abs,\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\d+)?)[\\s]*,?[\\s]*/ig;\n\nvar isArray = Array.isArray || function(o) { return o instanceof Array; };\n\nfunction hasProperty(obj, property) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\nfunction clone(obj) {\n\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n\n  var res = new obj.constructor;\n\n  for (var key in obj) {\n    if (hasProperty(obj, key)) {\n      res[key] = clone(obj[key]);\n    }\n  }\n\n  return res;\n}\n\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\n\nfunction cacher(f) {\n\n  function newf() {\n\n    var arg = Array.prototype.slice.call(arguments, 0),\n        args = arg.join('\\u2400'),\n        cache = newf.cache = newf.cache || {},\n        count = newf.count = newf.count || [];\n\n    if (hasProperty(cache, args)) {\n      repush(count, args);\n      return cache[args];\n    }\n\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(0, arg);\n\n    return cache[args];\n  }\n  return newf;\n}\n\nfunction parsePathString(pathString) {\n\n  if (!pathString) {\n    return null;\n  }\n\n  var pth = paths(pathString);\n\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n\n  var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0 },\n      data = [];\n\n  if (isArray(pathString) && isArray(pathString[0])) { // rough assumption\n    data = clone(pathString);\n  }\n\n  if (!data.length) {\n\n    String(pathString).replace(pathCommand, function(a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n\n      c.replace(pathValues, function(a, b) {\n        b && params.push(+b);\n      });\n\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n\n  return data;\n}\n\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n\n  setTimeout(function() {\n    for (var key in p) {\n      if (hasProperty(p, key) && key != ps) {\n        p[key].sleep--;\n        !p[key].sleep && delete p[key];\n      }\n    }\n  });\n\n  return p[ps];\n}\n\nfunction rectBBox(x, y, width, height) {\n\n  if (arguments.length === 1) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    x2: x + width,\n    y2: y + height\n  };\n}\n\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\n\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n      t13 = pow(t1, 3),\n      t12 = pow(t1, 2),\n      t2 = t * t,\n      t3 = t2 * t,\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n\n  return {\n    x: fixError(x),\n    y: fixError(y)\n  };\n}\n\nfunction bezierBBox(points) {\n\n  var bbox = curveBBox.apply(null, points);\n\n  return rectBBox(\n    bbox.x0,\n    bbox.y0,\n    bbox.x1 - bbox.x0,\n    bbox.y1 - bbox.y0\n  );\n}\n\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x &&\n    x <= bbox.x + bbox.width &&\n    y >= bbox.y &&\n    y <= bbox.y + bbox.height;\n}\n\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = rectBBox(bbox1);\n  bbox2 = rectBBox(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\n  if (z == null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n\n  var z2 = z / 2,\n      n = 12,\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n      sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n        xbase = base3(ct, x1, x2, x3, x4),\n        ybase = base3(ct, y1, y2, y3, y4),\n        comb = xbase * xbase + ybase * ybase;\n\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\n\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n  if (\n    mmax(x1, x2) < mmin(x3, x4) ||\n      mmin(x1, x2) > mmax(x3, x4) ||\n      mmax(y1, y2) < mmin(y3, y4) ||\n      mmin(y1, y2) > mmax(y3, y4)\n  ) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = fixError(nx / denominator),\n      py = fixError(ny / denominator),\n      px2 = +px.toFixed(2),\n      py2 = +py.toFixed(2);\n\n  if (\n    px2 < +mmin(x1, x2).toFixed(2) ||\n      px2 > +mmax(x1, x2).toFixed(2) ||\n      px2 < +mmin(x3, x4).toFixed(2) ||\n      px2 > +mmax(x3, x4).toFixed(2) ||\n      py2 < +mmin(y1, y2).toFixed(2) ||\n      py2 > +mmax(y1, y2).toFixed(2) ||\n      py2 < +mmin(y3, y4).toFixed(2) ||\n      py2 > +mmax(y3, y4).toFixed(2)\n  ) {\n    return;\n  }\n\n  return { x: px, y: py };\n}\n\nfunction fixError(number) {\n  return Math.round(number * 100000000000) / 100000000000;\n}\n\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n      bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  // As an optimization, lines will have only 1 segment\n\n  var l1 = bezlen.apply(0, bez1),\n      l2 = bezlen.apply(0, bez2),\n      n1 = isLine(bez1) ? 1 : ~~(l1 / 5) || 1,\n      n2 = isLine(bez2) ? 1 : ~~(l2 / 5) || 1,\n      dots1 = [],\n      dots2 = [],\n      xy = {},\n      res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\n  }\n\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\n  }\n\n  for (i = 0; i < n1; i++) {\n\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n          di1 = dots1[i + 1],\n          dj = dots2[j],\n          dj1 = dots2[j + 1],\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y),\n          key;\n\n      if (is) {\n        key = is.x.toFixed(9) + '#' + is.y.toFixed(9);\n\n        if (xy[key]) {\n          continue;\n        }\n\n        xy[key] = true;\n\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\n/**\n * Find or counts the intersections between two SVG paths.\n *\n * Returns a number in counting mode and a list of intersections otherwise.\n *\n * A single intersection entry contains the intersection coordinates (x, y)\n * as well as additional information regarding the intersecting segments\n * on each path (segment1, segment2) and the relative location of the\n * intersection on these segments (t1, t2).\n *\n * The path may be an SVG path string or a list of path components\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\n *\n * @example\n *\n * var intersections = findPathIntersections(\n *   'M0,0L100,100',\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\n * );\n *\n * // intersections = [\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\n * // ]\n *\n * @param {String|Array<PathDef>} path1\n * @param {String|Array<PathDef>} path2\n * @param {Boolean} [justCount=false]\n *\n * @return {Array<Intersection>|Number}\n */\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n      res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n\n  if (!isArray(pathArray) || !isArray(pathArray && pathArray[0])) { // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n      case 'A':\n        r[1] = pa[1];\n        r[2] = pa[2];\n        r[3] = pa[3];\n        r[4] = pa[4];\n        r[5] = pa[5];\n        r[6] = +pa[6] + x;\n        r[7] = +pa[7] + y;\n        break;\n      case 'V':\n        r[1] = +pa[1] + y;\n        break;\n      case 'H':\n        r[1] = +pa[1] + x;\n        break;\n      case 'M':\n        mx = +pa[1] + x;\n        my = +pa[2] + y;\n      default:\n        for (var j = 1, jj = pa.length; j < jj; j++) {\n          r[j] = +pa[j] + ((j % 2) ? x : y);\n        }\n      }\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n\n    switch (r[0]) {\n    case 'Z':\n      x = +mx;\n      y = +my;\n      break;\n    case 'H':\n      x = r[1];\n      break;\n    case 'V':\n      y = r[1];\n      break;\n    case 'M':\n      mx = r[r.length - 2];\n      my = r[r.length - 1];\n    default:\n      x = r[r.length - 2];\n      y = r[r.length - 1];\n    }\n  }\n\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n\n  return res;\n}\n\nfunction isLine(bez) {\n  return (\n    bez[0] === bez[2] &&\n    bez[1] === bez[3] &&\n    bez[4] === bez[6] &&\n    bez[5] === bez[7]\n  );\n}\n\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [\n    x1, y1, x2,\n    y2, x2, y2\n  ];\n}\n\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [\n    _13 * x1 + _23 * ax,\n    _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax,\n    _13 * y2 + _23 * ay,\n    x2,\n    y2\n  ];\n}\n\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n      rad = PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = cacher(function(x, y, rad) {\n        var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n\n        return { x: X, y: Y };\n      });\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    var x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n\n  var c1 = math.cos(f1),\n      s1 = math.sin(f1),\n      c2 = math.cos(f2),\n      s2 = math.sin(f2),\n      t = math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n}\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (abs(a) < 1e-12) {\n\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    x0: mmin.apply(0, bounds[0]),\n    y0: mmin.apply(0, bounds[1]),\n    x1: mmax.apply(0, bounds[0]),\n    y1: mmax.apply(0, bounds[1])\n  };\n}\n\nfunction pathToCurve(path) {\n\n  var pth = paths(path);\n\n  // return cached curve, if existing\n  if (pth.curve) {\n    return pathClone(pth.curve);\n  }\n\n  var curvedPath = pathToAbsolute(path),\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n      processPath = function(path, d, pathCommand) {\n        var nx, ny;\n\n        if (!path) {\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n\n        switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pathCommand == 'C' || pathCommand == 'S') {\n\n            // In 'S' case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx;\n\n            // And reflect the previous\n            ny = d.y * 2 - d.by;\n\n            // command's control point relative to the current point.\n          }\n          else {\n\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pathCommand == 'Q' || pathCommand == 'T') {\n\n            // In 'T' case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx;\n\n            // And make a reflection similar\n            d.qy = d.y * 2 - d.qy;\n\n            // to case 'S'.\n          }\n          else {\n\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n        case 'L':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n          break;\n        }\n\n        return path;\n      },\n\n      fixArc = function(pp, i) {\n\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pathCommands[i] = 'A'; // if created multiple C:s, their original seg is saved\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = curvedPath.length;\n        }\n      },\n\n      pathCommands = [], // path commands of original path p\n      pfirst = '', // temporary holder for original path command\n      pathCommand = ''; // holder for previous path command of original path\n\n  for (var i = 0, ii = curvedPath.length; i < ii; i++) {\n    curvedPath[i] && (pfirst = curvedPath[i][0]); // save current path command\n\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n    {\n      pathCommands[i] = pfirst; // Save current path command\n      i && (pathCommand = pathCommands[i - 1]); // Get previous path command pathCommand\n    }\n    curvedPath[i] = processPath(curvedPath[i], attrs, pathCommand); // Previous path command is inputted to processPath\n\n    if (pathCommands[i] != 'A' && pfirst == 'C') pathCommands[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(curvedPath, i); // fixArc adds also the right amount of A:s to pathCommands\n\n    var seg = curvedPath[i],\n        seglen = seg.length;\n\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n  }\n\n  // cache curve\n  pth.curve = pathClone(curvedPath);\n\n  return curvedPath;\n}\n\nmodule.exports = findPathIntersections;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}