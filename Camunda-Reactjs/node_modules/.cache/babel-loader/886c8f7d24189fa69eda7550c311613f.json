{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Input from '../../elements/Input';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Input} />.\n * @see Form\n * @see Input\n */\n\nfunction FormInput(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormInput, props);\n  var ElementType = getElementType(FormInput, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormInput.handledProps = ['as', 'control'];\nFormInput._meta = {\n  name: 'FormInput',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormInput.defaultProps = {\n  as: FormField,\n  control: Input\n};\nexport default FormInput;","map":{"version":3,"names":["_extends","React","customPropTypes","getElementType","getUnhandledProps","META","Input","FormField","FormInput","props","control","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","defaultProps"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Form/FormInput.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\n\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Input from '../../elements/Input';\nimport FormField from './FormField';\n\n/**\n * Sugar for <Form.Field control={Input} />.\n * @see Form\n * @see Input\n */\nfunction FormInput(props) {\n  var control = props.control;\n\n  var rest = getUnhandledProps(FormInput, props);\n  var ElementType = getElementType(FormInput, props);\n\n  return React.createElement(ElementType, _extends({}, rest, { control: control }));\n}\n\nFormInput.handledProps = ['as', 'control'];\nFormInput._meta = {\n  name: 'FormInput',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\n\nFormInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\n\nFormInput.defaultProps = {\n  as: FormField,\n  control: Input\n};\n\nexport default FormInput;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,EAA6DC,IAA7D,QAAyE,WAAzE;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;EAEA,IAAIC,IAAI,GAAGP,iBAAiB,CAACI,SAAD,EAAYC,KAAZ,CAA5B;EACA,IAAIG,WAAW,GAAGT,cAAc,CAACK,SAAD,EAAYC,KAAZ,CAAhC;EAEA,OAAOR,KAAK,CAACY,aAAN,CAAoBD,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKW,IAAL,EAAW;IAAED,OAAO,EAAEA;EAAX,CAAX,CAAzC,CAAP;AACD;;AAEDF,SAAS,CAACM,YAAV,GAAyB,CAAC,IAAD,EAAO,SAAP,CAAzB;AACAN,SAAS,CAACO,KAAV,GAAkB;EAChBC,IAAI,EAAE,WADU;EAEhBC,MAAM,EAAE,MAFQ;EAGhBC,IAAI,EAAEb,IAAI,CAACc,KAAL,CAAWC;AAHD,CAAlB;AAMAZ,SAAS,CAACa,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC5D;EACAC,EAAE,EAAEvB,eAAe,CAACuB,EAFwC;;EAI5D;EACAf,OAAO,EAAEH,SAAS,CAACc,SAAV,CAAoBX;AAL+B,CAAxC,GAMlB,EANJ;AAQAF,SAAS,CAACkB,YAAV,GAAyB;EACvBD,EAAE,EAAElB,SADmB;EAEvBG,OAAO,EAAEJ;AAFc,CAAzB;AAKA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}