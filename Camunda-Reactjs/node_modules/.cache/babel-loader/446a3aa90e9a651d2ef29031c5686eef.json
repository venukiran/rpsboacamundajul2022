{"ast":null,"code":"import { log10 } from '../../util/Math';\n/**\n * Get step size for given range and number of steps.\n *\n * @param {Object} range\n * @param {number} range.min\n * @param {number} range.max\n */\n\nexport function getStepSize(range, steps) {\n  var minLinearRange = log10(range.min),\n      maxLinearRange = log10(range.max);\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\n  return absoluteLinearRange / steps;\n}\nexport function cap(range, scale) {\n  return Math.max(range.min, Math.min(range.max, scale));\n}","map":{"version":3,"names":["log10","getStepSize","range","steps","minLinearRange","min","maxLinearRange","max","absoluteLinearRange","Math","abs","cap","scale"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/navigation/zoomscroll/ZoomUtil.js"],"sourcesContent":["import {\n  log10\n} from '../../util/Math';\n\n/**\n * Get step size for given range and number of steps.\n *\n * @param {Object} range\n * @param {number} range.min\n * @param {number} range.max\n */\nexport function getStepSize(range, steps) {\n\n  var minLinearRange = log10(range.min),\n      maxLinearRange = log10(range.max);\n\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\n\n  return absoluteLinearRange / steps;\n}\n\nexport function cap(range, scale) {\n  return Math.max(range.min, Math.min(range.max, scale));\n}\n"],"mappings":"AAAA,SACEA,KADF,QAEO,iBAFP;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;EAExC,IAAIC,cAAc,GAAGJ,KAAK,CAACE,KAAK,CAACG,GAAP,CAA1B;EAAA,IACIC,cAAc,GAAGN,KAAK,CAACE,KAAK,CAACK,GAAP,CAD1B;EAGA,IAAIC,mBAAmB,GAAGC,IAAI,CAACC,GAAL,CAASN,cAAT,IAA2BK,IAAI,CAACC,GAAL,CAASJ,cAAT,CAArD;EAEA,OAAOE,mBAAmB,GAAGL,KAA7B;AACD;AAED,OAAO,SAASQ,GAAT,CAAaT,KAAb,EAAoBU,KAApB,EAA2B;EAChC,OAAOH,IAAI,CAACF,GAAL,CAASL,KAAK,CAACG,GAAf,EAAoBI,IAAI,CAACJ,GAAL,CAASH,KAAK,CAACK,GAAf,EAAoBK,KAApB,CAApB,CAAP;AACD"},"metadata":{},"sourceType":"module"}