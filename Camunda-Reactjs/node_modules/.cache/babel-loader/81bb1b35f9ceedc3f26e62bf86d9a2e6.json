{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width;\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props); // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), createHTMLLabel(label));\n  } // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n\n\n  var controlProps = _extends({}, rest, {\n    content: content,\n    children: children,\n    disabled: disabled,\n    required: required,\n    type: type // wrap HTML checkboxes/radios in the label\n\n  });\n\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, React.createElement('label', null, createElement(control, controlProps), ' ', label));\n  } // pass label prop to controls that support it\n\n\n  if (control === Checkbox || control === Radio) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, createElement(control, _extends({}, controlProps, {\n      label: label\n    })));\n  } // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n\n  return React.createElement(ElementType, {\n    className: classes\n  }, createHTMLLabel(label, {\n    defaultProps: {\n      htmlFor: _get(controlProps, 'id')\n    }\n  }), createElement(control, controlProps));\n}\n\nFormField.handledProps = ['as', 'children', 'className', 'content', 'control', 'disabled', 'error', 'inline', 'label', 'required', 'type', 'width'];\nFormField._meta = {\n  name: 'FormField',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state. */\n  error: PropTypes.bool,\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control'])] // don't strictly validate HTML types\n  // a control might be passed that uses a `type` prop with unknown values\n  // let the control validate if for us\n  ),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default FormField;","map":{"version":3,"names":["_extends","_get","_isNil","cx","PropTypes","React","createElement","childrenUtils","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useWidthProp","Checkbox","Radio","FormField","props","children","className","content","control","disabled","error","inline","label","required","type","width","classes","rest","ElementType","isNil","controlProps","defaultProps","htmlFor","handledProps","_meta","name","parent","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","some","func","oneOf","bool","oneOfType","object","every","demand","WIDTHS"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Form/FormField.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\n\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see Visibility\n */\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width;\n\n\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props);\n\n  // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return React.createElement(\n        ElementType,\n        _extends({}, rest, { className: classes }),\n        childrenUtils.isNil(children) ? content : children\n      );\n    }\n\n    return React.createElement(\n      ElementType,\n      _extends({}, rest, { className: classes }),\n      createHTMLLabel(label)\n    );\n  }\n\n  // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n  var controlProps = _extends({}, rest, { content: content, children: children, disabled: disabled, required: required, type: type\n\n    // wrap HTML checkboxes/radios in the label\n  });if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return React.createElement(\n      ElementType,\n      { className: classes },\n      React.createElement(\n        'label',\n        null,\n        createElement(control, controlProps),\n        ' ',\n        label\n      )\n    );\n  }\n\n  // pass label prop to controls that support it\n  if (control === Checkbox || control === Radio) {\n    return React.createElement(\n      ElementType,\n      { className: classes },\n      createElement(control, _extends({}, controlProps, { label: label }))\n    );\n  }\n\n  // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n  return React.createElement(\n    ElementType,\n    { className: classes },\n    createHTMLLabel(label, { defaultProps: {\n        htmlFor: _get(controlProps, 'id') }\n    }),\n    createElement(control, controlProps)\n  );\n}\n\nFormField.handledProps = ['as', 'children', 'className', 'content', 'control', 'disabled', 'error', 'inline', 'label', 'required', 'type', 'width'];\nFormField._meta = {\n  name: 'FormField',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\n\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state. */\n  error: PropTypes.bool,\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control'])]\n  // don't strictly validate HTML types\n  // a control might be passed that uses a `type` prop with unknown values\n  // let the control validate if for us\n  ),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\n\nexport default FormField;"],"mappings":"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"},"metadata":{},"sourceType":"module"}