{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n/**\n * A comment can contain an action.\n */\n\nfunction CommentAction(props) {\n  var active = props.active,\n      className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx(useKeyOnly(active, 'active'), className);\n  var rest = getUnhandledProps(CommentAction, props);\n  var ElementType = getElementType(CommentAction, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentAction.handledProps = ['active', 'as', 'children', 'className', 'content'];\nCommentAction._meta = {\n  name: 'CommentAction',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\nCommentAction.defaultProps = {\n  as: 'a'\n};\nCommentAction.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Style as the currently active action. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentAction;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","CommentAction","props","active","className","children","content","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","VIEW","defaultProps","as","propTypes","process","env","NODE_ENV","bool","node","string","contentShorthand"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Comment/CommentAction.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\n * A comment can contain an action.\n */\nfunction CommentAction(props) {\n  var active = props.active,\n      className = props.className,\n      children = props.children,\n      content = props.content;\n\n\n  var classes = cx(useKeyOnly(active, 'active'), className);\n  var rest = getUnhandledProps(CommentAction, props);\n  var ElementType = getElementType(CommentAction, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nCommentAction.handledProps = ['active', 'as', 'children', 'className', 'content'];\nCommentAction._meta = {\n  name: 'CommentAction',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\n\nCommentAction.defaultProps = {\n  as: 'a'\n};\n\nCommentAction.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Style as the currently active action. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\n\nexport default CommentAction;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,UAAlF,QAAoG,WAApG;AAEA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;EAAA,IAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;EAMA,IAAIC,OAAO,GAAGf,EAAE,CAACQ,UAAU,CAACG,MAAD,EAAS,QAAT,CAAX,EAA+BC,SAA/B,CAAhB;EACA,IAAII,IAAI,GAAGV,iBAAiB,CAACG,aAAD,EAAgBC,KAAhB,CAA5B;EACA,IAAIO,WAAW,GAAGZ,cAAc,CAACI,aAAD,EAAgBC,KAAhB,CAAhC;EAEA,OAAOR,KAAK,CAACgB,aAAN,CACLD,WADK,EAELlB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;IAAEJ,SAAS,EAAEG;EAAb,CAAX,CAFH,EAGLZ,aAAa,CAACgB,KAAd,CAAoBN,QAApB,IAAgCC,OAAhC,GAA0CD,QAHrC,CAAP;AAKD;;AAEDJ,aAAa,CAACW,YAAd,GAA6B,CAAC,QAAD,EAAW,IAAX,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,SAA1C,CAA7B;AACAX,aAAa,CAACY,KAAd,GAAsB;EACpBC,IAAI,EAAE,eADc;EAEpBC,MAAM,EAAE,SAFY;EAGpBC,IAAI,EAAEjB,IAAI,CAACkB,KAAL,CAAWC;AAHG,CAAtB;AAMAjB,aAAa,CAACkB,YAAd,GAA6B;EAC3BC,EAAE,EAAE;AADuB,CAA7B;AAIAnB,aAAa,CAACoB,SAAd,GAA0BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAChE;EACAJ,EAAE,EAAExB,eAAe,CAACwB,EAF4C;;EAIhE;EACAjB,MAAM,EAAEV,SAAS,CAACgC,IAL8C;;EAOhE;EACApB,QAAQ,EAAEZ,SAAS,CAACiC,IAR4C;;EAUhE;EACAtB,SAAS,EAAEX,SAAS,CAACkC,MAX2C;;EAahE;EACArB,OAAO,EAAEV,eAAe,CAACgC;AAduC,CAAxC,GAetB,EAfJ;AAiBA,eAAe3B,aAAf"},"metadata":{},"sourceType":"module"}