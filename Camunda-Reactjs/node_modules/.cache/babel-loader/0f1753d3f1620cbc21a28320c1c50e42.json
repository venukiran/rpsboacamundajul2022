{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n/**\n * A content sub-component for the Reveal.\n */\n\nfunction RevealContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx('ui', useKeyOnly(hidden, 'hidden'), useKeyOnly(visible, 'visible'), 'content', className);\n  var rest = getUnhandledProps(RevealContent, props);\n  var ElementType = getElementType(RevealContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nRevealContent.handledProps = ['as', 'children', 'className', 'content', 'hidden', 'visible'];\nRevealContent._meta = {\n  name: 'RevealContent',\n  parent: 'Reveal',\n  type: META.TYPES.ELEMENT\n};\nRevealContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A reveal may contain content that is visible before interaction. */\n  hidden: PropTypes.bool,\n\n  /** A reveal may contain content that is hidden before user interaction. */\n  visible: PropTypes.bool\n} : {};\nexport default RevealContent;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","RevealContent","props","children","className","content","hidden","visible","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/elements/Reveal/RevealContent.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\n * A content sub-component for the Reveal.\n */\nfunction RevealContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n\n\n  var classes = cx('ui', useKeyOnly(hidden, 'hidden'), useKeyOnly(visible, 'visible'), 'content', className);\n  var rest = getUnhandledProps(RevealContent, props);\n  var ElementType = getElementType(RevealContent, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nRevealContent.handledProps = ['as', 'children', 'className', 'content', 'hidden', 'visible'];\nRevealContent._meta = {\n  name: 'RevealContent',\n  parent: 'Reveal',\n  type: META.TYPES.ELEMENT\n};\n\nRevealContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A reveal may contain content that is visible before interaction. */\n  hidden: PropTypes.bool,\n\n  /** A reveal may contain content that is hidden before user interaction. */\n  visible: PropTypes.bool\n} : {};\n\nexport default RevealContent;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,UAAlF,QAAoG,WAApG;AAEA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,MAAM,GAAGJ,KAAK,CAACI,MAHnB;EAAA,IAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;EAOA,IAAIC,OAAO,GAAGhB,EAAE,CAAC,IAAD,EAAOQ,UAAU,CAACM,MAAD,EAAS,QAAT,CAAjB,EAAqCN,UAAU,CAACO,OAAD,EAAU,SAAV,CAA/C,EAAqE,SAArE,EAAgFH,SAAhF,CAAhB;EACA,IAAIK,IAAI,GAAGX,iBAAiB,CAACG,aAAD,EAAgBC,KAAhB,CAA5B;EACA,IAAIQ,WAAW,GAAGb,cAAc,CAACI,aAAD,EAAgBC,KAAhB,CAAhC;EAEA,OAAOR,KAAK,CAACiB,aAAN,CACLD,WADK,EAELnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;IAAEL,SAAS,EAAEI;EAAb,CAAX,CAFH,EAGLb,aAAa,CAACiB,KAAd,CAAoBT,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDF,aAAa,CAACY,YAAd,GAA6B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,QAA3C,EAAqD,SAArD,CAA7B;AACAZ,aAAa,CAACa,KAAd,GAAsB;EACpBC,IAAI,EAAE,eADc;EAEpBC,MAAM,EAAE,QAFY;EAGpBC,IAAI,EAAElB,IAAI,CAACmB,KAAL,CAAWC;AAHG,CAAtB;AAMAlB,aAAa,CAACmB,SAAd,GAA0BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAChE;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAF4C;;EAIhE;EACArB,QAAQ,EAAEV,SAAS,CAACgC,IAL4C;;EAOhE;EACArB,SAAS,EAAEX,SAAS,CAACiC,MAR2C;;EAUhE;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAXuC;;EAahE;EACArB,MAAM,EAAEb,SAAS,CAACmC,IAd8C;;EAgBhE;EACArB,OAAO,EAAEd,SAAS,CAACmC;AAjB6C,CAAxC,GAkBtB,EAlBJ;AAoBA,eAAe3B,aAAf"},"metadata":{},"sourceType":"module"}