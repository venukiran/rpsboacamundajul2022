{"ast":null,"code":"import { hasPrimaryModifier, hasSecondaryModifier, isPrimaryButton } from '../../util/Mouse';\nimport { find, isArray } from 'min-dash';\nexport default function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n  // Select elements on create\n  eventBus.on('create.end', 500, function (event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        elements = context.elements,\n        hints = context.hints || {},\n        autoSelect = hints.autoSelect;\n\n    if (canExecute) {\n      if (autoSelect === false) {\n        // Select no elements\n        return;\n      }\n\n      if (isArray(autoSelect)) {\n        selection.select(autoSelect);\n      } else {\n        // Select all elements by default\n        selection.select(elements.filter(isShown));\n      }\n    }\n  }); // Select connection targets on connect\n\n  eventBus.on('connect.end', 500, function (event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        hover = context.hover;\n\n    if (canExecute && hover) {\n      selection.select(hover);\n    }\n  }); // Select shapes on move\n\n  eventBus.on('shape.move.end', 500, function (event) {\n    var previousSelection = event.previousSelection || [];\n    var shape = elementRegistry.get(event.context.shape.id); // Always select main shape on move\n\n    var isSelected = find(previousSelection, function (selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!isSelected) {\n      selection.select(shape);\n    }\n  }); // Select elements on click\n\n  eventBus.on('element.click', function (event) {\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var element = event.element;\n\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1; // Add to selection if CTRL or SHIFT pressed\n\n    var add = hasPrimaryModifier(event) || hasSecondaryModifier(event);\n\n    if (isSelected && isMultiSelect) {\n      if (add) {\n        // Deselect element\n        return selection.deselect(element);\n      } else {\n        // Select element only\n        return selection.select(element);\n      }\n    } else if (!isSelected) {\n      // Select element\n      selection.select(element, add);\n    } else {\n      // Deselect element\n      selection.deselect(element);\n    }\n  });\n}\nSelectionBehavior.$inject = ['eventBus', 'selection', 'canvas', 'elementRegistry'];\n\nfunction isShown(element) {\n  return !element.hidden;\n}","map":{"version":3,"names":["hasPrimaryModifier","hasSecondaryModifier","isPrimaryButton","find","isArray","SelectionBehavior","eventBus","selection","canvas","elementRegistry","on","event","context","canExecute","elements","hints","autoSelect","select","filter","isShown","hover","previousSelection","shape","get","id","isSelected","selectedShape","element","getRootElement","isMultiSelect","length","add","deselect","$inject","hidden"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/features/selection/SelectionBehavior.js"],"sourcesContent":["import {\n  hasPrimaryModifier,\n  hasSecondaryModifier,\n  isPrimaryButton\n} from '../../util/Mouse';\n\nimport {\n  find,\n  isArray\n} from 'min-dash';\n\n\nexport default function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n\n  // Select elements on create\n  eventBus.on('create.end', 500, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        elements = context.elements,\n        hints = context.hints || {},\n        autoSelect = hints.autoSelect;\n\n    if (canExecute) {\n      if (autoSelect === false) {\n\n        // Select no elements\n        return;\n      }\n\n      if (isArray(autoSelect)) {\n        selection.select(autoSelect);\n      } else {\n\n        // Select all elements by default\n        selection.select(elements.filter(isShown));\n      }\n    }\n  });\n\n  // Select connection targets on connect\n  eventBus.on('connect.end', 500, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        hover = context.hover;\n\n    if (canExecute && hover) {\n      selection.select(hover);\n    }\n  });\n\n  // Select shapes on move\n  eventBus.on('shape.move.end', 500, function(event) {\n    var previousSelection = event.previousSelection || [];\n\n    var shape = elementRegistry.get(event.context.shape.id);\n\n    // Always select main shape on move\n    var isSelected = find(previousSelection, function(selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!isSelected) {\n      selection.select(shape);\n    }\n  });\n\n  // Select elements on click\n  eventBus.on('element.click', function(event) {\n\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var element = event.element;\n\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1;\n\n    // Add to selection if CTRL or SHIFT pressed\n    var add = hasPrimaryModifier(event) || hasSecondaryModifier(event);\n\n    if (isSelected && isMultiSelect) {\n      if (add) {\n\n        // Deselect element\n        return selection.deselect(element);\n      } else {\n\n        // Select element only\n        return selection.select(element);\n      }\n    } else if (!isSelected) {\n\n      // Select element\n      selection.select(element, add);\n    } else {\n\n      // Deselect element\n      selection.deselect(element);\n    }\n  });\n}\n\nSelectionBehavior.$inject = [\n  'eventBus',\n  'selection',\n  'canvas',\n  'elementRegistry'\n];\n\n\nfunction isShown(element) {\n  return !element.hidden;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}