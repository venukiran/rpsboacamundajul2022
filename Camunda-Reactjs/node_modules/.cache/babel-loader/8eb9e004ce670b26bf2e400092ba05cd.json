{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Statistic from './Statistic';\n/**\n * A group of statistics.\n */\n\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useWidthProp(widths), 'statistics', className);\n  var rest = getUnhandledProps(StatisticGroup, props);\n  var ElementType = getElementType(StatisticGroup, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  if (!childrenUtils.isNil(content)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(items, function (item) {\n    return Statistic.create(item);\n  }));\n}\n\nStatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'content', 'horizontal', 'inverted', 'items', 'size', 'widths'];\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: META.TYPES.VIEW,\n  parent: 'Statistic'\n};\nStatisticGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Array of props for Statistic. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default StatisticGroup;","map":{"version":3,"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useWidthProp","Statistic","StatisticGroup","props","children","className","color","content","horizontal","inverted","items","size","widths","classes","rest","ElementType","isNil","createElement","item","create","handledProps","_meta","name","type","TYPES","VIEW","parent","propTypes","process","env","NODE_ENV","as","node","string","oneOf","COLORS","contentShorthand","bool","collectionShorthand","SIZES","WIDTHS"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticGroup.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Statistic from './Statistic';\n\n/**\n * A group of statistics.\n */\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n\n\n  var classes = cx('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useWidthProp(widths), 'statistics', className);\n  var rest = getUnhandledProps(StatisticGroup, props);\n  var ElementType = getElementType(StatisticGroup, props);\n\n  if (!childrenUtils.isNil(children)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    children\n  );\n  if (!childrenUtils.isNil(content)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    content\n  );\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    _map(items, function (item) {\n      return Statistic.create(item);\n    })\n  );\n}\n\nStatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'content', 'horizontal', 'inverted', 'items', 'size', 'widths'];\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: META.TYPES.VIEW,\n  parent: 'Statistic'\n};\n\nStatisticGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Array of props for Statistic. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\n\nexport default StatisticGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}