{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Camunda\\\\rpsboacamundajul2022\\\\Camunda-Reactjs\\\\src\\\\containers\\\\StartProcessListPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Header } from 'semantic-ui-react';\nimport BPMNDiagram from '../components/BPMNDiagram';\nimport List from '../components/List';\nimport { loadProcessDefinitionsWithXML } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StartProcessListPage extends Component {\n  componentWillMount() {\n    this.props.loadProcessDefinitionsWithXML();\n  }\n\n  renderProcess(process) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/startProcess/key/\".concat(process.key),\n        children: [process.name, \" - Version \", process.version]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BPMNDiagram, {\n        xml: process.xml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, process.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      processDefinition,\n      processDefinitionXML\n    } = this.props;\n\n    if (!processDefinition) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading process definitions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    } else {\n      Object.keys(processDefinition).forEach(id => {\n        if (processDefinitionXML && processDefinitionXML[id]) {\n          processDefinition[id].xml = processDefinitionXML[id].bpmn20Xml;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(Container, {\n        text: true,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          children: \"Choose process to start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          renderItem: this.renderProcess,\n          items: processDefinition,\n          loadingLabel: \"Loading process definitions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const params = ownProps.match.params;\n  return { ...params,\n    ...state.entities\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  loadProcessDefinitionsWithXML\n})(StartProcessListPage));","map":{"version":3,"names":["React","Component","connect","withRouter","Link","Container","Header","BPMNDiagram","List","loadProcessDefinitionsWithXML","StartProcessListPage","componentWillMount","props","renderProcess","process","key","name","version","xml","id","render","console","log","processDefinition","processDefinitionXML","Object","keys","forEach","bpmn20Xml","mapStateToProps","state","ownProps","params","match","entities"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/src/containers/StartProcessListPage.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { Container, Header } from 'semantic-ui-react'\r\nimport BPMNDiagram from '../components/BPMNDiagram'\r\nimport List from '../components/List'\r\nimport { loadProcessDefinitionsWithXML } from '../actions'\r\n\r\nclass StartProcessListPage extends Component {\r\n  componentWillMount() {\r\n    this.props.loadProcessDefinitionsWithXML();\r\n  }\r\n\r\n  renderProcess(process) {\r\n    return <li key={process.id}>\r\n      <Link to={`/startProcess/key/${process.key}`}>{process.name} - Version {process.version}</Link>\r\n      <BPMNDiagram xml={process.xml}></BPMNDiagram>\r\n    </li>\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    const { processDefinition, processDefinitionXML } = this.props\r\n\r\n    if (!processDefinition) {\r\n      return (\r\n        <div><p>Loading process definitions...</p></div>\r\n      )\r\n    } else {\r\n      Object.keys(processDefinition).forEach((id) => {\r\n        if (processDefinitionXML && processDefinitionXML[id]) {\r\n          processDefinition[id].xml = processDefinitionXML[id].bpmn20Xml\r\n        }\r\n      })\r\n\r\n      return (\r\n        <Container text>\r\n          <Header as='h2'>Choose process to start</Header>\r\n          <List renderItem={this.renderProcess}\r\n            items={processDefinition}\r\n            loadingLabel={`Loading process definitions...`}\r\n            />\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const params = ownProps.match.params\r\n  return {\r\n    ...params,\r\n    ...state.entities\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n  loadProcessDefinitionsWithXML\r\n})(StartProcessListPage))\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,6BAAT,QAA8C,YAA9C;;;AAEA,MAAMC,oBAAN,SAAmCT,SAAnC,CAA6C;EAC3CU,kBAAkB,GAAG;IACnB,KAAKC,KAAL,CAAWH,6BAAX;EACD;;EAEDI,aAAa,CAACC,OAAD,EAAU;IACrB,oBAAO;MAAA,wBACL,QAAC,IAAD;QAAM,EAAE,8BAAuBA,OAAO,CAACC,GAA/B,CAAR;QAAA,WAA+CD,OAAO,CAACE,IAAvD,iBAAwEF,OAAO,CAACG,OAAhF;MAAA;QAAA;QAAA;QAAA;MAAA,QADK,eAEL,QAAC,WAAD;QAAa,GAAG,EAAEH,OAAO,CAACI;MAA1B;QAAA;QAAA;QAAA;MAAA,QAFK;IAAA,GAASJ,OAAO,CAACK,EAAjB;MAAA;MAAA;MAAA;IAAA,QAAP;EAID;;EAEDC,MAAM,GAAG;IACPC,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;IACA,MAAM;MAAEW,iBAAF;MAAqBC;IAArB,IAA8C,KAAKZ,KAAzD;;IAEA,IAAI,CAACW,iBAAL,EAAwB;MACtB,oBACE;QAAA,uBAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAL;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJD,MAIO;MACLE,MAAM,CAACC,IAAP,CAAYH,iBAAZ,EAA+BI,OAA/B,CAAwCR,EAAD,IAAQ;QAC7C,IAAIK,oBAAoB,IAAIA,oBAAoB,CAACL,EAAD,CAAhD,EAAsD;UACpDI,iBAAiB,CAACJ,EAAD,CAAjB,CAAsBD,GAAtB,GAA4BM,oBAAoB,CAACL,EAAD,CAApB,CAAyBS,SAArD;QACD;MACF,CAJD;MAMA,oBACE,QAAC,SAAD;QAAW,IAAI,MAAf;QAAA,wBACE,QAAC,MAAD;UAAQ,EAAE,EAAC,IAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD;UAAM,UAAU,EAAE,KAAKf,aAAvB;UACE,KAAK,EAAEU,iBADT;UAEE,YAAY;QAFd;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IASD;EACF;;AArC0C;;AAwC7C,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC3C,MAAMC,MAAM,GAAGD,QAAQ,CAACE,KAAT,CAAeD,MAA9B;EACA,OAAO,EACL,GAAGA,MADE;IAEL,GAAGF,KAAK,CAACI;EAFJ,CAAP;AAID,CAND;;AAQA,eAAe/B,UAAU,CAACD,OAAO,CAAC2B,eAAD,EAAkB;EACjDpB;AADiD,CAAlB,CAAP,CAEvBC,oBAFuB,CAAD,CAAzB"},"metadata":{},"sourceType":"module"}