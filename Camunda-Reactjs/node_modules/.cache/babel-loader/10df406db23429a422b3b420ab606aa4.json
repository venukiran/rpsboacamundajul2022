{"ast":null,"code":"import { forEach, reduce } from 'min-dash';\nimport { getChildren, getVisual } from '../util/GraphicsUtil';\nimport { translate } from '../util/SvgTransformUtil';\nimport { clear as domClear } from 'min-dom';\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { isFrameElement } from '../util/Elements';\n/**\n * A factory that creates graphical elements\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n */\n\nexport default function GraphicsFactory(eventBus, elementRegistry) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\nGraphicsFactory.$inject = ['eventBus', 'elementRegistry'];\n\nGraphicsFactory.prototype._getChildrenContainer = function (element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  var childrenGfx; // root element\n\n  if (!element.parent) {\n    childrenGfx = gfx;\n  } else {\n    childrenGfx = getChildren(gfx);\n\n    if (!childrenGfx) {\n      childrenGfx = svgCreate('g');\n      svgClasses(childrenGfx).add('djs-children');\n      svgAppend(gfx.parentNode, childrenGfx);\n    }\n  }\n\n  return childrenGfx;\n};\n/**\n * Clears the graphical representation of the element and returns the\n * cleared visual (the <g class=\"djs-visual\" /> element).\n */\n\n\nGraphicsFactory.prototype._clear = function (gfx) {\n  var visual = getVisual(gfx);\n  domClear(visual);\n  return visual;\n};\n/**\n * Creates a gfx container for shapes and connections\n *\n * The layout is as follows:\n *\n * <g class=\"djs-group\">\n *\n *   <!-- the gfx -->\n *   <g class=\"djs-element djs-(shape|connection|frame)\">\n *     <g class=\"djs-visual\">\n *       <!-- the renderer draws in here -->\n *     </g>\n *\n *     <!-- extensions (overlays, click box, ...) goes here\n *   </g>\n *\n *   <!-- the gfx child nodes -->\n *   <g class=\"djs-children\"></g>\n * </g>\n *\n * @param {string} type the type of the element, i.e. shape | connection\n * @param {SVGElement} [childrenGfx]\n * @param {number} [parentIndex] position to create container in parent\n * @param {boolean} [isFrame] is frame element\n *\n * @return {SVGElement}\n */\n\n\nGraphicsFactory.prototype._createContainer = function (type, childrenGfx, parentIndex, isFrame) {\n  var outerGfx = svgCreate('g');\n  svgClasses(outerGfx).add('djs-group'); // insert node at position\n\n  if (typeof parentIndex !== 'undefined') {\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\n  } else {\n    svgAppend(childrenGfx, outerGfx);\n  }\n\n  var gfx = svgCreate('g');\n  svgClasses(gfx).add('djs-element');\n  svgClasses(gfx).add('djs-' + type);\n\n  if (isFrame) {\n    svgClasses(gfx).add('djs-frame');\n  }\n\n  svgAppend(outerGfx, gfx); // create visual\n\n  var visual = svgCreate('g');\n  svgClasses(visual).add('djs-visual');\n  svgAppend(gfx, visual);\n  return gfx;\n};\n\nGraphicsFactory.prototype.create = function (type, element, parentIndex) {\n  var childrenGfx = this._getChildrenContainer(element.parent);\n\n  return this._createContainer(type, childrenGfx, parentIndex, isFrameElement(element));\n};\n\nGraphicsFactory.prototype.updateContainments = function (elements) {\n  var self = this,\n      elementRegistry = this._elementRegistry,\n      parents;\n  parents = reduce(elements, function (map, e) {\n    if (e.parent) {\n      map[e.parent.id] = e.parent;\n    }\n\n    return map;\n  }, {}); // update all parents of changed and reorganized their children\n  // in the correct order (as indicated in our model)\n\n  forEach(parents, function (parent) {\n    var children = parent.children;\n\n    if (!children) {\n      return;\n    }\n\n    var childrenGfx = self._getChildrenContainer(parent);\n\n    forEach(children.slice().reverse(), function (child) {\n      var childGfx = elementRegistry.getGraphics(child);\n      prependTo(childGfx.parentNode, childrenGfx);\n    });\n  });\n};\n\nGraphicsFactory.prototype.drawShape = function (visual, element) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.shape', {\n    gfx: visual,\n    element: element\n  });\n};\n\nGraphicsFactory.prototype.getShapePath = function (element) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.getShapePath', element);\n};\n\nGraphicsFactory.prototype.drawConnection = function (visual, element) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.connection', {\n    gfx: visual,\n    element: element\n  });\n};\n\nGraphicsFactory.prototype.getConnectionPath = function (waypoints) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.getConnectionPath', waypoints);\n};\n\nGraphicsFactory.prototype.update = function (type, element, gfx) {\n  // do NOT update root element\n  if (!element.parent) {\n    return;\n  }\n\n  var visual = this._clear(gfx); // redraw\n\n\n  if (type === 'shape') {\n    this.drawShape(visual, element); // update positioning\n\n    translate(gfx, element.x, element.y);\n  } else if (type === 'connection') {\n    this.drawConnection(visual, element);\n  } else {\n    throw new Error('unknown type: ' + type);\n  }\n\n  if (element.hidden) {\n    svgAttr(gfx, 'display', 'none');\n  } else {\n    svgAttr(gfx, 'display', 'block');\n  }\n};\n\nGraphicsFactory.prototype.remove = function (element) {\n  var gfx = this._elementRegistry.getGraphics(element); // remove\n\n\n  svgRemove(gfx.parentNode);\n}; // helpers //////////\n\n\nfunction prependTo(newNode, parentNode, siblingNode) {\n  var node = siblingNode || parentNode.firstChild; // do not prepend node to itself to prevent IE from crashing\n  // https://github.com/bpmn-io/bpmn-js/issues/746\n\n  if (newNode === node) {\n    return;\n  }\n\n  parentNode.insertBefore(newNode, node);\n}","map":{"version":3,"names":["forEach","reduce","getChildren","getVisual","translate","clear","domClear","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","remove","svgRemove","isFrameElement","GraphicsFactory","eventBus","elementRegistry","_eventBus","_elementRegistry","$inject","prototype","_getChildrenContainer","element","gfx","getGraphics","childrenGfx","parent","add","parentNode","_clear","visual","_createContainer","type","parentIndex","isFrame","outerGfx","prependTo","childNodes","updateContainments","elements","self","parents","map","e","id","children","slice","reverse","child","childGfx","drawShape","fire","getShapePath","drawConnection","getConnectionPath","waypoints","update","x","y","Error","hidden","newNode","siblingNode","node","firstChild","insertBefore"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/core/GraphicsFactory.js"],"sourcesContent":["import {\n  forEach,\n  reduce\n} from 'min-dash';\n\nimport {\n  getChildren,\n  getVisual\n} from '../util/GraphicsUtil';\n\nimport { translate } from '../util/SvgTransformUtil';\n\nimport { clear as domClear } from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  isFrameElement\n} from '../util/Elements';\n\n/**\n * A factory that creates graphical elements\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n */\nexport default function GraphicsFactory(eventBus, elementRegistry) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\n\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\n\n\nGraphicsFactory.prototype._getChildrenContainer = function(element) {\n\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  var childrenGfx;\n\n  // root element\n  if (!element.parent) {\n    childrenGfx = gfx;\n  } else {\n    childrenGfx = getChildren(gfx);\n    if (!childrenGfx) {\n      childrenGfx = svgCreate('g');\n      svgClasses(childrenGfx).add('djs-children');\n\n      svgAppend(gfx.parentNode, childrenGfx);\n    }\n  }\n\n  return childrenGfx;\n};\n\n/**\n * Clears the graphical representation of the element and returns the\n * cleared visual (the <g class=\"djs-visual\" /> element).\n */\nGraphicsFactory.prototype._clear = function(gfx) {\n  var visual = getVisual(gfx);\n\n  domClear(visual);\n\n  return visual;\n};\n\n/**\n * Creates a gfx container for shapes and connections\n *\n * The layout is as follows:\n *\n * <g class=\"djs-group\">\n *\n *   <!-- the gfx -->\n *   <g class=\"djs-element djs-(shape|connection|frame)\">\n *     <g class=\"djs-visual\">\n *       <!-- the renderer draws in here -->\n *     </g>\n *\n *     <!-- extensions (overlays, click box, ...) goes here\n *   </g>\n *\n *   <!-- the gfx child nodes -->\n *   <g class=\"djs-children\"></g>\n * </g>\n *\n * @param {string} type the type of the element, i.e. shape | connection\n * @param {SVGElement} [childrenGfx]\n * @param {number} [parentIndex] position to create container in parent\n * @param {boolean} [isFrame] is frame element\n *\n * @return {SVGElement}\n */\nGraphicsFactory.prototype._createContainer = function(\n    type, childrenGfx, parentIndex, isFrame\n) {\n  var outerGfx = svgCreate('g');\n  svgClasses(outerGfx).add('djs-group');\n\n  // insert node at position\n  if (typeof parentIndex !== 'undefined') {\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\n  } else {\n    svgAppend(childrenGfx, outerGfx);\n  }\n\n  var gfx = svgCreate('g');\n  svgClasses(gfx).add('djs-element');\n  svgClasses(gfx).add('djs-' + type);\n\n  if (isFrame) {\n    svgClasses(gfx).add('djs-frame');\n  }\n\n  svgAppend(outerGfx, gfx);\n\n  // create visual\n  var visual = svgCreate('g');\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(gfx, visual);\n\n  return gfx;\n};\n\nGraphicsFactory.prototype.create = function(type, element, parentIndex) {\n  var childrenGfx = this._getChildrenContainer(element.parent);\n  return this._createContainer(type, childrenGfx, parentIndex, isFrameElement(element));\n};\n\nGraphicsFactory.prototype.updateContainments = function(elements) {\n\n  var self = this,\n      elementRegistry = this._elementRegistry,\n      parents;\n\n  parents = reduce(elements, function(map, e) {\n\n    if (e.parent) {\n      map[e.parent.id] = e.parent;\n    }\n\n    return map;\n  }, {});\n\n  // update all parents of changed and reorganized their children\n  // in the correct order (as indicated in our model)\n  forEach(parents, function(parent) {\n\n    var children = parent.children;\n\n    if (!children) {\n      return;\n    }\n\n    var childrenGfx = self._getChildrenContainer(parent);\n\n    forEach(children.slice().reverse(), function(child) {\n      var childGfx = elementRegistry.getGraphics(child);\n\n      prependTo(childGfx.parentNode, childrenGfx);\n    });\n  });\n};\n\nGraphicsFactory.prototype.drawShape = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getShapePath = function(element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getShapePath', element);\n};\n\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getConnectionPath', waypoints);\n};\n\nGraphicsFactory.prototype.update = function(type, element, gfx) {\n\n  // do NOT update root element\n  if (!element.parent) {\n    return;\n  }\n\n  var visual = this._clear(gfx);\n\n  // redraw\n  if (type === 'shape') {\n    this.drawShape(visual, element);\n\n    // update positioning\n    translate(gfx, element.x, element.y);\n  } else\n  if (type === 'connection') {\n    this.drawConnection(visual, element);\n  } else {\n    throw new Error('unknown type: ' + type);\n  }\n\n  if (element.hidden) {\n    svgAttr(gfx, 'display', 'none');\n  } else {\n    svgAttr(gfx, 'display', 'block');\n  }\n};\n\nGraphicsFactory.prototype.remove = function(element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  // remove\n  svgRemove(gfx.parentNode);\n};\n\n\n// helpers //////////\n\nfunction prependTo(newNode, parentNode, siblingNode) {\n  var node = siblingNode || parentNode.firstChild;\n\n  // do not prepend node to itself to prevent IE from crashing\n  // https://github.com/bpmn-io/bpmn-js/issues/746\n  if (newNode === node) {\n    return;\n  }\n\n  parentNode.insertBefore(newNode, node);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}