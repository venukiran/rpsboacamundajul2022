{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = ['as', 'children', 'className', 'content', 'fluid', 'text', 'textAlign'];\nContainer._meta = {\n  name: 'Container',\n  type: META.TYPES.ELEMENT\n};\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useTextAlignProp","Container","props","children","className","content","fluid","text","textAlign","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool","oneOf","TEXT_ALIGNMENTS"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/elements/Container/Container.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n\n/**\n * A container limits content to a maximum width.\n */\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nContainer.handledProps = ['as', 'children', 'className', 'content', 'fluid', 'text', 'textAlign'];\nContainer._meta = {\n  name: 'Container',\n  type: META.TYPES.ELEMENT\n};\n\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\n\nexport default Container;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,IAA5E,EAAkFC,GAAlF,EAAuFC,UAAvF,EAAmGC,gBAAnG,QAA2H,WAA3H;AAEA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,KAAK,GAAGJ,KAAK,CAACI,KAHlB;EAAA,IAIIC,IAAI,GAAGL,KAAK,CAACK,IAJjB;EAAA,IAKIC,SAAS,GAAGN,KAAK,CAACM,SALtB;EAOA,IAAIC,OAAO,GAAGnB,EAAE,CAAC,IAAD,EAAOS,UAAU,CAACQ,IAAD,EAAO,MAAP,CAAjB,EAAiCR,UAAU,CAACO,KAAD,EAAQ,OAAR,CAA3C,EAA6DN,gBAAgB,CAACQ,SAAD,CAA7E,EAA0F,WAA1F,EAAuGJ,SAAvG,CAAhB;EACA,IAAIM,IAAI,GAAGd,iBAAiB,CAACK,SAAD,EAAYC,KAAZ,CAA5B;EACA,IAAIS,WAAW,GAAGhB,cAAc,CAACM,SAAD,EAAYC,KAAZ,CAAhC;EAEA,OAAOV,KAAK,CAACoB,aAAN,CACLD,WADK,EAELtB,QAAQ,CAAC,EAAD,EAAKqB,IAAL,EAAW;IAAEN,SAAS,EAAEK;EAAb,CAAX,CAFH,EAGLhB,aAAa,CAACoB,KAAd,CAAoBV,QAApB,IAAgCE,OAAhC,GAA0CF,QAHrC,CAAP;AAKD;;AAEDF,SAAS,CAACa,YAAV,GAAyB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,OAA3C,EAAoD,MAApD,EAA4D,WAA5D,CAAzB;AACAb,SAAS,CAACc,KAAV,GAAkB;EAChBC,IAAI,EAAE,WADU;EAEhBC,IAAI,EAAEpB,IAAI,CAACqB,KAAL,CAAWC;AAFD,CAAlB;AAKAlB,SAAS,CAACmB,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC5D;EACAC,EAAE,EAAE9B,eAAe,CAAC8B,EAFwC;;EAI5D;EACArB,QAAQ,EAAEZ,SAAS,CAACkC,IALwC;;EAO5D;EACArB,SAAS,EAAEb,SAAS,CAACmC,MARuC;;EAU5D;EACArB,OAAO,EAAEX,eAAe,CAACiC,gBAXmC;;EAa5D;EACArB,KAAK,EAAEf,SAAS,CAACqC,IAd2C;;EAgB5D;EACArB,IAAI,EAAEhB,SAAS,CAACqC,IAjB4C;;EAmB5D;EACApB,SAAS,EAAEjB,SAAS,CAACsC,KAAV,CAAgB/B,GAAG,CAACgC,eAApB;AApBiD,CAAxC,GAqBlB,EArBJ;AAuBA,eAAe7B,SAAf"},"metadata":{},"sourceType":"module"}