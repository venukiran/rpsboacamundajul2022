{"ast":null,"code":"import { every, isArray } from 'min-dash';\n/**\n * Computes the distance between two points\n *\n * @param  {Point}  p\n * @param  {Point}  q\n *\n * @return {number}  distance\n */\n\nexport function pointDistance(a, b) {\n  if (!a || !b) {\n    return -1;\n  }\n\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n/**\n * Returns true if the point r is on the line between p and q\n *\n * @param  {Point}  p\n * @param  {Point}  q\n * @param  {Point}  r\n * @param  {number} [accuracy=5] accuracy for points on line check (lower is better)\n *\n * @return {boolean}\n */\n\nexport function pointsOnLine(p, q, r, accuracy) {\n  if (typeof accuracy === 'undefined') {\n    accuracy = 5;\n  }\n\n  if (!p || !q || !r) {\n    return false;\n  }\n\n  var val = (q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x),\n      dist = pointDistance(p, q); // @see http://stackoverflow.com/a/907491/412190\n\n  return Math.abs(val / dist) <= accuracy;\n}\nvar ALIGNED_THRESHOLD = 2;\n/**\n * Check whether two points are horizontally or vertically aligned.\n *\n * @param {Array<Point>|Point}\n * @param {Point}\n *\n * @return {string|boolean}\n */\n\nexport function pointsAligned(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [a, b];\n  }\n\n  if (pointsAlignedHorizontally(points)) {\n    return 'h';\n  }\n\n  if (pointsAlignedVertically(points)) {\n    return 'v';\n  }\n\n  return false;\n}\nexport function pointsAlignedHorizontally(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [a, b];\n  }\n\n  var firstPoint = points.slice().shift();\n  return every(points, function (point) {\n    return Math.abs(firstPoint.y - point.y) <= ALIGNED_THRESHOLD;\n  });\n}\nexport function pointsAlignedVertically(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [a, b];\n  }\n\n  var firstPoint = points.slice().shift();\n  return every(points, function (point) {\n    return Math.abs(firstPoint.x - point.x) <= ALIGNED_THRESHOLD;\n  });\n}\n/**\n * Returns true if the point p is inside the rectangle rect\n *\n * @param  {Point}  p\n * @param  {Rect} rect\n * @param  {number} tolerance\n *\n * @return {boolean}\n */\n\nexport function pointInRect(p, rect, tolerance) {\n  tolerance = tolerance || 0;\n  return p.x > rect.x - tolerance && p.y > rect.y - tolerance && p.x < rect.x + rect.width + tolerance && p.y < rect.y + rect.height + tolerance;\n}\n/**\n * Returns a point in the middle of points p and q\n *\n * @param  {Point}  p\n * @param  {Point}  q\n *\n * @return {Point} middle point\n */\n\nexport function getMidPoint(p, q) {\n  return {\n    x: Math.round(p.x + (q.x - p.x) / 2.0),\n    y: Math.round(p.y + (q.y - p.y) / 2.0)\n  };\n}","map":{"version":3,"names":["every","isArray","pointDistance","a","b","Math","sqrt","pow","x","y","pointsOnLine","p","q","r","accuracy","val","dist","abs","ALIGNED_THRESHOLD","pointsAligned","points","pointsAlignedHorizontally","pointsAlignedVertically","firstPoint","slice","shift","point","pointInRect","rect","tolerance","width","height","getMidPoint","round"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/util/Geometry.js"],"sourcesContent":["import {\n  every,\n  isArray\n} from 'min-dash';\n\n/**\n * Computes the distance between two points\n *\n * @param  {Point}  p\n * @param  {Point}  q\n *\n * @return {number}  distance\n */\nexport function pointDistance(a, b) {\n  if (!a || !b) {\n    return -1;\n  }\n\n  return Math.sqrt(\n    Math.pow(a.x - b.x, 2) +\n    Math.pow(a.y - b.y, 2)\n  );\n}\n\n\n/**\n * Returns true if the point r is on the line between p and q\n *\n * @param  {Point}  p\n * @param  {Point}  q\n * @param  {Point}  r\n * @param  {number} [accuracy=5] accuracy for points on line check (lower is better)\n *\n * @return {boolean}\n */\nexport function pointsOnLine(p, q, r, accuracy) {\n\n  if (typeof accuracy === 'undefined') {\n    accuracy = 5;\n  }\n\n  if (!p || !q || !r) {\n    return false;\n  }\n\n  var val = (q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x),\n      dist = pointDistance(p, q);\n\n  // @see http://stackoverflow.com/a/907491/412190\n  return Math.abs(val / dist) <= accuracy;\n}\n\n\nvar ALIGNED_THRESHOLD = 2;\n\n/**\n * Check whether two points are horizontally or vertically aligned.\n *\n * @param {Array<Point>|Point}\n * @param {Point}\n *\n * @return {string|boolean}\n */\nexport function pointsAligned(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [ a, b ];\n  }\n\n  if (pointsAlignedHorizontally(points)) {\n    return 'h';\n  }\n\n  if (pointsAlignedVertically(points)) {\n    return 'v';\n  }\n\n  return false;\n}\n\nexport function pointsAlignedHorizontally(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [ a, b ];\n  }\n\n  var firstPoint = points.slice().shift();\n\n  return every(points, function(point) {\n    return Math.abs(firstPoint.y - point.y) <= ALIGNED_THRESHOLD;\n  });\n}\n\nexport function pointsAlignedVertically(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [ a, b ];\n  }\n\n  var firstPoint = points.slice().shift();\n\n  return every(points, function(point) {\n    return Math.abs(firstPoint.x - point.x) <= ALIGNED_THRESHOLD;\n  });\n}\n\n\n\n/**\n * Returns true if the point p is inside the rectangle rect\n *\n * @param  {Point}  p\n * @param  {Rect} rect\n * @param  {number} tolerance\n *\n * @return {boolean}\n */\nexport function pointInRect(p, rect, tolerance) {\n  tolerance = tolerance || 0;\n\n  return p.x > rect.x - tolerance &&\n         p.y > rect.y - tolerance &&\n         p.x < rect.x + rect.width + tolerance &&\n         p.y < rect.y + rect.height + tolerance;\n}\n\n/**\n * Returns a point in the middle of points p and q\n *\n * @param  {Point}  p\n * @param  {Point}  q\n *\n * @return {Point} middle point\n */\nexport function getMidPoint(p, q) {\n  return {\n    x: Math.round(p.x + ((q.x - p.x) / 2.0)),\n    y: Math.round(p.y + ((q.y - p.y) / 2.0))\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}