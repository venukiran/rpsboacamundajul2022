{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes, META } from '../../lib';\nimport getNodeFromProps from './lib/getNodeFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode = function (_Component) {\n  _inherits(MountNode, _Component);\n\n  function MountNode() {\n    _classCallCheck(this, MountNode);\n\n    return _possibleConstructorReturn(this, (MountNode.__proto__ || Object.getPrototypeOf(MountNode)).apply(this, arguments));\n  }\n\n  _createClass(MountNode, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(_ref) {\n      var nextClassName = _ref.className;\n      var currentClassName = this.props.className;\n      return nextClassName !== currentClassName;\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.add(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var node = getNodeFromProps(this.props);\n      if (node) nodeRegistry.emit(node, handleClassNamesChange);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.del(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return MountNode;\n}(Component);\n\nMountNode._meta = {\n  name: 'MountNode',\n  type: META.TYPES.ADDON\n};\nMountNode.handledProps = ['className', 'node'];\nexport default MountNode;\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: customPropTypes.domNode\n} : {};","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","PropTypes","Component","customPropTypes","META","getNodeFromProps","handleClassNamesChange","NodeRegistry","nodeRegistry","MountNode","_Component","__proto__","Object","getPrototypeOf","apply","arguments","key","value","shouldComponentUpdate","_ref","nextClassName","className","currentClassName","props","componentWillMount","node","add","emit","componentDidUpdate","componentWillUnmount","del","render","_meta","name","type","TYPES","ADDON","handledProps","propTypes","process","env","NODE_ENV","string","domNode"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js"],"sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport { customPropTypes, META } from '../../lib';\nimport getNodeFromProps from './lib/getNodeFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\n\nvar nodeRegistry = new NodeRegistry();\n\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode = function (_Component) {\n  _inherits(MountNode, _Component);\n\n  function MountNode() {\n    _classCallCheck(this, MountNode);\n\n    return _possibleConstructorReturn(this, (MountNode.__proto__ || Object.getPrototypeOf(MountNode)).apply(this, arguments));\n  }\n\n  _createClass(MountNode, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(_ref) {\n      var nextClassName = _ref.className;\n      var currentClassName = this.props.className;\n\n\n      return nextClassName !== currentClassName;\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.add(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) nodeRegistry.emit(node, handleClassNamesChange);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.del(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return MountNode;\n}(Component);\n\nMountNode._meta = {\n  name: 'MountNode',\n  type: META.TYPES.ADDON\n};\nMountNode.handledProps = ['className', 'node'];\nexport default MountNode;\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: customPropTypes.domNode\n} : {};"],"mappings":"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"},"metadata":{},"sourceType":"module"}