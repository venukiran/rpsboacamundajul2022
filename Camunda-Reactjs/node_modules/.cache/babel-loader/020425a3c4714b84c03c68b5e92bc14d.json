{"ast":null,"code":"/**\n * The code in the <project-logo></project-logo> area\n * must not be changed.\n *\n * @see http://bpmn.io/license for more information.\n */\nimport { assign, find, isNumber, omit } from 'min-dash';\nimport { domify, query as domQuery, remove as domRemove } from 'min-dom';\nimport { innerSVG } from 'tiny-svg';\nimport Diagram from 'diagram-js';\nimport BpmnModdle from 'bpmn-moddle';\nimport inherits from 'inherits';\nimport { importBpmnDiagram } from './import/Importer';\nimport { wrapForCompatibility } from './util/CompatibilityUtil';\n/**\n * A base viewer for BPMN 2.0 diagrams.\n *\n * Have a look at {@link Viewer}, {@link NavigatedViewer} or {@link Modeler} for\n * bundles that include actual features.\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\n\nexport default function BaseViewer(options) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  this._moddle = this._createModdle(options);\n  this._container = this._createContainer(options);\n  /* <project-logo> */\n\n  addProjectLogo(this._container);\n  /* </project-logo> */\n\n  this._init(this._container, this._moddle, options);\n}\ninherits(BaseViewer, Diagram);\n/**\n* The importXML result.\n*\n* @typedef {Object} ImportXMLResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importXML error.\n*\n* @typedef {Error} ImportXMLError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Parse and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.parse.start (about to read model from xml)\n *   * import.parse.complete (model read; may have worked or not)\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *   * import.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string} xml the BPMN 2.0 xml\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportXMLResult, ImportXMLError>}\n */\n\nBaseViewer.prototype.importXML = wrapForCompatibility(function importXML(xml, bpmnDiagram) {\n  var self = this;\n\n  function ParseCompleteEvent(data) {\n    var event = self.get('eventBus').createEvent(data); // TODO(nikku): remove with future bpmn-js version\n\n    Object.defineProperty(event, 'context', {\n      enumerable: true,\n      get: function () {\n        console.warn(new Error('import.parse.complete <context> is deprecated ' + 'and will be removed in future library versions'));\n        return {\n          warnings: data.warnings,\n          references: data.references,\n          elementsById: data.elementsById\n        };\n      }\n    });\n    return event;\n  }\n\n  return new Promise(function (resolve, reject) {\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = self._emit('import.parse.start', {\n      xml: xml\n    }) || xml;\n\n    self._moddle.fromXML(xml, 'bpmn:Definitions').then(function (result) {\n      var definitions = result.rootElement;\n      var references = result.references;\n      var parseWarnings = result.warnings;\n      var elementsById = result.elementsById; // hook in post parse listeners +\n      // allow definitions manipulation\n\n      definitions = self._emit('import.parse.complete', ParseCompleteEvent({\n        error: null,\n        definitions: definitions,\n        elementsById: elementsById,\n        references: references,\n        warnings: parseWarnings\n      })) || definitions;\n      self.importDefinitions(definitions, bpmnDiagram).then(function (result) {\n        var allWarnings = [].concat(parseWarnings, result.warnings || []);\n\n        self._emit('import.done', {\n          error: null,\n          warnings: allWarnings\n        });\n\n        return resolve({\n          warnings: allWarnings\n        });\n      }).catch(function (err) {\n        var allWarnings = [].concat(parseWarnings, err.warnings || []);\n\n        self._emit('import.done', {\n          error: err,\n          warnings: allWarnings\n        });\n\n        return reject(addWarningsToError(err, allWarnings));\n      });\n    }).catch(function (err) {\n      self._emit('import.parse.complete', {\n        error: err\n      });\n\n      err = checkValidationError(err);\n\n      self._emit('import.done', {\n        error: err,\n        warnings: err.warnings\n      });\n\n      return reject(err);\n    });\n  });\n});\n/**\n* The importDefinitions result.\n*\n* @typedef {Object} ImportDefinitionsResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importDefinitions error.\n*\n* @typedef {Error} ImportDefinitionsError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Import parsed definitions and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {ModdleElement<Definitions>} definitions parsed BPMN 2.0 definitions\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportDefinitionsResult, ImportDefinitionsError>}\n */\n\nBaseViewer.prototype.importDefinitions = wrapForCompatibility(function importDefinitions(definitions, bpmnDiagram) {\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self._setDefinitions(definitions);\n\n    self.open(bpmnDiagram).then(function (result) {\n      var warnings = result.warnings;\n      return resolve({\n        warnings: warnings\n      });\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n});\n/**\n * The open result.\n *\n * @typedef {Object} OpenResult\n *\n * @property {Array<string>} warnings\n */\n\n/**\n* The open error.\n*\n* @typedef {Error} OpenError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Open diagram of previously imported XML.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During switch the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string|ModdleElement<BPMNDiagram>} [bpmnDiagramOrId] id or the diagram to open\n *\n * Returns {Promise<OpenResult, OpenError>}\n */\n\nBaseViewer.prototype.open = wrapForCompatibility(function open(bpmnDiagramOrId) {\n  var definitions = this._definitions;\n  var bpmnDiagram = bpmnDiagramOrId;\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    if (!definitions) {\n      var err1 = new Error('no XML imported');\n      return reject(addWarningsToError(err1, []));\n    }\n\n    if (typeof bpmnDiagramOrId === 'string') {\n      bpmnDiagram = findBPMNDiagram(definitions, bpmnDiagramOrId);\n\n      if (!bpmnDiagram) {\n        var err2 = new Error('BPMNDiagram <' + bpmnDiagramOrId + '> not found');\n        return reject(addWarningsToError(err2, []));\n      }\n    } // clear existing rendered diagram\n    // catch synchronous exceptions during #clear()\n\n\n    try {\n      self.clear();\n    } catch (error) {\n      return reject(addWarningsToError(error, []));\n    } // perform graphical import\n\n\n    importBpmnDiagram(self, definitions, bpmnDiagram).then(function (result) {\n      var warnings = result.warnings;\n      return resolve({\n        warnings: warnings\n      });\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n});\n/**\n * The saveXML result.\n *\n * @typedef {Object} SaveXMLResult\n *\n * @property {string} xml\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * a BPMN 2.0 XML document.\n *\n * ## Life-Cycle Events\n *\n * During XML saving the viewer will fire life-cycle events:\n *\n *   * saveXML.start (before serialization)\n *   * saveXML.serialized (after xml generation)\n *   * saveXML.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options] export options\n * @param {boolean} [options.format=false] output formatted XML\n * @param {boolean} [options.preamble=true] output preamble\n *\n * Returns {Promise<SaveXMLResult, Error>}\n */\n\nBaseViewer.prototype.saveXML = wrapForCompatibility(function saveXML(options) {\n  options = options || {};\n  var self = this;\n  var definitions = this._definitions;\n  return new Promise(function (resolve, reject) {\n    if (!definitions) {\n      var err = new Error('no definitions loaded');\n      return reject(err);\n    } // allow to fiddle around with definitions\n\n\n    definitions = self._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n\n    self._moddle.toXML(definitions, options).then(function (result) {\n      var xml = result.xml;\n\n      try {\n        xml = self._emit('saveXML.serialized', {\n          error: null,\n          xml: xml\n        }) || xml;\n\n        self._emit('saveXML.done', {\n          error: null,\n          xml: xml\n        });\n      } catch (e) {\n        console.error('error in saveXML life-cycle listener', e);\n      }\n\n      return resolve({\n        xml: xml\n      });\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n});\n/**\n * The saveSVG result.\n *\n * @typedef {Object} SaveSVGResult\n *\n * @property {string} svg\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * an SVG image.\n *\n * ## Life-Cycle Events\n *\n * During SVG saving the viewer will fire life-cycle events:\n *\n *   * saveSVG.start (before serialization)\n *   * saveSVG.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options]\n *\n * Returns {Promise<SaveSVGResult, Error>}\n */\n\nBaseViewer.prototype.saveSVG = wrapForCompatibility(function saveSVG(options) {\n  options = options || {};\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self._emit('saveSVG.start');\n\n    var svg, err;\n\n    try {\n      var canvas = self.get('canvas');\n      var contentNode = canvas.getDefaultLayer(),\n          defsNode = domQuery('defs', canvas._svg);\n      var contents = innerSVG(contentNode),\n          defs = defsNode ? '<defs>' + innerSVG(defsNode) + '</defs>' : '';\n      var bbox = contentNode.getBBox();\n      svg = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + '<!-- created with bpmn-js / http://bpmn.io -->\\n' + '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' + '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' + 'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' + defs + contents + '</svg>';\n    } catch (e) {\n      err = e;\n    }\n\n    self._emit('saveSVG.done', {\n      error: err,\n      svg: svg\n    });\n\n    if (!err) {\n      return resolve({\n        svg: svg\n      });\n    }\n\n    return reject(err);\n  });\n});\n/**\n * Get a named diagram service.\n *\n * @example\n *\n * var elementRegistry = viewer.get('elementRegistry');\n * var startEventShape = elementRegistry.get('StartEvent_1');\n *\n * @param {string} name\n *\n * @return {Object} diagram service instance\n *\n * @method BaseViewer#get\n */\n\n/**\n * Invoke a function in the context of this viewer.\n *\n * @example\n *\n * viewer.invoke(function(elementRegistry) {\n *   var startEventShape = elementRegistry.get('StartEvent_1');\n * });\n *\n * @param {Function} fn to be invoked\n *\n * @return {Object} the functions return value\n *\n * @method BaseViewer#invoke\n */\n\nBaseViewer.prototype._setDefinitions = function (definitions) {\n  this._definitions = definitions;\n};\n\nBaseViewer.prototype.getModules = function () {\n  return this._modules;\n};\n/**\n * Remove all drawn elements from the viewer.\n *\n * After calling this method the viewer can still\n * be reused for opening another diagram.\n *\n * @method BaseViewer#clear\n */\n\n\nBaseViewer.prototype.clear = function () {\n  if (!this.getDefinitions()) {\n    // no diagram to clear\n    return;\n  } // remove businessObject#di binding\n  //\n  // this is necessary, as we establish the bindings\n  // in the BpmnTreeWalker (and assume none are given\n  // on reimport)\n\n\n  this.get('elementRegistry').forEach(function (element) {\n    var bo = element.businessObject;\n\n    if (bo && bo.di) {\n      delete bo.di;\n    }\n  }); // remove drawn elements\n\n  Diagram.prototype.clear.call(this);\n};\n/**\n * Destroy the viewer instance and remove all its\n * remainders from the document tree.\n */\n\n\nBaseViewer.prototype.destroy = function () {\n  // diagram destroy\n  Diagram.prototype.destroy.call(this); // dom detach\n\n  domRemove(this._container);\n};\n/**\n * Register an event listener\n *\n * Remove a previously added listener via {@link #off(event, callback)}.\n *\n * @param {string} event\n * @param {number} [priority]\n * @param {Function} callback\n * @param {Object} [that]\n */\n\n\nBaseViewer.prototype.on = function (event, priority, callback, target) {\n  return this.get('eventBus').on(event, priority, callback, target);\n};\n/**\n * De-register an event listener\n *\n * @param {string} event\n * @param {Function} callback\n */\n\n\nBaseViewer.prototype.off = function (event, callback) {\n  this.get('eventBus').off(event, callback);\n};\n\nBaseViewer.prototype.attachTo = function (parentNode) {\n  if (!parentNode) {\n    throw new Error('parentNode required');\n  } // ensure we detach from the\n  // previous, old parent\n\n\n  this.detach(); // unwrap jQuery if provided\n\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\n    parentNode = parentNode.get(0);\n  }\n\n  if (typeof parentNode === 'string') {\n    parentNode = domQuery(parentNode);\n  }\n\n  parentNode.appendChild(this._container);\n\n  this._emit('attach', {});\n\n  this.get('canvas').resized();\n};\n\nBaseViewer.prototype.getDefinitions = function () {\n  return this._definitions;\n};\n\nBaseViewer.prototype.detach = function () {\n  var container = this._container,\n      parentNode = container.parentNode;\n\n  if (!parentNode) {\n    return;\n  }\n\n  this._emit('detach', {});\n\n  parentNode.removeChild(container);\n};\n\nBaseViewer.prototype._init = function (container, moddle, options) {\n  var baseModules = options.modules || this.getModules(),\n      additionalModules = options.additionalModules || [],\n      staticModules = [{\n    bpmnjs: ['value', this],\n    moddle: ['value', moddle]\n  }];\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\n  var diagramOptions = assign(omit(options, ['additionalModules']), {\n    canvas: assign({}, options.canvas, {\n      container: container\n    }),\n    modules: diagramModules\n  }); // invoke diagram constructor\n\n  Diagram.call(this, diagramOptions);\n\n  if (options && options.container) {\n    this.attachTo(options.container);\n  }\n};\n/**\n * Emit an event on the underlying {@link EventBus}\n *\n * @param  {string} type\n * @param  {Object} event\n *\n * @return {Object} event processing result (if any)\n */\n\n\nBaseViewer.prototype._emit = function (type, event) {\n  return this.get('eventBus').fire(type, event);\n};\n\nBaseViewer.prototype._createContainer = function (options) {\n  var container = domify('<div class=\"bjs-container\"></div>');\n  assign(container.style, {\n    width: ensureUnit(options.width),\n    height: ensureUnit(options.height),\n    position: options.position\n  });\n  return container;\n};\n\nBaseViewer.prototype._createModdle = function (options) {\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\n  return new BpmnModdle(moddleOptions);\n};\n\nBaseViewer.prototype._modules = []; // helpers ///////////////\n\nfunction addWarningsToError(err, warningsAry) {\n  err.warnings = warningsAry;\n  return err;\n}\n\nfunction checkValidationError(err) {\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\n  // (in case he or the exporting tool did not get that right)\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/;\n  var match = pattern.exec(err.message);\n\n  if (match) {\n    err.message = 'unparsable content <' + match[1] + '> detected; ' + 'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\n  }\n\n  return err;\n}\n\nvar DEFAULT_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\n\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n/**\n * Find BPMNDiagram in definitions by ID\n *\n * @param {ModdleElement<Definitions>} definitions\n * @param {string} diagramId\n *\n * @return {ModdleElement<BPMNDiagram>|null}\n */\n\n\nfunction findBPMNDiagram(definitions, diagramId) {\n  if (!diagramId) {\n    return null;\n  }\n\n  return find(definitions.diagrams, function (element) {\n    return element.id === diagramId;\n  }) || null;\n}\n/* <project-logo> */\n\n\nimport { open as openPoweredBy, BPMNIO_IMG, LINK_STYLES as BPMNIO_LINK_STYLES } from './util/PoweredByUtil';\nimport { event as domEvent } from 'min-dom';\n/**\n * Adds the project logo to the diagram container as\n * required by the bpmn.io license.\n *\n * @see http://bpmn.io/license\n *\n * @param {Element} container\n */\n\nfunction addProjectLogo(container) {\n  var img = BPMNIO_IMG;\n  var linkMarkup = '<a href=\"http://bpmn.io\" ' + 'target=\"_blank\" ' + 'class=\"bjs-powered-by\" ' + 'title=\"Powered by bpmn.io\" ' + 'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100; ' + BPMNIO_LINK_STYLES + '\">' + img + '</a>';\n  var linkElement = domify(linkMarkup);\n  container.appendChild(linkElement);\n  domEvent.bind(linkElement, 'click', function (event) {\n    openPoweredBy();\n    event.preventDefault();\n  });\n}\n/* </project-logo> */","map":{"version":3,"names":["assign","find","isNumber","omit","domify","query","domQuery","remove","domRemove","innerSVG","Diagram","BpmnModdle","inherits","importBpmnDiagram","wrapForCompatibility","BaseViewer","options","DEFAULT_OPTIONS","_moddle","_createModdle","_container","_createContainer","addProjectLogo","_init","prototype","importXML","xml","bpmnDiagram","self","ParseCompleteEvent","data","event","get","createEvent","Object","defineProperty","enumerable","console","warn","Error","warnings","references","elementsById","Promise","resolve","reject","_emit","fromXML","then","result","definitions","rootElement","parseWarnings","error","importDefinitions","allWarnings","concat","catch","err","addWarningsToError","checkValidationError","_setDefinitions","open","bpmnDiagramOrId","_definitions","err1","findBPMNDiagram","err2","clear","saveXML","toXML","e","saveSVG","svg","canvas","contentNode","getDefaultLayer","defsNode","_svg","contents","defs","bbox","getBBox","width","height","x","y","getModules","_modules","getDefinitions","forEach","element","bo","businessObject","di","call","destroy","on","priority","callback","target","off","attachTo","parentNode","detach","constructor","jquery","appendChild","resized","container","removeChild","moddle","baseModules","modules","additionalModules","staticModules","bpmnjs","diagramModules","diagramOptions","type","fire","style","ensureUnit","position","moddleOptions","_moddleExtensions","moddleExtensions","warningsAry","pattern","match","exec","message","val","diagramId","diagrams","id","openPoweredBy","BPMNIO_IMG","LINK_STYLES","BPMNIO_LINK_STYLES","domEvent","img","linkMarkup","linkElement","bind","preventDefault"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/bpmn-js/lib/BaseViewer.js"],"sourcesContent":["/**\n * The code in the <project-logo></project-logo> area\n * must not be changed.\n *\n * @see http://bpmn.io/license for more information.\n */\nimport {\n  assign,\n  find,\n  isNumber,\n  omit\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  remove as domRemove\n} from 'min-dom';\n\nimport {\n  innerSVG\n} from 'tiny-svg';\n\nimport Diagram from 'diagram-js';\nimport BpmnModdle from 'bpmn-moddle';\n\nimport inherits from 'inherits';\n\nimport {\n  importBpmnDiagram\n} from './import/Importer';\n\nimport {\n  wrapForCompatibility\n} from './util/CompatibilityUtil';\n\n/**\n * A base viewer for BPMN 2.0 diagrams.\n *\n * Have a look at {@link Viewer}, {@link NavigatedViewer} or {@link Modeler} for\n * bundles that include actual features.\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function BaseViewer(options) {\n\n  options = assign({}, DEFAULT_OPTIONS, options);\n\n  this._moddle = this._createModdle(options);\n\n  this._container = this._createContainer(options);\n\n  /* <project-logo> */\n\n  addProjectLogo(this._container);\n\n  /* </project-logo> */\n\n  this._init(this._container, this._moddle, options);\n}\n\ninherits(BaseViewer, Diagram);\n\n/**\n* The importXML result.\n*\n* @typedef {Object} ImportXMLResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importXML error.\n*\n* @typedef {Error} ImportXMLError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Parse and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.parse.start (about to read model from xml)\n *   * import.parse.complete (model read; may have worked or not)\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *   * import.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string} xml the BPMN 2.0 xml\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportXMLResult, ImportXMLError>}\n */\nBaseViewer.prototype.importXML = wrapForCompatibility(function importXML(xml, bpmnDiagram) {\n\n  var self = this;\n\n  function ParseCompleteEvent(data) {\n\n    var event = self.get('eventBus').createEvent(data);\n\n    // TODO(nikku): remove with future bpmn-js version\n    Object.defineProperty(event, 'context', {\n      enumerable: true,\n      get: function() {\n\n        console.warn(new Error(\n          'import.parse.complete <context> is deprecated ' +\n          'and will be removed in future library versions'\n        ));\n\n        return {\n          warnings: data.warnings,\n          references: data.references,\n          elementsById: data.elementsById\n        };\n      }\n    });\n\n    return event;\n  }\n\n  return new Promise(function(resolve, reject) {\n\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = self._emit('import.parse.start', { xml: xml }) || xml;\n\n    self._moddle.fromXML(xml, 'bpmn:Definitions').then(function(result) {\n      var definitions = result.rootElement;\n      var references = result.references;\n      var parseWarnings = result.warnings;\n      var elementsById = result.elementsById;\n\n      // hook in post parse listeners +\n      // allow definitions manipulation\n      definitions = self._emit('import.parse.complete', ParseCompleteEvent({\n        error: null,\n        definitions: definitions,\n        elementsById: elementsById,\n        references: references,\n        warnings: parseWarnings\n      })) || definitions;\n\n      self.importDefinitions(definitions, bpmnDiagram).then(function(result) {\n        var allWarnings = [].concat(parseWarnings, result.warnings || []);\n\n        self._emit('import.done', { error: null, warnings: allWarnings });\n\n        return resolve({ warnings: allWarnings });\n      }).catch(function(err) {\n        var allWarnings = [].concat(parseWarnings, err.warnings || []);\n\n        self._emit('import.done', { error: err, warnings: allWarnings });\n\n        return reject(addWarningsToError(err, allWarnings));\n      });\n    }).catch(function(err) {\n\n      self._emit('import.parse.complete', {\n        error: err\n      });\n\n      err = checkValidationError(err);\n\n      self._emit('import.done', { error: err, warnings: err.warnings });\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n* The importDefinitions result.\n*\n* @typedef {Object} ImportDefinitionsResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importDefinitions error.\n*\n* @typedef {Error} ImportDefinitionsError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Import parsed definitions and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {ModdleElement<Definitions>} definitions parsed BPMN 2.0 definitions\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportDefinitionsResult, ImportDefinitionsError>}\n */\nBaseViewer.prototype.importDefinitions = wrapForCompatibility(function importDefinitions(definitions, bpmnDiagram) {\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    self._setDefinitions(definitions);\n\n    self.open(bpmnDiagram).then(function(result) {\n\n      var warnings = result.warnings;\n\n      return resolve({ warnings: warnings });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The open result.\n *\n * @typedef {Object} OpenResult\n *\n * @property {Array<string>} warnings\n */\n\n/**\n* The open error.\n*\n* @typedef {Error} OpenError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Open diagram of previously imported XML.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During switch the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string|ModdleElement<BPMNDiagram>} [bpmnDiagramOrId] id or the diagram to open\n *\n * Returns {Promise<OpenResult, OpenError>}\n */\nBaseViewer.prototype.open = wrapForCompatibility(function open(bpmnDiagramOrId) {\n\n  var definitions = this._definitions;\n  var bpmnDiagram = bpmnDiagramOrId;\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    if (!definitions) {\n      var err1 = new Error('no XML imported');\n\n      return reject(addWarningsToError(err1, []));\n    }\n\n    if (typeof bpmnDiagramOrId === 'string') {\n      bpmnDiagram = findBPMNDiagram(definitions, bpmnDiagramOrId);\n\n      if (!bpmnDiagram) {\n        var err2 = new Error('BPMNDiagram <' + bpmnDiagramOrId + '> not found');\n\n        return reject(addWarningsToError(err2, []));\n      }\n    }\n\n    // clear existing rendered diagram\n    // catch synchronous exceptions during #clear()\n    try {\n      self.clear();\n    } catch (error) {\n\n      return reject(addWarningsToError(error, []));\n    }\n\n    // perform graphical import\n    importBpmnDiagram(self, definitions, bpmnDiagram).then(function(result) {\n\n      var warnings = result.warnings;\n\n      return resolve({ warnings: warnings });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveXML result.\n *\n * @typedef {Object} SaveXMLResult\n *\n * @property {string} xml\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * a BPMN 2.0 XML document.\n *\n * ## Life-Cycle Events\n *\n * During XML saving the viewer will fire life-cycle events:\n *\n *   * saveXML.start (before serialization)\n *   * saveXML.serialized (after xml generation)\n *   * saveXML.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options] export options\n * @param {boolean} [options.format=false] output formatted XML\n * @param {boolean} [options.preamble=true] output preamble\n *\n * Returns {Promise<SaveXMLResult, Error>}\n */\nBaseViewer.prototype.saveXML = wrapForCompatibility(function saveXML(options) {\n\n  options = options || {};\n\n  var self = this;\n\n  var definitions = this._definitions;\n\n  return new Promise(function(resolve, reject) {\n\n    if (!definitions) {\n      var err = new Error('no definitions loaded');\n\n      return reject(err);\n    }\n\n    // allow to fiddle around with definitions\n    definitions = self._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n\n    self._moddle.toXML(definitions, options).then(function(result) {\n\n      var xml = result.xml;\n\n      try {\n        xml = self._emit('saveXML.serialized', {\n          error: null,\n          xml: xml\n        }) || xml;\n\n        self._emit('saveXML.done', {\n          error: null,\n          xml: xml\n        });\n      } catch (e) {\n        console.error('error in saveXML life-cycle listener', e);\n      }\n\n      return resolve({ xml: xml });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveSVG result.\n *\n * @typedef {Object} SaveSVGResult\n *\n * @property {string} svg\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * an SVG image.\n *\n * ## Life-Cycle Events\n *\n * During SVG saving the viewer will fire life-cycle events:\n *\n *   * saveSVG.start (before serialization)\n *   * saveSVG.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options]\n *\n * Returns {Promise<SaveSVGResult, Error>}\n */\nBaseViewer.prototype.saveSVG = wrapForCompatibility(function saveSVG(options) {\n\n  options = options || {};\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    self._emit('saveSVG.start');\n\n    var svg, err;\n\n    try {\n      var canvas = self.get('canvas');\n\n      var contentNode = canvas.getDefaultLayer(),\n          defsNode = domQuery('defs', canvas._svg);\n\n      var contents = innerSVG(contentNode),\n          defs = defsNode ? '<defs>' + innerSVG(defsNode) + '</defs>' : '';\n\n      var bbox = contentNode.getBBox();\n\n      svg =\n        '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n        '<!-- created with bpmn-js / http://bpmn.io -->\\n' +\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\n             'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' +\n             'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' +\n          defs + contents +\n        '</svg>';\n    } catch (e) {\n      err = e;\n    }\n\n    self._emit('saveSVG.done', {\n      error: err,\n      svg: svg\n    });\n\n    if (!err) {\n      return resolve({ svg: svg });\n    }\n\n    return reject(err);\n  });\n});\n\n/**\n * Get a named diagram service.\n *\n * @example\n *\n * var elementRegistry = viewer.get('elementRegistry');\n * var startEventShape = elementRegistry.get('StartEvent_1');\n *\n * @param {string} name\n *\n * @return {Object} diagram service instance\n *\n * @method BaseViewer#get\n */\n\n/**\n * Invoke a function in the context of this viewer.\n *\n * @example\n *\n * viewer.invoke(function(elementRegistry) {\n *   var startEventShape = elementRegistry.get('StartEvent_1');\n * });\n *\n * @param {Function} fn to be invoked\n *\n * @return {Object} the functions return value\n *\n * @method BaseViewer#invoke\n */\n\n\nBaseViewer.prototype._setDefinitions = function(definitions) {\n  this._definitions = definitions;\n};\n\nBaseViewer.prototype.getModules = function() {\n  return this._modules;\n};\n\n/**\n * Remove all drawn elements from the viewer.\n *\n * After calling this method the viewer can still\n * be reused for opening another diagram.\n *\n * @method BaseViewer#clear\n */\nBaseViewer.prototype.clear = function() {\n  if (!this.getDefinitions()) {\n\n    // no diagram to clear\n    return;\n  }\n\n  // remove businessObject#di binding\n  //\n  // this is necessary, as we establish the bindings\n  // in the BpmnTreeWalker (and assume none are given\n  // on reimport)\n  this.get('elementRegistry').forEach(function(element) {\n    var bo = element.businessObject;\n\n    if (bo && bo.di) {\n      delete bo.di;\n    }\n  });\n\n  // remove drawn elements\n  Diagram.prototype.clear.call(this);\n};\n\n/**\n * Destroy the viewer instance and remove all its\n * remainders from the document tree.\n */\nBaseViewer.prototype.destroy = function() {\n\n  // diagram destroy\n  Diagram.prototype.destroy.call(this);\n\n  // dom detach\n  domRemove(this._container);\n};\n\n/**\n * Register an event listener\n *\n * Remove a previously added listener via {@link #off(event, callback)}.\n *\n * @param {string} event\n * @param {number} [priority]\n * @param {Function} callback\n * @param {Object} [that]\n */\nBaseViewer.prototype.on = function(event, priority, callback, target) {\n  return this.get('eventBus').on(event, priority, callback, target);\n};\n\n/**\n * De-register an event listener\n *\n * @param {string} event\n * @param {Function} callback\n */\nBaseViewer.prototype.off = function(event, callback) {\n  this.get('eventBus').off(event, callback);\n};\n\nBaseViewer.prototype.attachTo = function(parentNode) {\n\n  if (!parentNode) {\n    throw new Error('parentNode required');\n  }\n\n  // ensure we detach from the\n  // previous, old parent\n  this.detach();\n\n  // unwrap jQuery if provided\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\n    parentNode = parentNode.get(0);\n  }\n\n  if (typeof parentNode === 'string') {\n    parentNode = domQuery(parentNode);\n  }\n\n  parentNode.appendChild(this._container);\n\n  this._emit('attach', {});\n\n  this.get('canvas').resized();\n};\n\nBaseViewer.prototype.getDefinitions = function() {\n  return this._definitions;\n};\n\nBaseViewer.prototype.detach = function() {\n\n  var container = this._container,\n      parentNode = container.parentNode;\n\n  if (!parentNode) {\n    return;\n  }\n\n  this._emit('detach', {});\n\n  parentNode.removeChild(container);\n};\n\nBaseViewer.prototype._init = function(container, moddle, options) {\n\n  var baseModules = options.modules || this.getModules(),\n      additionalModules = options.additionalModules || [],\n      staticModules = [\n        {\n          bpmnjs: [ 'value', this ],\n          moddle: [ 'value', moddle ]\n        }\n      ];\n\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\n\n  var diagramOptions = assign(omit(options, [ 'additionalModules' ]), {\n    canvas: assign({}, options.canvas, { container: container }),\n    modules: diagramModules\n  });\n\n  // invoke diagram constructor\n  Diagram.call(this, diagramOptions);\n\n  if (options && options.container) {\n    this.attachTo(options.container);\n  }\n};\n\n/**\n * Emit an event on the underlying {@link EventBus}\n *\n * @param  {string} type\n * @param  {Object} event\n *\n * @return {Object} event processing result (if any)\n */\nBaseViewer.prototype._emit = function(type, event) {\n  return this.get('eventBus').fire(type, event);\n};\n\nBaseViewer.prototype._createContainer = function(options) {\n\n  var container = domify('<div class=\"bjs-container\"></div>');\n\n  assign(container.style, {\n    width: ensureUnit(options.width),\n    height: ensureUnit(options.height),\n    position: options.position\n  });\n\n  return container;\n};\n\nBaseViewer.prototype._createModdle = function(options) {\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\n\n  return new BpmnModdle(moddleOptions);\n};\n\nBaseViewer.prototype._modules = [];\n\n// helpers ///////////////\n\nfunction addWarningsToError(err, warningsAry) {\n  err.warnings = warningsAry;\n  return err;\n}\n\nfunction checkValidationError(err) {\n\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/;\n  var match = pattern.exec(err.message);\n\n  if (match) {\n    err.message =\n      'unparsable content <' + match[1] + '> detected; ' +\n      'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\n  }\n\n  return err;\n}\n\nvar DEFAULT_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\n\n/**\n * Find BPMNDiagram in definitions by ID\n *\n * @param {ModdleElement<Definitions>} definitions\n * @param {string} diagramId\n *\n * @return {ModdleElement<BPMNDiagram>|null}\n */\nfunction findBPMNDiagram(definitions, diagramId) {\n  if (!diagramId) {\n    return null;\n  }\n\n  return find(definitions.diagrams, function(element) {\n    return element.id === diagramId;\n  }) || null;\n}\n\n\n/* <project-logo> */\n\nimport {\n  open as openPoweredBy,\n  BPMNIO_IMG,\n  LINK_STYLES as BPMNIO_LINK_STYLES\n} from './util/PoweredByUtil';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\n/**\n * Adds the project logo to the diagram container as\n * required by the bpmn.io license.\n *\n * @see http://bpmn.io/license\n *\n * @param {Element} container\n */\nfunction addProjectLogo(container) {\n  var img = BPMNIO_IMG;\n\n  var linkMarkup =\n    '<a href=\"http://bpmn.io\" ' +\n       'target=\"_blank\" ' +\n       'class=\"bjs-powered-by\" ' +\n       'title=\"Powered by bpmn.io\" ' +\n       'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100; ' + BPMNIO_LINK_STYLES + '\">' +\n      img +\n    '</a>';\n\n  var linkElement = domify(linkMarkup);\n\n  container.appendChild(linkElement);\n\n  domEvent.bind(linkElement, 'click', function(event) {\n    openPoweredBy();\n\n    event.preventDefault();\n  });\n}\n\n/* </project-logo> */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}