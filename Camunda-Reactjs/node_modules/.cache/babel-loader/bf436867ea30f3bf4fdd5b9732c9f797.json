{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\n * A feed can contain a meta.\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like), content);\n}\n\nFeedMeta.handledProps = ['as', 'children', 'className', 'content', 'like'];\nFeedMeta._meta = {\n  name: 'FeedMeta',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthand","customPropTypes","getElementType","getUnhandledProps","META","FeedLike","FeedMeta","props","children","className","content","like","classes","rest","ElementType","isNil","createElement","val","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport FeedLike from './FeedLike';\n\n/**\n * A feed can contain a meta.\n */\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n\n\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(\n      ElementType,\n      _extends({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    createShorthand(FeedLike, function (val) {\n      return { content: val };\n    }, like),\n    content\n  );\n}\n\nFeedMeta.handledProps = ['as', 'children', 'className', 'content', 'like'];\nFeedMeta._meta = {\n  name: 'FeedMeta',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\n\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\n\nexport default FeedMeta;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,iBAA1E,EAA6FC,IAA7F,QAAyG,WAAzG;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;EAMA,IAAIC,OAAO,GAAGhB,EAAE,CAAC,MAAD,EAASa,SAAT,CAAhB;EACA,IAAII,IAAI,GAAGV,iBAAiB,CAACG,QAAD,EAAWC,KAAX,CAA5B;EACA,IAAIO,WAAW,GAAGZ,cAAc,CAACI,QAAD,EAAWC,KAAX,CAAhC;;EAEA,IAAI,CAACR,aAAa,CAACgB,KAAd,CAAoBP,QAApB,CAAL,EAAoC;IAClC,OAAOV,KAAK,CAACkB,aAAN,CACLF,WADK,EAELnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;MAAEJ,SAAS,EAAEG;IAAb,CAAX,CAFH,EAGLJ,QAHK,CAAP;EAKD;;EAED,OAAOV,KAAK,CAACkB,aAAN,CACLF,WADK,EAELnB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;IAAEJ,SAAS,EAAEG;EAAb,CAAX,CAFH,EAGLZ,eAAe,CAACK,QAAD,EAAW,UAAUY,GAAV,EAAe;IACvC,OAAO;MAAEP,OAAO,EAAEO;IAAX,CAAP;EACD,CAFc,EAEZN,IAFY,CAHV,EAMLD,OANK,CAAP;AAQD;;AAEDJ,QAAQ,CAACY,YAAT,GAAwB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,CAAxB;AACAZ,QAAQ,CAACa,KAAT,GAAiB;EACfC,IAAI,EAAE,UADS;EAEfC,MAAM,EAAE,MAFO;EAGfC,IAAI,EAAElB,IAAI,CAACmB,KAAL,CAAWC;AAHF,CAAjB;AAMAlB,QAAQ,CAACmB,SAAT,GAAqBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC3D;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAFuC;;EAI3D;EACArB,QAAQ,EAAEX,SAAS,CAACiC,IALuC;;EAO3D;EACArB,SAAS,EAAEZ,SAAS,CAACkC,MARsC;;EAU3D;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAXkC;;EAa3D;EACArB,IAAI,EAAEV,eAAe,CAACgC;AAdqC,CAAxC,GAejB,EAfJ;AAiBA,eAAe3B,QAAf"},"metadata":{},"sourceType":"module"}