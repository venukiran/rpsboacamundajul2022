{"ast":null,"code":"import { getBBox } from '../../util/Elements';\nvar LOW_PRIORITY = 500;\nimport { append as svgAppend, attr as svgAttr, create as svgCreate } from 'tiny-svg';\nimport { query as domQuery } from 'min-dom';\nimport { assign } from 'min-dash';\n/**\n * @class\n *\n * A plugin that adds an outline to shapes and connections that may be activated and styled\n * via CSS classes.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n * @param {ElementRegistry} elementRegistry\n */\n\nexport default function Outline(eventBus, styles, elementRegistry) {\n  this.offset = 6;\n  var OUTLINE_STYLE = styles.cls('djs-outline', ['no-fill']);\n  var self = this;\n\n  function createOutline(gfx, bounds) {\n    var outline = svgCreate('rect');\n    svgAttr(outline, assign({\n      x: 10,\n      y: 10,\n      width: 100,\n      height: 100\n    }, OUTLINE_STYLE));\n    svgAppend(gfx, outline);\n    return outline;\n  } // A low priortity is necessary, because outlines of labels have to be updated\n  // after the label bounds have been updated in the renderer.\n\n\n  eventBus.on(['shape.added', 'shape.changed'], LOW_PRIORITY, function (event) {\n    var element = event.element,\n        gfx = event.gfx;\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateShapeOutline(outline, element);\n  });\n  eventBus.on(['connection.added', 'connection.changed'], function (event) {\n    var element = event.element,\n        gfx = event.gfx;\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateConnectionOutline(outline, element);\n  });\n}\n/**\n * Updates the outline of a shape respecting the dimension of the\n * element and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\n\nOutline.prototype.updateShapeOutline = function (outline, element) {\n  svgAttr(outline, {\n    x: -this.offset,\n    y: -this.offset,\n    width: element.width + this.offset * 2,\n    height: element.height + this.offset * 2\n  });\n};\n/**\n * Updates the outline of a connection respecting the bounding box of\n * the connection and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\n\n\nOutline.prototype.updateConnectionOutline = function (outline, connection) {\n  var bbox = getBBox(connection);\n  svgAttr(outline, {\n    x: bbox.x - this.offset,\n    y: bbox.y - this.offset,\n    width: bbox.width + this.offset * 2,\n    height: bbox.height + this.offset * 2\n  });\n};\n\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];","map":{"version":3,"names":["getBBox","LOW_PRIORITY","append","svgAppend","attr","svgAttr","create","svgCreate","query","domQuery","assign","Outline","eventBus","styles","elementRegistry","offset","OUTLINE_STYLE","cls","self","createOutline","gfx","bounds","outline","x","y","width","height","on","event","element","updateShapeOutline","updateConnectionOutline","prototype","connection","bbox","$inject"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/features/outline/Outline.js"],"sourcesContent":["import { getBBox } from '../../util/Elements';\n\nvar LOW_PRIORITY = 500;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  assign\n} from 'min-dash';\n\n\n/**\n * @class\n *\n * A plugin that adds an outline to shapes and connections that may be activated and styled\n * via CSS classes.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Outline(eventBus, styles, elementRegistry) {\n\n  this.offset = 6;\n\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\n\n  var self = this;\n\n  function createOutline(gfx, bounds) {\n    var outline = svgCreate('rect');\n\n    svgAttr(outline, assign({\n      x: 10,\n      y: 10,\n      width: 100,\n      height: 100\n    }, OUTLINE_STYLE));\n\n    svgAppend(gfx, outline);\n\n    return outline;\n  }\n\n  // A low priortity is necessary, because outlines of labels have to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateShapeOutline(outline, element);\n  });\n\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateConnectionOutline(outline, element);\n  });\n}\n\n\n/**\n * Updates the outline of a shape respecting the dimension of the\n * element and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateShapeOutline = function(outline, element) {\n\n  svgAttr(outline, {\n    x: -this.offset,\n    y: -this.offset,\n    width: element.width + this.offset * 2,\n    height: element.height + this.offset * 2\n  });\n\n};\n\n\n/**\n * Updates the outline of a connection respecting the bounding box of\n * the connection and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\n\n  var bbox = getBBox(connection);\n\n  svgAttr(outline, {\n    x: bbox.x - this.offset,\n    y: bbox.y - this.offset,\n    width: bbox.width + this.offset * 2,\n    height: bbox.height + this.offset * 2\n  });\n\n};\n\n\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];"],"mappings":"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"},"metadata":{},"sourceType":"module"}