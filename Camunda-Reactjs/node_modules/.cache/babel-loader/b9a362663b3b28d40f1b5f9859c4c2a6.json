{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Camunda\\\\rpsboacamundajul2022\\\\Camunda-Reactjs\\\\src\\\\components\\\\GenericForm.js\";\nimport React, { Component } from 'react';\nimport * as FormTypes from './forms';\nimport { completeTask, startProcessInstance, loadTaskVariables } from '../actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GenericForm extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.state || !this.state.loading) {\n      this.loadExistingVariables();\n    }\n  }\n\n  render() {\n    const {\n      formKey,\n      processDefinitionKey,\n      taskId\n    } = this.props;\n    const Form = FormTypes[processDefinitionKey][formKey];\n\n    if (taskId == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generic-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: (values, dispatch) => this.handleStartInstance(values, dispatch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generic-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: (values, dispatch) => this.handleComplete(values, dispatch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  loadExistingVariables() {\n    let {\n      form,\n      dispatch,\n      taskId\n    } = this.props;\n\n    if (form) {\n      this.setState({\n        loading: true\n      });\n      dispatch(loadTaskVariables(taskId, form.registeredFields));\n    }\n  }\n\n  handleComplete(values, dispatch) {\n    values = this.getBody(values);\n    return dispatch(completeTask(this.props.taskId, values));\n  }\n\n  handleStartInstance(values, dispatch) {\n    values = this.getBody(values);\n    return dispatch(startProcessInstance(this.props.processDefinitionKey, values));\n  }\n\n  getBody(values) {\n    let variables = {};\n    Object.keys(values).forEach(item => {\n      variables[item] = {\n        'value': values[item]\n      };\n    });\n    return {\n      'variables': variables\n    };\n  }\n\n}\n\nexport default connect(state => ({}))(GenericForm);","map":{"version":3,"names":["React","Component","FormTypes","completeTask","startProcessInstance","loadTaskVariables","connect","GenericForm","componentDidUpdate","prevProps","prevState","state","loading","loadExistingVariables","render","formKey","processDefinitionKey","taskId","props","Form","values","dispatch","handleStartInstance","handleComplete","form","setState","registeredFields","getBody","variables","Object","keys","forEach","item"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/src/components/GenericForm.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport * as FormTypes from './forms'\r\nimport { completeTask, startProcessInstance, loadTaskVariables } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass GenericForm extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!this.state || !this.state.loading) {\r\n      this.loadExistingVariables()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { formKey, processDefinitionKey, taskId } = this.props\r\n    const Form = FormTypes[processDefinitionKey][formKey]\r\n    if (taskId == null) {\r\n      return (\r\n        <div className=\"generic-form\">\r\n          <Form onSubmit={(values, dispatch) => this.handleStartInstance(values, dispatch)} />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"generic-form\">\r\n          <Form onSubmit={(values, dispatch) => this.handleComplete(values, dispatch)} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  loadExistingVariables() {\r\n    let { form, dispatch, taskId } = this.props\r\n    if (form) {\r\n      this.setState({ loading: true });\r\n      dispatch(loadTaskVariables(taskId, form.registeredFields))\r\n    }\r\n\r\n  }\r\n\r\n  handleComplete(values, dispatch) {\r\n    values = this.getBody(values)\r\n    return dispatch(completeTask(this.props.taskId, values))\r\n  }\r\n\r\n  handleStartInstance(values, dispatch) {\r\n    values = this.getBody(values)\r\n    return dispatch(startProcessInstance(this.props.processDefinitionKey, values))\r\n  }\r\n\r\n  getBody(values) {\r\n    let variables = {}\r\n    Object.keys(values).forEach((item) => {\r\n      variables[item] = {'value': values[item]}\r\n    });\r\n    return {\r\n      'variables': variables\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({})\r\n)(GenericForm)\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,SAA3B;AACA,SAASC,YAAT,EAAuBC,oBAAvB,EAA6CC,iBAA7C,QAAsE,YAAtE;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;EAClCO,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;IACvC,IAAI,CAAC,KAAKC,KAAN,IAAe,CAAC,KAAKA,KAAL,CAAWC,OAA/B,EAAwC;MACtC,KAAKC,qBAAL;IACD;EACF;;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEC,OAAF;MAAWC,oBAAX;MAAiCC;IAAjC,IAA4C,KAAKC,KAAvD;IACA,MAAMC,IAAI,GAAGjB,SAAS,CAACc,oBAAD,CAAT,CAAgCD,OAAhC,CAAb;;IACA,IAAIE,MAAM,IAAI,IAAd,EAAoB;MAClB,oBACE;QAAK,SAAS,EAAC,cAAf;QAAA,uBACE,QAAC,IAAD;UAAM,QAAQ,EAAE,CAACG,MAAD,EAASC,QAAT,KAAsB,KAAKC,mBAAL,CAAyBF,MAAzB,EAAiCC,QAAjC;QAAtC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAND,MAMO;MACL,oBACE;QAAK,SAAS,EAAC,cAAf;QAAA,uBACE,QAAC,IAAD;UAAM,QAAQ,EAAE,CAACD,MAAD,EAASC,QAAT,KAAsB,KAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;QAAtC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF;;EAEDR,qBAAqB,GAAG;IACtB,IAAI;MAAEW,IAAF;MAAQH,QAAR;MAAkBJ;IAAlB,IAA6B,KAAKC,KAAtC;;IACA,IAAIM,IAAJ,EAAU;MACR,KAAKC,QAAL,CAAc;QAAEb,OAAO,EAAE;MAAX,CAAd;MACAS,QAAQ,CAAChB,iBAAiB,CAACY,MAAD,EAASO,IAAI,CAACE,gBAAd,CAAlB,CAAR;IACD;EAEF;;EAEDH,cAAc,CAACH,MAAD,EAASC,QAAT,EAAmB;IAC/BD,MAAM,GAAG,KAAKO,OAAL,CAAaP,MAAb,CAAT;IACA,OAAOC,QAAQ,CAAClB,YAAY,CAAC,KAAKe,KAAL,CAAWD,MAAZ,EAAoBG,MAApB,CAAb,CAAf;EACD;;EAEDE,mBAAmB,CAACF,MAAD,EAASC,QAAT,EAAmB;IACpCD,MAAM,GAAG,KAAKO,OAAL,CAAaP,MAAb,CAAT;IACA,OAAOC,QAAQ,CAACjB,oBAAoB,CAAC,KAAKc,KAAL,CAAWF,oBAAZ,EAAkCI,MAAlC,CAArB,CAAf;EACD;;EAEDO,OAAO,CAACP,MAAD,EAAS;IACd,IAAIQ,SAAS,GAAG,EAAhB;IACAC,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,OAApB,CAA6BC,IAAD,IAAU;MACpCJ,SAAS,CAACI,IAAD,CAAT,GAAkB;QAAC,SAASZ,MAAM,CAACY,IAAD;MAAhB,CAAlB;IACD,CAFD;IAGA,OAAO;MACL,aAAaJ;IADR,CAAP;EAGD;;AApDiC;;AAuDpC,eAAetB,OAAO,CACpBK,KAAK,KAAK,EAAL,CADe,CAAP,CAEbJ,WAFa,CAAf"},"metadata":{},"sourceType":"module"}