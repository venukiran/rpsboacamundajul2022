{"ast":null,"code":"import { assign } from 'min-dash';\nimport TextUtil from 'diagram-js/lib/util/Text';\nvar DEFAULT_FONT_SIZE = 12;\nvar LINE_HEIGHT_RATIO = 1.2;\nvar MIN_TEXT_ANNOTATION_HEIGHT = 30;\nexport default function TextRenderer(config) {\n  var defaultStyle = assign({\n    fontFamily: 'Arial, sans-serif',\n    fontSize: DEFAULT_FONT_SIZE,\n    fontWeight: 'normal',\n    lineHeight: LINE_HEIGHT_RATIO\n  }, config && config.defaultStyle || {});\n  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;\n  var externalStyle = assign({}, defaultStyle, {\n    fontSize: fontSize\n  }, config && config.externalStyle || {});\n  var textUtil = new TextUtil({\n    style: defaultStyle\n  });\n  /**\n   * Get the new bounds of an externally rendered,\n   * layouted label.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n\n  this.getExternalLabelBounds = function (bounds, text) {\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: {\n        width: 90,\n        height: 30,\n        x: bounds.width / 2 + bounds.x,\n        y: bounds.height / 2 + bounds.y\n      },\n      style: externalStyle\n    }); // resize label shape to fit label text\n\n    return {\n      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),\n      y: Math.round(bounds.y),\n      width: Math.ceil(layoutedDimensions.width),\n      height: Math.ceil(layoutedDimensions.height)\n    };\n  };\n  /**\n   * Get the new bounds of text annotation.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n\n\n  this.getTextAnnotationBounds = function (bounds, text) {\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: bounds,\n      style: defaultStyle,\n      align: 'left-top',\n      padding: 5\n    });\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width,\n      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))\n    };\n  };\n  /**\n   * Create a layouted text element.\n   *\n   * @param {string} text\n   * @param {Object} [options]\n   *\n   * @return {SVGElement} rendered text\n   */\n\n\n  this.createText = function (text, options) {\n    return textUtil.createText(text, options || {});\n  };\n  /**\n   * Get default text style.\n   */\n\n\n  this.getDefaultStyle = function () {\n    return defaultStyle;\n  };\n  /**\n   * Get the external text style.\n   */\n\n\n  this.getExternalStyle = function () {\n    return externalStyle;\n  };\n}\nTextRenderer.$inject = ['config.textRenderer'];","map":{"version":3,"names":["assign","TextUtil","DEFAULT_FONT_SIZE","LINE_HEIGHT_RATIO","MIN_TEXT_ANNOTATION_HEIGHT","TextRenderer","config","defaultStyle","fontFamily","fontSize","fontWeight","lineHeight","parseInt","externalStyle","textUtil","style","getExternalLabelBounds","bounds","text","layoutedDimensions","getDimensions","box","width","height","x","y","Math","round","ceil","getTextAnnotationBounds","align","padding","max","createText","options","getDefaultStyle","getExternalStyle","$inject"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/bpmn-js/lib/draw/TextRenderer.js"],"sourcesContent":["import { assign } from 'min-dash';\n\nimport TextUtil from 'diagram-js/lib/util/Text';\n\nvar DEFAULT_FONT_SIZE = 12;\nvar LINE_HEIGHT_RATIO = 1.2;\n\nvar MIN_TEXT_ANNOTATION_HEIGHT = 30;\n\n\nexport default function TextRenderer(config) {\n\n  var defaultStyle = assign({\n    fontFamily: 'Arial, sans-serif',\n    fontSize: DEFAULT_FONT_SIZE,\n    fontWeight: 'normal',\n    lineHeight: LINE_HEIGHT_RATIO\n  }, config && config.defaultStyle || {});\n\n  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;\n\n  var externalStyle = assign({}, defaultStyle, {\n    fontSize: fontSize\n  }, config && config.externalStyle || {});\n\n  var textUtil = new TextUtil({\n    style: defaultStyle\n  });\n\n  /**\n   * Get the new bounds of an externally rendered,\n   * layouted label.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getExternalLabelBounds = function(bounds, text) {\n\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: {\n        width: 90,\n        height: 30,\n        x: bounds.width / 2 + bounds.x,\n        y: bounds.height / 2 + bounds.y\n      },\n      style: externalStyle\n    });\n\n    // resize label shape to fit label text\n    return {\n      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),\n      y: Math.round(bounds.y),\n      width: Math.ceil(layoutedDimensions.width),\n      height: Math.ceil(layoutedDimensions.height)\n    };\n\n  };\n\n  /**\n   * Get the new bounds of text annotation.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getTextAnnotationBounds = function(bounds, text) {\n\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: bounds,\n      style: defaultStyle,\n      align: 'left-top',\n      padding: 5\n    });\n\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width,\n      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))\n    };\n  };\n\n  /**\n   * Create a layouted text element.\n   *\n   * @param {string} text\n   * @param {Object} [options]\n   *\n   * @return {SVGElement} rendered text\n   */\n  this.createText = function(text, options) {\n    return textUtil.createText(text, options || {});\n  };\n\n  /**\n   * Get default text style.\n   */\n  this.getDefaultStyle = function() {\n    return defaultStyle;\n  };\n\n  /**\n   * Get the external text style.\n   */\n  this.getExternalStyle = function() {\n    return externalStyle;\n  };\n\n}\n\nTextRenderer.$inject = [\n  'config.textRenderer'\n];"],"mappings":"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"},"metadata":{},"sourceType":"module"}