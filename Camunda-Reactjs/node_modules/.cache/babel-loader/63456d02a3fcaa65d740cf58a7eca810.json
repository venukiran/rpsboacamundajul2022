{"ast":null,"code":"import { forEach, assign } from 'min-dash';\nimport { delegate as domDelegate, query as domQuery, queryAll as domQueryAll } from 'min-dom';\nimport { isPrimaryButton, isAuxiliaryButton } from '../../util/Mouse';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { createLine, updateLine } from '../../util/RenderUtil';\n\nfunction allowAll(event) {\n  return true;\n}\n\nfunction allowPrimaryAndAuxiliary(event) {\n  return isPrimaryButton(event) || isAuxiliaryButton(event);\n}\n\nvar LOW_PRIORITY = 500;\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.click\n *   * element.contextmenu\n *   * element.dblclick\n *   * element.hover\n *   * element.mousedown\n *   * element.mousemove\n *   * element.mouseup\n *   * element.out\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault()\n * prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\n\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\n  var self = this;\n  /**\n   * Fire an interaction event.\n   *\n   * @param {string} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n\n  function fire(type, event, element) {\n    if (isIgnored(type, event)) {\n      return;\n    }\n\n    var target, gfx, returnValue;\n\n    if (!element) {\n      target = event.delegateTarget || event.target;\n\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n\n    if (!gfx || !element) {\n      return;\n    }\n\n    returnValue = eventBus.fire(type, {\n      element: element,\n      gfx: gfx,\n      originalEvent: event\n    });\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  } // TODO(nikku): document this\n\n\n  var handlers = {};\n\n  function mouseHandler(localEventName) {\n    return handlers[localEventName];\n  }\n\n  function isIgnored(localEventName, event) {\n    var filter = ignoredFilters[localEventName] || isPrimaryButton; // only react on left mouse button interactions\n    // except for interaction events that are enabled\n    // for secundary mouse button\n\n    return !filter(event);\n  }\n\n  var bindings = {\n    click: 'element.click',\n    contextmenu: 'element.contextmenu',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mousemove: 'element.mousemove',\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    mouseup: 'element.mouseup'\n  };\n  var ignoredFilters = {\n    'element.contextmenu': allowAll,\n    'element.mousedown': allowPrimaryAndAuxiliary,\n    'element.mouseup': allowPrimaryAndAuxiliary,\n    'element.click': allowPrimaryAndAuxiliary,\n    'element.dblclick': allowPrimaryAndAuxiliary\n  }; // manual event trigger //////////\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {string} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n\n  function triggerMouseEvent(eventName, event, targetElement) {\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n\n    return fire(localEventName, event, targetElement);\n  }\n\n  var ELEMENT_SELECTOR = 'svg, .djs-element'; // event handling ///////\n\n  function registerEvent(node, event, localEvent, ignoredFilter) {\n    var handler = handlers[localEvent] = function (event) {\n      fire(localEvent, event);\n    };\n\n    if (ignoredFilter) {\n      ignoredFilters[localEvent] = ignoredFilter;\n    }\n\n    handler.$delegate = domDelegate.bind(node, ELEMENT_SELECTOR, event, handler);\n  }\n\n  function unregisterEvent(node, event, localEvent) {\n    var handler = mouseHandler(localEvent);\n\n    if (!handler) {\n      return;\n    }\n\n    domDelegate.unbind(node, event, handler.$delegate);\n  }\n\n  function registerEvents(svg) {\n    forEach(bindings, function (val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n\n  function unregisterEvents(svg) {\n    forEach(bindings, function (val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n\n  eventBus.on('canvas.destroy', function (event) {\n    unregisterEvents(event.svg);\n  });\n  eventBus.on('canvas.init', function (event) {\n    registerEvents(event.svg);\n  }); // hit box updating ////////////////\n\n  eventBus.on(['shape.added', 'connection.added'], function (event) {\n    var element = event.element,\n        gfx = event.gfx;\n    eventBus.fire('interactionEvents.createHit', {\n      element: element,\n      gfx: gfx\n    });\n  }); // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n\n  eventBus.on(['shape.changed', 'connection.changed'], LOW_PRIORITY, function (event) {\n    var element = event.element,\n        gfx = event.gfx;\n    eventBus.fire('interactionEvents.updateHit', {\n      element: element,\n      gfx: gfx\n    });\n  });\n  eventBus.on('interactionEvents.createHit', LOW_PRIORITY, function (event) {\n    var element = event.element,\n        gfx = event.gfx;\n    self.createDefaultHit(element, gfx);\n  });\n  eventBus.on('interactionEvents.updateHit', function (event) {\n    var element = event.element,\n        gfx = event.gfx;\n    self.updateDefaultHit(element, gfx);\n  }); // hit styles ////////////\n\n  var STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-stroke');\n  var CLICK_STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-click-stroke');\n  var ALL_HIT_STYLE = createHitStyle('djs-hit djs-hit-all');\n  var HIT_TYPES = {\n    'all': ALL_HIT_STYLE,\n    'click-stroke': CLICK_STROKE_HIT_STYLE,\n    'stroke': STROKE_HIT_STYLE\n  };\n\n  function createHitStyle(classNames, attrs) {\n    attrs = assign({\n      stroke: 'white',\n      strokeWidth: 15\n    }, attrs || {});\n    return styles.cls(classNames, ['no-fill', 'no-border'], attrs);\n  } // style helpers ///////////////\n\n\n  function applyStyle(hit, type) {\n    var attrs = HIT_TYPES[type];\n\n    if (!attrs) {\n      throw new Error('invalid hit type <' + type + '>');\n    }\n\n    svgAttr(hit, attrs);\n    return hit;\n  }\n\n  function appendHit(gfx, hit) {\n    svgAppend(gfx, hit);\n  } // API\n\n  /**\n   * Remove hints on the given graphics.\n   *\n   * @param {SVGElement} gfx\n   */\n\n\n  this.removeHits = function (gfx) {\n    var hits = domQueryAll('.djs-hit', gfx);\n    forEach(hits, svgRemove);\n  };\n  /**\n   * Create default hit for the given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {SVGElement} gfx\n   *\n   * @return {SVGElement} created hit\n   */\n\n\n  this.createDefaultHit = function (element, gfx) {\n    var waypoints = element.waypoints,\n        isFrame = element.isFrame,\n        boxType;\n\n    if (waypoints) {\n      return this.createWaypointsHit(gfx, waypoints);\n    } else {\n      boxType = isFrame ? 'stroke' : 'all';\n      return this.createBoxHit(gfx, boxType, {\n        width: element.width,\n        height: element.height\n      });\n    }\n  };\n  /**\n   * Create hits for the given waypoints.\n   *\n   * @param {SVGElement} gfx\n   * @param {Array<Point>} waypoints\n   *\n   * @return {SVGElement}\n   */\n\n\n  this.createWaypointsHit = function (gfx, waypoints) {\n    var hit = createLine(waypoints);\n    applyStyle(hit, 'stroke');\n    appendHit(gfx, hit);\n    return hit;\n  };\n  /**\n   * Create hits for a box.\n   *\n   * @param {SVGElement} gfx\n   * @param {string} hitType\n   * @param {Object} attrs\n   *\n   * @return {SVGElement}\n   */\n\n\n  this.createBoxHit = function (gfx, type, attrs) {\n    attrs = assign({\n      x: 0,\n      y: 0\n    }, attrs);\n    var hit = svgCreate('rect');\n    applyStyle(hit, type);\n    svgAttr(hit, attrs);\n    appendHit(gfx, hit);\n    return hit;\n  };\n  /**\n   * Update default hit of the element.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {SVGElement} gfx\n   *\n   * @return {SVGElement} updated hit\n   */\n\n\n  this.updateDefaultHit = function (element, gfx) {\n    var hit = domQuery('.djs-hit', gfx);\n\n    if (!hit) {\n      return;\n    }\n\n    if (element.waypoints) {\n      updateLine(hit, element.waypoints);\n    } else {\n      svgAttr(hit, {\n        width: element.width,\n        height: element.height\n      });\n    }\n\n    return hit;\n  };\n\n  this.fire = fire;\n  this.triggerMouseEvent = triggerMouseEvent;\n  this.mouseHandler = mouseHandler;\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\nInteractionEvents.$inject = ['eventBus', 'elementRegistry', 'styles'];\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the context menu action is triggered\n * via mouse or touch controls.\n *\n * @event element.contextmenu\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */","map":{"version":3,"names":["forEach","assign","delegate","domDelegate","query","domQuery","queryAll","domQueryAll","isPrimaryButton","isAuxiliaryButton","append","svgAppend","attr","svgAttr","create","svgCreate","remove","svgRemove","createLine","updateLine","allowAll","event","allowPrimaryAndAuxiliary","LOW_PRIORITY","InteractionEvents","eventBus","elementRegistry","styles","self","fire","type","element","isIgnored","target","gfx","returnValue","delegateTarget","get","getGraphics","originalEvent","stopPropagation","preventDefault","handlers","mouseHandler","localEventName","filter","ignoredFilters","bindings","click","contextmenu","dblclick","mousedown","mousemove","mouseover","mouseout","mouseup","triggerMouseEvent","eventName","targetElement","Error","ELEMENT_SELECTOR","registerEvent","node","localEvent","ignoredFilter","handler","$delegate","bind","unregisterEvent","unbind","registerEvents","svg","val","key","unregisterEvents","on","createDefaultHit","updateDefaultHit","STROKE_HIT_STYLE","createHitStyle","CLICK_STROKE_HIT_STYLE","ALL_HIT_STYLE","HIT_TYPES","classNames","attrs","stroke","strokeWidth","cls","applyStyle","hit","appendHit","removeHits","hits","waypoints","isFrame","boxType","createWaypointsHit","createBoxHit","width","height","x","y","$inject"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/features/interaction-events/InteractionEvents.js"],"sourcesContent":["import {\n  forEach,\n  assign\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  query as domQuery,\n  queryAll as domQueryAll\n} from 'min-dom';\n\nimport {\n  isPrimaryButton,\n  isAuxiliaryButton\n} from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  createLine,\n  updateLine\n} from '../../util/RenderUtil';\n\nfunction allowAll(event) { return true; }\n\nfunction allowPrimaryAndAuxiliary(event) {\n  return isPrimaryButton(event) || isAuxiliaryButton(event);\n}\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.click\n *   * element.contextmenu\n *   * element.dblclick\n *   * element.hover\n *   * element.mousedown\n *   * element.mousemove\n *   * element.mouseup\n *   * element.out\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault()\n * prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\n\n  var self = this;\n\n  /**\n   * Fire an interaction event.\n   *\n   * @param {string} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n  function fire(type, event, element) {\n\n    if (isIgnored(type, event)) {\n      return;\n    }\n\n    var target, gfx, returnValue;\n\n    if (!element) {\n      target = event.delegateTarget || event.target;\n\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n\n    if (!gfx || !element) {\n      return;\n    }\n\n    returnValue = eventBus.fire(type, {\n      element: element,\n      gfx: gfx,\n      originalEvent: event\n    });\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // TODO(nikku): document this\n  var handlers = {};\n\n  function mouseHandler(localEventName) {\n    return handlers[localEventName];\n  }\n\n  function isIgnored(localEventName, event) {\n\n    var filter = ignoredFilters[localEventName] || isPrimaryButton;\n\n    // only react on left mouse button interactions\n    // except for interaction events that are enabled\n    // for secundary mouse button\n    return !filter(event);\n  }\n\n  var bindings = {\n    click: 'element.click',\n    contextmenu: 'element.contextmenu',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mousemove: 'element.mousemove',\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    mouseup: 'element.mouseup',\n  };\n\n  var ignoredFilters = {\n    'element.contextmenu': allowAll,\n    'element.mousedown': allowPrimaryAndAuxiliary,\n    'element.mouseup': allowPrimaryAndAuxiliary,\n    'element.click': allowPrimaryAndAuxiliary,\n    'element.dblclick': allowPrimaryAndAuxiliary\n  };\n\n\n  // manual event trigger //////////\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {string} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n  function triggerMouseEvent(eventName, event, targetElement) {\n\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n\n    return fire(localEventName, event, targetElement);\n  }\n\n\n  var ELEMENT_SELECTOR = 'svg, .djs-element';\n\n  // event handling ///////\n\n  function registerEvent(node, event, localEvent, ignoredFilter) {\n\n    var handler = handlers[localEvent] = function(event) {\n      fire(localEvent, event);\n    };\n\n    if (ignoredFilter) {\n      ignoredFilters[localEvent] = ignoredFilter;\n    }\n\n    handler.$delegate = domDelegate.bind(node, ELEMENT_SELECTOR, event, handler);\n  }\n\n  function unregisterEvent(node, event, localEvent) {\n\n    var handler = mouseHandler(localEvent);\n\n    if (!handler) {\n      return;\n    }\n\n    domDelegate.unbind(node, event, handler.$delegate);\n  }\n\n  function registerEvents(svg) {\n    forEach(bindings, function(val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n\n  function unregisterEvents(svg) {\n    forEach(bindings, function(val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n\n  eventBus.on('canvas.destroy', function(event) {\n    unregisterEvents(event.svg);\n  });\n\n  eventBus.on('canvas.init', function(event) {\n    registerEvents(event.svg);\n  });\n\n\n  // hit box updating ////////////////\n\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.createHit', { element: element, gfx: gfx });\n  });\n\n  // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([\n    'shape.changed',\n    'connection.changed'\n  ], LOW_PRIORITY, function(event) {\n\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.updateHit', { element: element, gfx: gfx });\n  });\n\n  eventBus.on('interactionEvents.createHit', LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.createDefaultHit(element, gfx);\n  });\n\n  eventBus.on('interactionEvents.updateHit', function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.updateDefaultHit(element, gfx);\n  });\n\n\n  // hit styles ////////////\n\n  var STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-stroke');\n\n  var CLICK_STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-click-stroke');\n\n  var ALL_HIT_STYLE = createHitStyle('djs-hit djs-hit-all');\n\n  var HIT_TYPES = {\n    'all': ALL_HIT_STYLE,\n    'click-stroke': CLICK_STROKE_HIT_STYLE,\n    'stroke': STROKE_HIT_STYLE\n  };\n\n  function createHitStyle(classNames, attrs) {\n\n    attrs = assign({\n      stroke: 'white',\n      strokeWidth: 15\n    }, attrs || {});\n\n    return styles.cls(classNames, [ 'no-fill', 'no-border' ], attrs);\n  }\n\n\n  // style helpers ///////////////\n\n  function applyStyle(hit, type) {\n\n    var attrs = HIT_TYPES[type];\n\n    if (!attrs) {\n      throw new Error('invalid hit type <' + type + '>');\n    }\n\n    svgAttr(hit, attrs);\n\n    return hit;\n  }\n\n  function appendHit(gfx, hit) {\n    svgAppend(gfx, hit);\n  }\n\n\n  // API\n\n  /**\n   * Remove hints on the given graphics.\n   *\n   * @param {SVGElement} gfx\n   */\n  this.removeHits = function(gfx) {\n    var hits = domQueryAll('.djs-hit', gfx);\n\n    forEach(hits, svgRemove);\n  };\n\n  /**\n   * Create default hit for the given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {SVGElement} gfx\n   *\n   * @return {SVGElement} created hit\n   */\n  this.createDefaultHit = function(element, gfx) {\n    var waypoints = element.waypoints,\n        isFrame = element.isFrame,\n        boxType;\n\n    if (waypoints) {\n      return this.createWaypointsHit(gfx, waypoints);\n    } else {\n\n      boxType = isFrame ? 'stroke' : 'all';\n\n      return this.createBoxHit(gfx, boxType, {\n        width: element.width,\n        height: element.height\n      });\n    }\n  };\n\n  /**\n   * Create hits for the given waypoints.\n   *\n   * @param {SVGElement} gfx\n   * @param {Array<Point>} waypoints\n   *\n   * @return {SVGElement}\n   */\n  this.createWaypointsHit = function(gfx, waypoints) {\n\n    var hit = createLine(waypoints);\n\n    applyStyle(hit, 'stroke');\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Create hits for a box.\n   *\n   * @param {SVGElement} gfx\n   * @param {string} hitType\n   * @param {Object} attrs\n   *\n   * @return {SVGElement}\n   */\n  this.createBoxHit = function(gfx, type, attrs) {\n\n    attrs = assign({\n      x: 0,\n      y: 0\n    }, attrs);\n\n    var hit = svgCreate('rect');\n\n    applyStyle(hit, type);\n\n    svgAttr(hit, attrs);\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Update default hit of the element.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {SVGElement} gfx\n   *\n   * @return {SVGElement} updated hit\n   */\n  this.updateDefaultHit = function(element, gfx) {\n\n    var hit = domQuery('.djs-hit', gfx);\n\n    if (!hit) {\n      return;\n    }\n\n    if (element.waypoints) {\n      updateLine(hit, element.waypoints);\n    } else {\n      svgAttr(hit, {\n        width: element.width,\n        height: element.height\n      });\n    }\n\n    return hit;\n  };\n\n  this.fire = fire;\n\n  this.triggerMouseEvent = triggerMouseEvent;\n\n  this.mouseHandler = mouseHandler;\n\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\n\n\nInteractionEvents.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'styles'\n];\n\n\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the context menu action is triggered\n * via mouse or touch controls.\n *\n * @event element.contextmenu\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */"],"mappings":"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"},"metadata":{},"sourceType":"module"}