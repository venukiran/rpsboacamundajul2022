{"ast":null,"code":"import { isArray, forEach } from 'min-dash';\n/**\n * A service that offers the current selection in a diagram.\n * Offers the api to control the selection, too.\n *\n * @class\n *\n * @param {EventBus} eventBus the event bus\n */\n\nexport default function Selection(eventBus, canvas) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._selectedElements = [];\n  var self = this;\n  eventBus.on(['shape.remove', 'connection.remove'], function (e) {\n    var element = e.element;\n    self.deselect(element);\n  });\n  eventBus.on(['diagram.clear', 'plane.set'], function (e) {\n    self.select(null);\n  });\n}\nSelection.$inject = ['eventBus', 'canvas'];\n\nSelection.prototype.deselect = function (element) {\n  var selectedElements = this._selectedElements;\n  var idx = selectedElements.indexOf(element);\n\n  if (idx !== -1) {\n    var oldSelection = selectedElements.slice();\n    selectedElements.splice(idx, 1);\n\n    this._eventBus.fire('selection.changed', {\n      oldSelection: oldSelection,\n      newSelection: selectedElements\n    });\n  }\n};\n\nSelection.prototype.get = function () {\n  return this._selectedElements;\n};\n\nSelection.prototype.isSelected = function (element) {\n  return this._selectedElements.indexOf(element) !== -1;\n};\n/**\n * This method selects one or more elements on the diagram.\n *\n * By passing an additional add parameter you can decide whether or not the element(s)\n * should be added to the already existing selection or not.\n *\n * @method Selection#select\n *\n * @param  {Object|Object[]} elements element or array of elements to be selected\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\n */\n\n\nSelection.prototype.select = function (elements, add) {\n  var selectedElements = this._selectedElements,\n      oldSelection = selectedElements.slice();\n\n  if (!isArray(elements)) {\n    elements = elements ? [elements] : [];\n  }\n\n  var canvas = this._canvas;\n  elements = elements.filter(function (element) {\n    var plane = canvas.findPlane(element);\n    return plane === canvas.getActivePlane();\n  }); // selection may be cleared by passing an empty array or null\n  // to the method\n\n  if (add) {\n    forEach(elements, function (element) {\n      if (selectedElements.indexOf(element) !== -1) {\n        // already selected\n        return;\n      } else {\n        selectedElements.push(element);\n      }\n    });\n  } else {\n    this._selectedElements = selectedElements = elements.slice();\n  }\n\n  this._eventBus.fire('selection.changed', {\n    oldSelection: oldSelection,\n    newSelection: selectedElements\n  });\n};","map":{"version":3,"names":["isArray","forEach","Selection","eventBus","canvas","_eventBus","_canvas","_selectedElements","self","on","e","element","deselect","select","$inject","prototype","selectedElements","idx","indexOf","oldSelection","slice","splice","fire","newSelection","get","isSelected","elements","add","filter","plane","findPlane","getActivePlane","push"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/features/selection/Selection.js"],"sourcesContent":["import {\n  isArray,\n  forEach\n} from 'min-dash';\n\n\n/**\n * A service that offers the current selection in a diagram.\n * Offers the api to control the selection, too.\n *\n * @class\n *\n * @param {EventBus} eventBus the event bus\n */\nexport default function Selection(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._selectedElements = [];\n\n  var self = this;\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    self.deselect(element);\n  });\n\n  eventBus.on([ 'diagram.clear', 'plane.set' ], function(e) {\n    self.select(null);\n  });\n}\n\nSelection.$inject = [ 'eventBus', 'canvas' ];\n\n\nSelection.prototype.deselect = function(element) {\n  var selectedElements = this._selectedElements;\n\n  var idx = selectedElements.indexOf(element);\n\n  if (idx !== -1) {\n    var oldSelection = selectedElements.slice();\n\n    selectedElements.splice(idx, 1);\n\n    this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n  }\n};\n\n\nSelection.prototype.get = function() {\n  return this._selectedElements;\n};\n\nSelection.prototype.isSelected = function(element) {\n  return this._selectedElements.indexOf(element) !== -1;\n};\n\n\n/**\n * This method selects one or more elements on the diagram.\n *\n * By passing an additional add parameter you can decide whether or not the element(s)\n * should be added to the already existing selection or not.\n *\n * @method Selection#select\n *\n * @param  {Object|Object[]} elements element or array of elements to be selected\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\n */\nSelection.prototype.select = function(elements, add) {\n  var selectedElements = this._selectedElements,\n      oldSelection = selectedElements.slice();\n\n  if (!isArray(elements)) {\n    elements = elements ? [ elements ] : [];\n  }\n\n  var canvas = this._canvas;\n\n  elements = elements.filter(function(element) {\n    var plane = canvas.findPlane(element);\n\n    return plane === canvas.getActivePlane();\n  });\n\n  // selection may be cleared by passing an empty array or null\n  // to the method\n  if (add) {\n    forEach(elements, function(element) {\n      if (selectedElements.indexOf(element) !== -1) {\n\n        // already selected\n        return;\n      } else {\n        selectedElements.push(element);\n      }\n    });\n  } else {\n    this._selectedElements = selectedElements = elements.slice();\n  }\n\n  this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n};\n"],"mappings":"AAAA,SACEA,OADF,EAEEC,OAFF,QAGO,UAHP;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,MAA7B,EAAqC;EAElD,KAAKC,SAAL,GAAiBF,QAAjB;EACA,KAAKG,OAAL,GAAeF,MAAf;EAEA,KAAKG,iBAAL,GAAyB,EAAzB;EAEA,IAAIC,IAAI,GAAG,IAAX;EAEAL,QAAQ,CAACM,EAAT,CAAY,CAAE,cAAF,EAAkB,mBAAlB,CAAZ,EAAqD,UAASC,CAAT,EAAY;IAC/D,IAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;IACAH,IAAI,CAACI,QAAL,CAAcD,OAAd;EACD,CAHD;EAKAR,QAAQ,CAACM,EAAT,CAAY,CAAE,eAAF,EAAmB,WAAnB,CAAZ,EAA8C,UAASC,CAAT,EAAY;IACxDF,IAAI,CAACK,MAAL,CAAY,IAAZ;EACD,CAFD;AAGD;AAEDX,SAAS,CAACY,OAAV,GAAoB,CAAE,UAAF,EAAc,QAAd,CAApB;;AAGAZ,SAAS,CAACa,SAAV,CAAoBH,QAApB,GAA+B,UAASD,OAAT,EAAkB;EAC/C,IAAIK,gBAAgB,GAAG,KAAKT,iBAA5B;EAEA,IAAIU,GAAG,GAAGD,gBAAgB,CAACE,OAAjB,CAAyBP,OAAzB,CAAV;;EAEA,IAAIM,GAAG,KAAK,CAAC,CAAb,EAAgB;IACd,IAAIE,YAAY,GAAGH,gBAAgB,CAACI,KAAjB,EAAnB;IAEAJ,gBAAgB,CAACK,MAAjB,CAAwBJ,GAAxB,EAA6B,CAA7B;;IAEA,KAAKZ,SAAL,CAAeiB,IAAf,CAAoB,mBAApB,EAAyC;MAAEH,YAAY,EAAEA,YAAhB;MAA8BI,YAAY,EAAEP;IAA5C,CAAzC;EACD;AACF,CAZD;;AAeAd,SAAS,CAACa,SAAV,CAAoBS,GAApB,GAA0B,YAAW;EACnC,OAAO,KAAKjB,iBAAZ;AACD,CAFD;;AAIAL,SAAS,CAACa,SAAV,CAAoBU,UAApB,GAAiC,UAASd,OAAT,EAAkB;EACjD,OAAO,KAAKJ,iBAAL,CAAuBW,OAAvB,CAA+BP,OAA/B,MAA4C,CAAC,CAApD;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAT,SAAS,CAACa,SAAV,CAAoBF,MAApB,GAA6B,UAASa,QAAT,EAAmBC,GAAnB,EAAwB;EACnD,IAAIX,gBAAgB,GAAG,KAAKT,iBAA5B;EAAA,IACIY,YAAY,GAAGH,gBAAgB,CAACI,KAAjB,EADnB;;EAGA,IAAI,CAACpB,OAAO,CAAC0B,QAAD,CAAZ,EAAwB;IACtBA,QAAQ,GAAGA,QAAQ,GAAG,CAAEA,QAAF,CAAH,GAAkB,EAArC;EACD;;EAED,IAAItB,MAAM,GAAG,KAAKE,OAAlB;EAEAoB,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,UAASjB,OAAT,EAAkB;IAC3C,IAAIkB,KAAK,GAAGzB,MAAM,CAAC0B,SAAP,CAAiBnB,OAAjB,CAAZ;IAEA,OAAOkB,KAAK,KAAKzB,MAAM,CAAC2B,cAAP,EAAjB;EACD,CAJU,CAAX,CAVmD,CAgBnD;EACA;;EACA,IAAIJ,GAAJ,EAAS;IACP1B,OAAO,CAACyB,QAAD,EAAW,UAASf,OAAT,EAAkB;MAClC,IAAIK,gBAAgB,CAACE,OAAjB,CAAyBP,OAAzB,MAAsC,CAAC,CAA3C,EAA8C;QAE5C;QACA;MACD,CAJD,MAIO;QACLK,gBAAgB,CAACgB,IAAjB,CAAsBrB,OAAtB;MACD;IACF,CARM,CAAP;EASD,CAVD,MAUO;IACL,KAAKJ,iBAAL,GAAyBS,gBAAgB,GAAGU,QAAQ,CAACN,KAAT,EAA5C;EACD;;EAED,KAAKf,SAAL,CAAeiB,IAAf,CAAoB,mBAApB,EAAyC;IAAEH,YAAY,EAAEA,YAAhB;IAA8BI,YAAY,EAAEP;EAA5C,CAAzC;AACD,CAjCD"},"metadata":{},"sourceType":"module"}