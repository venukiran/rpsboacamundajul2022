{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * An event can contain an image or icon label.\n */\n\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(FeedLabel, props);\n  var ElementType = getElementType(FeedLabel, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, Icon.create(icon), createHTMLImage(image));\n}\n\nFeedLabel.handledProps = ['as', 'children', 'className', 'content', 'icon', 'image'];\nFeedLabel._meta = {\n  name: 'FeedLabel',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand\n} : {};\nexport default FeedLabel;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createHTMLImage","customPropTypes","getElementType","getUnhandledProps","META","Icon","FeedLabel","props","children","className","content","icon","image","classes","rest","ElementType","isNil","createElement","create","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Feed/FeedLabel.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Icon from '../../elements/Icon';\n\n/**\n * An event can contain an image or icon label.\n */\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n\n\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(FeedLabel, props);\n  var ElementType = getElementType(FeedLabel, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(\n      ElementType,\n      _extends({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    content,\n    Icon.create(icon),\n    createHTMLImage(image)\n  );\n}\n\nFeedLabel.handledProps = ['as', 'children', 'className', 'content', 'icon', 'image'];\nFeedLabel._meta = {\n  name: 'FeedLabel',\n  parent: 'Feed',\n  type: META.TYPES.VIEW\n};\n\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand\n} : {};\n\nexport default FeedLabel;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,iBAA1E,EAA6FC,IAA7F,QAAyG,WAAzG;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;EAAA,IAIIC,KAAK,GAAGL,KAAK,CAACK,KAJlB;EAOA,IAAIC,OAAO,GAAGjB,EAAE,CAAC,OAAD,EAAUa,SAAV,CAAhB;EACA,IAAIK,IAAI,GAAGX,iBAAiB,CAACG,SAAD,EAAYC,KAAZ,CAA5B;EACA,IAAIQ,WAAW,GAAGb,cAAc,CAACI,SAAD,EAAYC,KAAZ,CAAhC;;EAEA,IAAI,CAACR,aAAa,CAACiB,KAAd,CAAoBR,QAApB,CAAL,EAAoC;IAClC,OAAOV,KAAK,CAACmB,aAAN,CACLF,WADK,EAELpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;MAAEL,SAAS,EAAEI;IAAb,CAAX,CAFH,EAGLL,QAHK,CAAP;EAKD;;EAED,OAAOV,KAAK,CAACmB,aAAN,CACLF,WADK,EAELpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;IAAEL,SAAS,EAAEI;EAAb,CAAX,CAFH,EAGLH,OAHK,EAILL,IAAI,CAACa,MAAL,CAAYP,IAAZ,CAJK,EAKLX,eAAe,CAACY,KAAD,CALV,CAAP;AAOD;;AAEDN,SAAS,CAACa,YAAV,GAAyB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,OAAnD,CAAzB;AACAb,SAAS,CAACc,KAAV,GAAkB;EAChBC,IAAI,EAAE,WADU;EAEhBC,MAAM,EAAE,MAFQ;EAGhBC,IAAI,EAAEnB,IAAI,CAACoB,KAAL,CAAWC;AAHD,CAAlB;AAMAnB,SAAS,CAACoB,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC5D;EACAC,EAAE,EAAE7B,eAAe,CAAC6B,EAFwC;;EAI5D;EACAtB,QAAQ,EAAEX,SAAS,CAACkC,IALwC;;EAO5D;EACAtB,SAAS,EAAEZ,SAAS,CAACmC,MARuC;;EAU5D;EACAtB,OAAO,EAAET,eAAe,CAACgC,gBAXmC;;EAa5D;EACAtB,IAAI,EAAEV,eAAe,CAACiC,aAdsC;;EAgB5D;EACAtB,KAAK,EAAEX,eAAe,CAACiC;AAjBqC,CAAxC,GAkBlB,EAlBJ;AAoBA,eAAe5B,SAAf"},"metadata":{},"sourceType":"module"}