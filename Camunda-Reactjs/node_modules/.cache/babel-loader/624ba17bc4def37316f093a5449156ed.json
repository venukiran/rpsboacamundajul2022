{"ast":null,"code":"/**\n * Failsafe remove an element from a collection\n *\n * @param  {Array<Object>} [collection]\n * @param  {Object} [element]\n *\n * @return {number} the previous index of the element\n */\nexport function remove(collection, element) {\n  if (!collection || !element) {\n    return -1;\n  }\n\n  var idx = collection.indexOf(element);\n\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n\n  return idx;\n}\n/**\n * Fail save add an element to the given connection, ensuring\n * it does not yet exist.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n * @param {number} idx\n */\n\nexport function add(collection, element, idx) {\n  if (!collection || !element) {\n    return;\n  }\n\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n\n  var currentIdx = collection.indexOf(element);\n\n  if (currentIdx !== -1) {\n    if (currentIdx === idx) {\n      // nothing to do, position has not changed\n      return;\n    } else {\n      if (idx !== -1) {\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n        // already exists in collection\n        return;\n      }\n    }\n  }\n\n  if (idx !== -1) {\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n    // push to end\n    collection.push(element);\n  }\n}\n/**\n * Fail save get the index of an element in a collection.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n *\n * @return {number} the index or -1 if collection or element do\n *                  not exist or the element is not contained.\n */\n\nexport function indexOf(collection, element) {\n  if (!collection || !element) {\n    return -1;\n  }\n\n  return collection.indexOf(element);\n}","map":{"version":3,"names":["remove","collection","element","idx","indexOf","splice","add","currentIdx","push"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/util/Collections.js"],"sourcesContent":["/**\n * Failsafe remove an element from a collection\n *\n * @param  {Array<Object>} [collection]\n * @param  {Object} [element]\n *\n * @return {number} the previous index of the element\n */\nexport function remove(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  var idx = collection.indexOf(element);\n\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n\n  return idx;\n}\n\n/**\n * Fail save add an element to the given connection, ensuring\n * it does not yet exist.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n * @param {number} idx\n */\nexport function add(collection, element, idx) {\n\n  if (!collection || !element) {\n    return;\n  }\n\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n\n  var currentIdx = collection.indexOf(element);\n\n  if (currentIdx !== -1) {\n\n    if (currentIdx === idx) {\n\n      // nothing to do, position has not changed\n      return;\n    } else {\n\n      if (idx !== -1) {\n\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n\n        // already exists in collection\n        return;\n      }\n    }\n  }\n\n  if (idx !== -1) {\n\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n\n    // push to end\n    collection.push(element);\n  }\n}\n\n\n/**\n * Fail save get the index of an element in a collection.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n *\n * @return {number} the index or -1 if collection or element do\n *                  not exist or the element is not contained.\n */\nexport function indexOf(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  return collection.indexOf(element);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,UAAhB,EAA4BC,OAA5B,EAAqC;EAE1C,IAAI,CAACD,UAAD,IAAe,CAACC,OAApB,EAA6B;IAC3B,OAAO,CAAC,CAAR;EACD;;EAED,IAAIC,GAAG,GAAGF,UAAU,CAACG,OAAX,CAAmBF,OAAnB,CAAV;;EAEA,IAAIC,GAAG,KAAK,CAAC,CAAb,EAAgB;IACdF,UAAU,CAACI,MAAX,CAAkBF,GAAlB,EAAuB,CAAvB;EACD;;EAED,OAAOA,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,GAAT,CAAaL,UAAb,EAAyBC,OAAzB,EAAkCC,GAAlC,EAAuC;EAE5C,IAAI,CAACF,UAAD,IAAe,CAACC,OAApB,EAA6B;IAC3B;EACD;;EAED,IAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;IAC3BA,GAAG,GAAG,CAAC,CAAP;EACD;;EAED,IAAII,UAAU,GAAGN,UAAU,CAACG,OAAX,CAAmBF,OAAnB,CAAjB;;EAEA,IAAIK,UAAU,KAAK,CAAC,CAApB,EAAuB;IAErB,IAAIA,UAAU,KAAKJ,GAAnB,EAAwB;MAEtB;MACA;IACD,CAJD,MAIO;MAEL,IAAIA,GAAG,KAAK,CAAC,CAAb,EAAgB;QAEd;QACAF,UAAU,CAACI,MAAX,CAAkBE,UAAlB,EAA8B,CAA9B;MACD,CAJD,MAIO;QAEL;QACA;MACD;IACF;EACF;;EAED,IAAIJ,GAAG,KAAK,CAAC,CAAb,EAAgB;IAEd;IACAF,UAAU,CAACI,MAAX,CAAkBF,GAAlB,EAAuB,CAAvB,EAA0BD,OAA1B;EACD,CAJD,MAIO;IAEL;IACAD,UAAU,CAACO,IAAX,CAAgBN,OAAhB;EACD;AACF;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,OAAT,CAAiBH,UAAjB,EAA6BC,OAA7B,EAAsC;EAE3C,IAAI,CAACD,UAAD,IAAe,CAACC,OAApB,EAA6B;IAC3B,OAAO,CAAC,CAAR;EACD;;EAED,OAAOD,UAAU,CAACG,OAAX,CAAmBF,OAAnB,CAAP;AACD"},"metadata":{},"sourceType":"module"}