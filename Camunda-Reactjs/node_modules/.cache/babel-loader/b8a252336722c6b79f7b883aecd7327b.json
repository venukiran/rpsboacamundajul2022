{"ast":null,"code":"// =========\n// = humps =\n// =========\n// Underscore-to-camelCase converter (and vice versa)\n// for strings and object keys\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n;\n\n(function (global) {\n  var _processKeys = function (convert, obj, options) {\n    if (!_isObject(obj) || _isDate(obj) || _isRegExp(obj) || _isBoolean(obj) || _isFunction(obj)) {\n      return obj;\n    }\n\n    var output,\n        i = 0,\n        l = 0;\n\n    if (_isArray(obj)) {\n      output = [];\n\n      for (l = obj.length; i < l; i++) {\n        output.push(_processKeys(convert, obj[i], options));\n      }\n    } else {\n      output = {};\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          output[convert(key, options)] = _processKeys(convert, obj[key], options);\n        }\n      }\n    }\n\n    return output;\n  }; // String conversion methods\n\n\n  var separateWords = function (string, options) {\n    options = options || {};\n    var separator = options.separator || '_';\n    var split = options.split || /(?=[A-Z])/;\n    return string.split(split).join(separator);\n  };\n\n  var camelize = function (string) {\n    if (_isNumerical(string)) {\n      return string;\n    }\n\n    string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    }); // Ensure 1st char is always lowercase\n\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n  };\n\n  var pascalize = function (string) {\n    var camelized = camelize(string); // Ensure 1st char is always uppercase\n\n    return camelized.substr(0, 1).toUpperCase() + camelized.substr(1);\n  };\n\n  var decamelize = function (string, options) {\n    return separateWords(string, options).toLowerCase();\n  }; // Utilities\n  // Taken from Underscore.js\n\n\n  var toString = Object.prototype.toString;\n\n  var _isFunction = function (obj) {\n    return typeof obj === 'function';\n  };\n\n  var _isObject = function (obj) {\n    return obj === Object(obj);\n  };\n\n  var _isArray = function (obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  var _isDate = function (obj) {\n    return toString.call(obj) == '[object Date]';\n  };\n\n  var _isRegExp = function (obj) {\n    return toString.call(obj) == '[object RegExp]';\n  };\n\n  var _isBoolean = function (obj) {\n    return toString.call(obj) == '[object Boolean]';\n  }; // Performant way to determine if obj coerces to a number\n\n\n  var _isNumerical = function (obj) {\n    obj = obj - 0;\n    return obj === obj;\n  }; // Sets up function which handles processing keys\n  // allowing the convert function to be modified by a callback\n\n\n  var _processor = function (convert, options) {\n    var callback = options && 'process' in options ? options.process : options;\n\n    if (typeof callback !== 'function') {\n      return convert;\n    }\n\n    return function (string, options) {\n      return callback(string, convert, options);\n    };\n  };\n\n  var humps = {\n    camelize: camelize,\n    decamelize: decamelize,\n    pascalize: pascalize,\n    depascalize: decamelize,\n    camelizeKeys: function (object, options) {\n      return _processKeys(_processor(camelize, options), object);\n    },\n    decamelizeKeys: function (object, options) {\n      return _processKeys(_processor(decamelize, options), object, options);\n    },\n    pascalizeKeys: function (object, options) {\n      return _processKeys(_processor(pascalize, options), object);\n    },\n    depascalizeKeys: function () {\n      return this.decamelizeKeys.apply(this, arguments);\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(humps);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = humps;\n  } else {\n    global.humps = humps;\n  }\n})(this);","map":{"version":3,"names":["global","_processKeys","convert","obj","options","_isObject","_isDate","_isRegExp","_isBoolean","_isFunction","output","i","l","_isArray","length","push","key","Object","prototype","hasOwnProperty","call","separateWords","string","separator","split","join","camelize","_isNumerical","replace","match","chr","toUpperCase","substr","toLowerCase","pascalize","camelized","decamelize","toString","_processor","callback","process","humps","depascalize","camelizeKeys","object","decamelizeKeys","pascalizeKeys","depascalizeKeys","apply","arguments","define","amd","module","exports"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/humps/humps.js"],"sourcesContent":["// =========\n// = humps =\n// =========\n// Underscore-to-camelCase converter (and vice versa)\n// for strings and object keys\n\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n\n\n;(function(global) {\n\n  var _processKeys = function(convert, obj, options) {\n    if(!_isObject(obj) || _isDate(obj) || _isRegExp(obj) || _isBoolean(obj) || _isFunction(obj)) {\n      return obj;\n    }\n\n    var output,\n        i = 0,\n        l = 0;\n\n    if(_isArray(obj)) {\n      output = [];\n      for(l=obj.length; i<l; i++) {\n        output.push(_processKeys(convert, obj[i], options));\n      }\n    }\n    else {\n      output = {};\n      for(var key in obj) {\n        if(Object.prototype.hasOwnProperty.call(obj, key)) {\n          output[convert(key, options)] = _processKeys(convert, obj[key], options);\n        }\n      }\n    }\n    return output;\n  };\n\n  // String conversion methods\n\n  var separateWords = function(string, options) {\n    options = options || {};\n    var separator = options.separator || '_';\n    var split = options.split || /(?=[A-Z])/;\n\n    return string.split(split).join(separator);\n  };\n\n  var camelize = function(string) {\n    if (_isNumerical(string)) {\n      return string;\n    }\n    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    });\n    // Ensure 1st char is always lowercase\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n  };\n\n  var pascalize = function(string) {\n    var camelized = camelize(string);\n    // Ensure 1st char is always uppercase\n    return camelized.substr(0, 1).toUpperCase() + camelized.substr(1);\n  };\n\n  var decamelize = function(string, options) {\n    return separateWords(string, options).toLowerCase();\n  };\n\n  // Utilities\n  // Taken from Underscore.js\n\n  var toString = Object.prototype.toString;\n\n  var _isFunction = function(obj) {\n    return typeof(obj) === 'function';\n  };\n  var _isObject = function(obj) {\n    return obj === Object(obj);\n  };\n  var _isArray = function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n  var _isDate = function(obj) {\n    return toString.call(obj) == '[object Date]';\n  };\n  var _isRegExp = function(obj) {\n    return toString.call(obj) == '[object RegExp]';\n  };\n  var _isBoolean = function(obj) {\n    return toString.call(obj) == '[object Boolean]';\n  };\n\n  // Performant way to determine if obj coerces to a number\n  var _isNumerical = function(obj) {\n    obj = obj - 0;\n    return obj === obj;\n  };\n\n  // Sets up function which handles processing keys\n  // allowing the convert function to be modified by a callback\n  var _processor = function(convert, options) {\n    var callback = options && 'process' in options ? options.process : options;\n\n    if(typeof(callback) !== 'function') {\n      return convert;\n    }\n\n    return function(string, options) {\n      return callback(string, convert, options);\n    }\n  };\n\n  var humps = {\n    camelize: camelize,\n    decamelize: decamelize,\n    pascalize: pascalize,\n    depascalize: decamelize,\n    camelizeKeys: function(object, options) {\n      return _processKeys(_processor(camelize, options), object);\n    },\n    decamelizeKeys: function(object, options) {\n      return _processKeys(_processor(decamelize, options), object, options);\n    },\n    pascalizeKeys: function(object, options) {\n      return _processKeys(_processor(pascalize, options), object);\n    },\n    depascalizeKeys: function () {\n      return this.decamelizeKeys.apply(this, arguments);\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(humps);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = humps;\n  } else {\n    global.humps = humps;\n  }\n\n})(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}