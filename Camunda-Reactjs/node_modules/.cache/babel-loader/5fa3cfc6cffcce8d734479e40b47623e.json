{"ast":null,"code":"import { set as cursorSet, unset as cursorUnset } from '../../util/Cursor';\nimport { install as installClickTrap } from '../../util/ClickTrap';\nimport { delta as deltaPos } from '../../util/PositionUtil';\nimport { event as domEvent, closest as domClosest } from 'min-dom';\nimport { toPoint } from '../../util/Event';\nvar THRESHOLD = 15;\n/**\n * Move the canvas via mouse.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\n\nexport default function MoveCanvas(eventBus, canvas) {\n  var context; // listen for move on element mouse down;\n  // allow others to hook into the event before us though\n  // (dragging / element moving will do this)\n\n  eventBus.on('element.mousedown', 500, function (e) {\n    return handleStart(e.originalEvent);\n  });\n\n  function handleMove(event) {\n    var start = context.start,\n        button = context.button,\n        position = toPoint(event),\n        delta = deltaPos(position, start);\n\n    if (!context.dragging && length(delta) > THRESHOLD) {\n      context.dragging = true;\n\n      if (button === 0) {\n        installClickTrap(eventBus);\n      }\n\n      cursorSet('grab');\n    }\n\n    if (context.dragging) {\n      var lastPosition = context.last || context.start;\n      delta = deltaPos(position, lastPosition);\n      canvas.scroll({\n        dx: delta.x,\n        dy: delta.y\n      });\n      context.last = position;\n    } // prevent select\n\n\n    event.preventDefault();\n  }\n\n  function handleEnd(event) {\n    domEvent.unbind(document, 'mousemove', handleMove);\n    domEvent.unbind(document, 'mouseup', handleEnd);\n    context = null;\n    cursorUnset();\n  }\n\n  function handleStart(event) {\n    // event is already handled by '.djs-draggable'\n    if (domClosest(event.target, '.djs-draggable')) {\n      return;\n    }\n\n    var button = event.button; // reject right mouse button or modifier key\n\n    if (button >= 2 || event.ctrlKey || event.shiftKey || event.altKey) {\n      return;\n    }\n\n    context = {\n      button: button,\n      start: toPoint(event)\n    };\n    domEvent.bind(document, 'mousemove', handleMove);\n    domEvent.bind(document, 'mouseup', handleEnd); // we've handled the event\n\n    return true;\n  }\n\n  this.isActive = function () {\n    return !!context;\n  };\n}\nMoveCanvas.$inject = ['eventBus', 'canvas']; // helpers ///////\n\nfunction length(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}","map":{"version":3,"names":["set","cursorSet","unset","cursorUnset","install","installClickTrap","delta","deltaPos","event","domEvent","closest","domClosest","toPoint","THRESHOLD","MoveCanvas","eventBus","canvas","context","on","e","handleStart","originalEvent","handleMove","start","button","position","dragging","length","lastPosition","last","scroll","dx","x","dy","y","preventDefault","handleEnd","unbind","document","target","ctrlKey","shiftKey","altKey","bind","isActive","$inject","point","Math","sqrt","pow"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/navigation/movecanvas/MoveCanvas.js"],"sourcesContent":["import {\n  set as cursorSet,\n  unset as cursorUnset\n} from '../../util/Cursor';\n\nimport {\n  install as installClickTrap\n} from '../../util/ClickTrap';\n\nimport {\n  delta as deltaPos\n} from '../../util/PositionUtil';\n\nimport {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\n\nvar THRESHOLD = 15;\n\n\n/**\n * Move the canvas via mouse.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function MoveCanvas(eventBus, canvas) {\n\n  var context;\n\n\n  // listen for move on element mouse down;\n  // allow others to hook into the event before us though\n  // (dragging / element moving will do this)\n  eventBus.on('element.mousedown', 500, function(e) {\n    return handleStart(e.originalEvent);\n  });\n\n\n  function handleMove(event) {\n\n    var start = context.start,\n        button = context.button,\n        position = toPoint(event),\n        delta = deltaPos(position, start);\n\n    if (!context.dragging && length(delta) > THRESHOLD) {\n      context.dragging = true;\n\n      if (button === 0) {\n        installClickTrap(eventBus);\n      }\n\n      cursorSet('grab');\n    }\n\n    if (context.dragging) {\n\n      var lastPosition = context.last || context.start;\n\n      delta = deltaPos(position, lastPosition);\n\n      canvas.scroll({\n        dx: delta.x,\n        dy: delta.y\n      });\n\n      context.last = position;\n    }\n\n    // prevent select\n    event.preventDefault();\n  }\n\n\n  function handleEnd(event) {\n    domEvent.unbind(document, 'mousemove', handleMove);\n    domEvent.unbind(document, 'mouseup', handleEnd);\n\n    context = null;\n\n    cursorUnset();\n  }\n\n  function handleStart(event) {\n\n    // event is already handled by '.djs-draggable'\n    if (domClosest(event.target, '.djs-draggable')) {\n      return;\n    }\n\n    var button = event.button;\n\n    // reject right mouse button or modifier key\n    if (button >= 2 || event.ctrlKey || event.shiftKey || event.altKey) {\n      return;\n    }\n\n    context = {\n      button: button,\n      start: toPoint(event)\n    };\n\n    domEvent.bind(document, 'mousemove', handleMove);\n    domEvent.bind(document, 'mouseup', handleEnd);\n\n    // we've handled the event\n    return true;\n  }\n\n  this.isActive = function() {\n    return !!context;\n  };\n\n}\n\n\nMoveCanvas.$inject = [\n  'eventBus',\n  'canvas'\n];\n\n\n\n// helpers ///////\n\nfunction length(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}