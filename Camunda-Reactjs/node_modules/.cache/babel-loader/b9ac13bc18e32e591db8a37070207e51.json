{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, META, useKeyOnly } from '../../lib';\nimport AccordionAccordion from './AccordionAccordion';\nimport AccordionContent from './AccordionContent';\nimport AccordionTitle from './AccordionTitle';\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\n\nfunction Accordion(props) {\n  var className = props.className,\n      fluid = props.fluid,\n      inverted = props.inverted,\n      styled = props.styled;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\n  var rest = getUnhandledProps(Accordion, props);\n  return React.createElement(AccordionAccordion, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nAccordion.handledProps = ['className', 'fluid', 'inverted', 'styled'];\nAccordion._meta = {\n  name: 'Accordion',\n  type: META.TYPES.MODULE\n};\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Format to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Format for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Adds some basic styling to accordion panels. */\n  styled: PropTypes.bool\n} : {};\nAccordion.Accordion = AccordionAccordion;\nAccordion.Content = AccordionContent;\nAccordion.Title = AccordionTitle;\nexport default Accordion;","map":{"version":3,"names":["_extends","cx","PropTypes","React","getUnhandledProps","META","useKeyOnly","AccordionAccordion","AccordionContent","AccordionTitle","Accordion","props","className","fluid","inverted","styled","classes","rest","createElement","handledProps","_meta","name","type","TYPES","MODULE","propTypes","process","env","NODE_ENV","string","bool","Content","Title"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/modules/Accordion/Accordion.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { getUnhandledProps, META, useKeyOnly } from '../../lib';\nimport AccordionAccordion from './AccordionAccordion';\nimport AccordionContent from './AccordionContent';\nimport AccordionTitle from './AccordionTitle';\n\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\nfunction Accordion(props) {\n  var className = props.className,\n      fluid = props.fluid,\n      inverted = props.inverted,\n      styled = props.styled;\n\n\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\n  var rest = getUnhandledProps(Accordion, props);\n\n  return React.createElement(AccordionAccordion, _extends({}, rest, { className: classes }));\n}\n\nAccordion.handledProps = ['className', 'fluid', 'inverted', 'styled'];\nAccordion._meta = {\n  name: 'Accordion',\n  type: META.TYPES.MODULE\n};\n\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Format to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Format for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Adds some basic styling to accordion panels. */\n  styled: PropTypes.bool\n} : {};\n\nAccordion.Accordion = AccordionAccordion;\nAccordion.Content = AccordionContent;\nAccordion.Title = AccordionTitle;\n\nexport default Accordion;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,WAApD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;EAAA,IACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;EAAA,IAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;EAAA,IAGIC,MAAM,GAAGJ,KAAK,CAACI,MAHnB;EAMA,IAAIC,OAAO,GAAGf,EAAE,CAAC,IAAD,EAAOK,UAAU,CAACO,KAAD,EAAQ,OAAR,CAAjB,EAAmCP,UAAU,CAACQ,QAAD,EAAW,UAAX,CAA7C,EAAqER,UAAU,CAACS,MAAD,EAAS,QAAT,CAA/E,EAAmGH,SAAnG,CAAhB;EACA,IAAIK,IAAI,GAAGb,iBAAiB,CAACM,SAAD,EAAYC,KAAZ,CAA5B;EAEA,OAAOR,KAAK,CAACe,aAAN,CAAoBX,kBAApB,EAAwCP,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;IAAEL,SAAS,EAAEI;EAAb,CAAX,CAAhD,CAAP;AACD;;AAEDN,SAAS,CAACS,YAAV,GAAyB,CAAC,WAAD,EAAc,OAAd,EAAuB,UAAvB,EAAmC,QAAnC,CAAzB;AACAT,SAAS,CAACU,KAAV,GAAkB;EAChBC,IAAI,EAAE,WADU;EAEhBC,IAAI,EAAEjB,IAAI,CAACkB,KAAL,CAAWC;AAFD,CAAlB;AAKAd,SAAS,CAACe,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC5D;EACAhB,SAAS,EAAEV,SAAS,CAAC2B,MAFuC;;EAI5D;EACAhB,KAAK,EAAEX,SAAS,CAAC4B,IAL2C;;EAO5D;EACAhB,QAAQ,EAAEZ,SAAS,CAAC4B,IARwC;;EAU5D;EACAf,MAAM,EAAEb,SAAS,CAAC4B;AAX0C,CAAxC,GAYlB,EAZJ;AAcApB,SAAS,CAACA,SAAV,GAAsBH,kBAAtB;AACAG,SAAS,CAACqB,OAAV,GAAoBvB,gBAApB;AACAE,SAAS,CAACsB,KAAV,GAAkBvB,cAAlB;AAEA,eAAeC,SAAf"},"metadata":{},"sourceType":"module"}