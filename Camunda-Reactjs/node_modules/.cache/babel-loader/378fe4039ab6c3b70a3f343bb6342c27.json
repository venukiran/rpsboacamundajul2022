{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * Helpers to enable Immutable compatibility *without* bringing in\n * the 'immutable' package as a dependency.\n */\n\n/**\n * Check if an object is immutable by checking if it has a key specific\n * to the immutable library.\n *\n * @param  {any} object\n * @return {bool}\n */\n\n\nfunction isImmutable(object) {\n  return !!(object && typeof object.hasOwnProperty === 'function' && (object.hasOwnProperty('__ownerID') || // Immutable.Map\n  object._map && object._map.hasOwnProperty('__ownerID'))); // Immutable.Record\n}\n/**\n * Denormalize an immutable entity.\n *\n * @param  {Schema} schema\n * @param  {Immutable.Map|Immutable.Record} input\n * @param  {function} unvisit\n * @param  {function} getDenormalizedEntity\n * @return {Immutable.Map|Immutable.Record}\n */\n\n\nfunction denormalizeImmutable(schema, input, unvisit) {\n  return Object.keys(schema).reduce(function (object, key) {\n    // Immutable maps cast keys to strings on write so we need to ensure\n    // we're accessing them using string keys.\n    var stringKey = \"\" + key;\n\n    if (object.has(stringKey)) {\n      return object.set(stringKey, unvisit(object.get(stringKey), schema[stringKey]));\n    } else {\n      return object;\n    }\n  }, input);\n}\n\nvar getDefaultGetId = function getDefaultGetId(idAttribute) {\n  return function (input) {\n    return isImmutable(input) ? input.get(idAttribute) : input[idAttribute];\n  };\n};\n\nvar EntitySchema = /*#__PURE__*/function () {\n  function EntitySchema(key, definition, options) {\n    if (definition === void 0) {\n      definition = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!key || typeof key !== 'string') {\n      throw new Error(\"Expected a string key for Entity, but found \" + key + \".\");\n    }\n\n    var _options = options,\n        _options$idAttribute = _options.idAttribute,\n        idAttribute = _options$idAttribute === void 0 ? 'id' : _options$idAttribute,\n        _options$mergeStrateg = _options.mergeStrategy,\n        mergeStrategy = _options$mergeStrateg === void 0 ? function (entityA, entityB) {\n      return _extends({}, entityA, entityB);\n    } : _options$mergeStrateg,\n        _options$processStrat = _options.processStrategy,\n        processStrategy = _options$processStrat === void 0 ? function (input) {\n      return _extends({}, input);\n    } : _options$processStrat,\n        _options$fallbackStra = _options.fallbackStrategy,\n        fallbackStrategy = _options$fallbackStra === void 0 ? function (key, schema) {\n      return undefined;\n    } : _options$fallbackStra;\n    this._key = key;\n    this._getId = typeof idAttribute === 'function' ? idAttribute : getDefaultGetId(idAttribute);\n    this._idAttribute = idAttribute;\n    this._mergeStrategy = mergeStrategy;\n    this._processStrategy = processStrategy;\n    this._fallbackStrategy = fallbackStrategy;\n    this.define(definition);\n  }\n\n  var _proto = EntitySchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _extends2;\n\n      var schema = definition[key];\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\n    }, this.schema || {});\n  };\n\n  _proto.getId = function getId(input, parent, key) {\n    return this._getId(input, parent, key);\n  };\n\n  _proto.merge = function merge(entityA, entityB) {\n    return this._mergeStrategy(entityA, entityB);\n  };\n\n  _proto.fallback = function fallback(id, schema) {\n    return this._fallbackStrategy(id, schema);\n  };\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    var id = this.getId(input, parent, key);\n    var entityType = this.key;\n\n    if (!(entityType in visitedEntities)) {\n      visitedEntities[entityType] = {};\n    }\n\n    if (!(id in visitedEntities[entityType])) {\n      visitedEntities[entityType][id] = [];\n    }\n\n    if (visitedEntities[entityType][id].some(function (entity) {\n      return entity === input;\n    })) {\n      return id;\n    }\n\n    visitedEntities[entityType][id].push(input);\n\n    var processedEntity = this._processStrategy(input, parent, key);\n\n    Object.keys(this.schema).forEach(function (key) {\n      if (processedEntity.hasOwnProperty(key) && typeof processedEntity[key] === 'object') {\n        var schema = _this.schema[key];\n        var resolvedSchema = typeof schema === 'function' ? schema(input) : schema;\n        processedEntity[key] = visit(processedEntity[key], processedEntity, key, resolvedSchema, addEntity, visitedEntities);\n      }\n    });\n    addEntity(this, processedEntity, input, parent, key);\n    return id;\n  };\n\n  _proto.denormalize = function denormalize(entity, unvisit) {\n    var _this2 = this;\n\n    if (isImmutable(entity)) {\n      return denormalizeImmutable(this.schema, entity, unvisit);\n    }\n\n    Object.keys(this.schema).forEach(function (key) {\n      if (entity.hasOwnProperty(key)) {\n        var schema = _this2.schema[key];\n        entity[key] = unvisit(entity[key], schema);\n      }\n    });\n    return entity;\n  };\n\n  _createClass(EntitySchema, [{\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"idAttribute\",\n    get: function get() {\n      return this._idAttribute;\n    }\n  }]);\n\n  return EntitySchema;\n}();\n\nvar PolymorphicSchema = /*#__PURE__*/function () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n\n    this.define(definition);\n  }\n\n  var _proto = PolymorphicSchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = definition;\n  };\n\n  _proto.getSchemaAttribute = function getSchemaAttribute(input, parent, key) {\n    return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n  };\n\n  _proto.inferSchema = function inferSchema(input, parent, key) {\n    if (this.isSingleSchema) {\n      return this.schema;\n    }\n\n    var attr = this.getSchemaAttribute(input, parent, key);\n    return this.schema[attr];\n  };\n\n  _proto.normalizeValue = function normalizeValue(value, parent, key, visit, addEntity, visitedEntities) {\n    var schema = this.inferSchema(value, parent, key);\n\n    if (!schema) {\n      return value;\n    }\n\n    var normalizedValue = visit(value, parent, key, schema, addEntity, visitedEntities);\n    return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : {\n      id: normalizedValue,\n      schema: this.getSchemaAttribute(value, parent, key)\n    };\n  };\n\n  _proto.denormalizeValue = function denormalizeValue(value, unvisit) {\n    var schemaKey = isImmutable(value) ? value.get('schema') : value.schema;\n\n    if (!this.isSingleSchema && !schemaKey) {\n      return value;\n    }\n\n    var id = this.isSingleSchema ? undefined : isImmutable(value) ? value.get('id') : value.id;\n    var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n    return unvisit(id || value, schema);\n  };\n\n  _createClass(PolymorphicSchema, [{\n    key: \"isSingleSchema\",\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n\n  return PolymorphicSchema;\n}();\n\nvar UnionSchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(UnionSchema, _PolymorphicSchema);\n\n  function UnionSchema(definition, schemaAttribute) {\n    if (!schemaAttribute) {\n      throw new Error('Expected option \"schemaAttribute\" not found on UnionSchema.');\n    }\n\n    return _PolymorphicSchema.call(this, definition, schemaAttribute) || this;\n  }\n\n  var _proto = UnionSchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    return this.normalizeValue(input, parent, key, visit, addEntity, visitedEntities);\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    return this.denormalizeValue(input, unvisit);\n  };\n\n  return UnionSchema;\n}(PolymorphicSchema);\n\nvar ValuesSchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(ValuesSchema, _PolymorphicSchema);\n\n  function ValuesSchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n\n  var _proto = ValuesSchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    return Object.keys(input).reduce(function (output, key, index) {\n      var _extends2;\n\n      var value = input[key];\n      return value !== undefined && value !== null ? _extends({}, output, (_extends2 = {}, _extends2[key] = _this.normalizeValue(value, input, key, visit, addEntity, visitedEntities), _extends2)) : output;\n    }, {});\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n\n    return Object.keys(input).reduce(function (output, key) {\n      var _extends3;\n\n      var entityOrId = input[key];\n      return _extends({}, output, (_extends3 = {}, _extends3[key] = _this2.denormalizeValue(entityOrId, unvisit), _extends3));\n    }, {});\n  };\n\n  return ValuesSchema;\n}(PolymorphicSchema);\n\nvar validateSchema = function validateSchema(definition) {\n  var isArray = Array.isArray(definition);\n\n  if (isArray && definition.length > 1) {\n    throw new Error(\"Expected schema definition to be a single schema, but found \" + definition.length + \".\");\n  }\n\n  return definition[0];\n};\n\nvar getValues = function getValues(input) {\n  return Array.isArray(input) ? input : Object.keys(input).map(function (key) {\n    return input[key];\n  });\n};\n\nvar normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  schema = validateSchema(schema);\n  var values = getValues(input); // Special case: Arrays pass *their* parent on to their children, since there\n  // is not any special information that can be gathered from themselves directly\n\n  return values.map(function (value, index) {\n    return visit(value, parent, key, schema, addEntity, visitedEntities);\n  });\n};\n\nvar denormalize = function denormalize(schema, input, unvisit) {\n  schema = validateSchema(schema);\n  return input && input.map ? input.map(function (entityOrId) {\n    return unvisit(entityOrId, schema);\n  }) : input;\n};\n\nvar ArraySchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(ArraySchema, _PolymorphicSchema);\n\n  function ArraySchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n\n  var _proto = ArraySchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    var values = getValues(input);\n    return values.map(function (value, index) {\n      return _this.normalizeValue(value, parent, key, visit, addEntity, visitedEntities);\n    }).filter(function (value) {\n      return value !== undefined && value !== null;\n    });\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n\n    return input && input.map ? input.map(function (value) {\n      return _this2.denormalizeValue(value, unvisit);\n    }) : input;\n  };\n\n  return ArraySchema;\n}(PolymorphicSchema);\n\nvar _normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  var object = _extends({}, input);\n\n  Object.keys(schema).forEach(function (key) {\n    var localSchema = schema[key];\n    var resolvedLocalSchema = typeof localSchema === 'function' ? localSchema(input) : localSchema;\n    var value = visit(input[key], input, key, resolvedLocalSchema, addEntity, visitedEntities);\n\n    if (value === undefined || value === null) {\n      delete object[key];\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n};\n\nvar _denormalize = function denormalize(schema, input, unvisit) {\n  if (isImmutable(input)) {\n    return denormalizeImmutable(schema, input, unvisit);\n  }\n\n  var object = _extends({}, input);\n\n  Object.keys(schema).forEach(function (key) {\n    if (object[key] != null) {\n      object[key] = unvisit(object[key], schema[key]);\n    }\n  });\n  return object;\n};\n\nvar ObjectSchema = /*#__PURE__*/function () {\n  function ObjectSchema(definition) {\n    this.define(definition);\n  }\n\n  var _proto = ObjectSchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _extends2;\n\n      var schema = definition[key];\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\n    }, this.schema || {});\n  };\n\n  _proto.normalize = function normalize() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _normalize.apply(void 0, [this.schema].concat(args));\n  };\n\n  _proto.denormalize = function denormalize() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _denormalize.apply(void 0, [this.schema].concat(args));\n  };\n\n  return ObjectSchema;\n}();\n\nvar visit = function visit(value, parent, key, schema, addEntity, visitedEntities) {\n  if (typeof value !== 'object' || !value) {\n    return value;\n  }\n\n  if (typeof schema === 'object' && (!schema.normalize || typeof schema.normalize !== 'function')) {\n    var method = Array.isArray(schema) ? normalize : _normalize;\n    return method(schema, value, parent, key, visit, addEntity, visitedEntities);\n  }\n\n  return schema.normalize(value, parent, key, visit, addEntity, visitedEntities);\n};\n\nvar addEntities = function addEntities(entities) {\n  return function (schema, processedEntity, value, parent, key) {\n    var schemaKey = schema.key;\n    var id = schema.getId(value, parent, key);\n\n    if (!(schemaKey in entities)) {\n      entities[schemaKey] = {};\n    }\n\n    var existingEntity = entities[schemaKey][id];\n\n    if (existingEntity) {\n      entities[schemaKey][id] = schema.merge(existingEntity, processedEntity);\n    } else {\n      entities[schemaKey][id] = processedEntity;\n    }\n  };\n};\n\nvar schema = {\n  Array: ArraySchema,\n  Entity: EntitySchema,\n  Object: ObjectSchema,\n  Union: UnionSchema,\n  Values: ValuesSchema\n};\n\nvar normalize$1 = function normalize(input, schema) {\n  if (!input || typeof input !== 'object') {\n    throw new Error(\"Unexpected input given to normalize. Expected type to be \\\"object\\\", found \\\"\" + (input === null ? 'null' : typeof input) + \"\\\".\");\n  }\n\n  var entities = {};\n  var addEntity = addEntities(entities);\n  var visitedEntities = {};\n  var result = visit(input, input, null, schema, addEntity, visitedEntities);\n  return {\n    entities: entities,\n    result: result\n  };\n};\n\nvar unvisitEntity = function unvisitEntity(id, schema, unvisit, getEntity, cache) {\n  var entity = getEntity(id, schema);\n\n  if (entity === undefined && schema instanceof EntitySchema) {\n    entity = schema.fallback(id, schema);\n  }\n\n  if (typeof entity !== 'object' || entity === null) {\n    return entity;\n  }\n\n  if (!cache[schema.key]) {\n    cache[schema.key] = {};\n  }\n\n  if (!cache[schema.key][id]) {\n    // Ensure we don't mutate it non-immutable objects\n    var entityCopy = isImmutable(entity) ? entity : _extends({}, entity); // Need to set this first so that if it is referenced further within the\n    // denormalization the reference will already exist.\n\n    cache[schema.key][id] = entityCopy;\n    cache[schema.key][id] = schema.denormalize(entityCopy, unvisit);\n  }\n\n  return cache[schema.key][id];\n};\n\nvar getUnvisit = function getUnvisit(entities) {\n  var cache = {};\n  var getEntity = getEntities(entities);\n  return function unvisit(input, schema) {\n    if (typeof schema === 'object' && (!schema.denormalize || typeof schema.denormalize !== 'function')) {\n      var method = Array.isArray(schema) ? denormalize : _denormalize;\n      return method(schema, input, unvisit);\n    }\n\n    if (input === undefined || input === null) {\n      return input;\n    }\n\n    if (schema instanceof EntitySchema) {\n      return unvisitEntity(input, schema, unvisit, getEntity, cache);\n    }\n\n    return schema.denormalize(input, unvisit);\n  };\n};\n\nvar getEntities = function getEntities(entities) {\n  var isImmutable$1 = isImmutable(entities);\n  return function (entityOrId, schema) {\n    var schemaKey = schema.key;\n\n    if (typeof entityOrId === 'object') {\n      return entityOrId;\n    }\n\n    if (isImmutable$1) {\n      return entities.getIn([schemaKey, entityOrId.toString()]);\n    }\n\n    return entities[schemaKey] && entities[schemaKey][entityOrId];\n  };\n};\n\nvar denormalize$1 = function denormalize(input, schema, entities) {\n  if (typeof input !== 'undefined') {\n    return getUnvisit(entities)(input, schema);\n  }\n};\n\nexport { denormalize$1 as denormalize, normalize$1 as normalize, schema };","map":{"version":3,"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","isImmutable","object","_map","denormalizeImmutable","schema","input","unvisit","keys","reduce","stringKey","has","set","get","getDefaultGetId","idAttribute","EntitySchema","definition","options","Error","_options","_options$idAttribute","_options$mergeStrateg","mergeStrategy","entityA","entityB","_options$processStrat","processStrategy","_options$fallbackStra","fallbackStrategy","undefined","_key","_getId","_idAttribute","_mergeStrategy","_processStrategy","_fallbackStrategy","define","_proto","entitySchema","_extends2","getId","parent","merge","fallback","id","normalize","visit","addEntity","visitedEntities","_this","entityType","some","entity","push","processedEntity","forEach","resolvedSchema","denormalize","_this2","PolymorphicSchema","schemaAttribute","_schemaAttribute","getSchemaAttribute","isSingleSchema","inferSchema","attr","normalizeValue","value","normalizedValue","denormalizeValue","schemaKey","UnionSchema","_PolymorphicSchema","ValuesSchema","output","index","_extends3","entityOrId","validateSchema","isArray","Array","getValues","map","values","ArraySchema","filter","_normalize","localSchema","resolvedLocalSchema","_denormalize","ObjectSchema","_len","args","concat","_len2","_key2","method","addEntities","entities","existingEntity","Entity","Union","Values","normalize$1","result","unvisitEntity","getEntity","cache","entityCopy","getUnvisit","getEntities","isImmutable$1","getIn","toString","denormalize$1"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/normalizr/dist/normalizr.es.js"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n/**\n * Helpers to enable Immutable compatibility *without* bringing in\n * the 'immutable' package as a dependency.\n */\n\n/**\n * Check if an object is immutable by checking if it has a key specific\n * to the immutable library.\n *\n * @param  {any} object\n * @return {bool}\n */\nfunction isImmutable(object) {\n  return !!(object && typeof object.hasOwnProperty === 'function' && (object.hasOwnProperty('__ownerID') || // Immutable.Map\n  object._map && object._map.hasOwnProperty('__ownerID'))); // Immutable.Record\n}\n/**\n * Denormalize an immutable entity.\n *\n * @param  {Schema} schema\n * @param  {Immutable.Map|Immutable.Record} input\n * @param  {function} unvisit\n * @param  {function} getDenormalizedEntity\n * @return {Immutable.Map|Immutable.Record}\n */\n\nfunction denormalizeImmutable(schema, input, unvisit) {\n  return Object.keys(schema).reduce(function (object, key) {\n    // Immutable maps cast keys to strings on write so we need to ensure\n    // we're accessing them using string keys.\n    var stringKey = \"\" + key;\n\n    if (object.has(stringKey)) {\n      return object.set(stringKey, unvisit(object.get(stringKey), schema[stringKey]));\n    } else {\n      return object;\n    }\n  }, input);\n}\n\nvar getDefaultGetId = function getDefaultGetId(idAttribute) {\n  return function (input) {\n    return isImmutable(input) ? input.get(idAttribute) : input[idAttribute];\n  };\n};\n\nvar EntitySchema = /*#__PURE__*/function () {\n  function EntitySchema(key, definition, options) {\n    if (definition === void 0) {\n      definition = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!key || typeof key !== 'string') {\n      throw new Error(\"Expected a string key for Entity, but found \" + key + \".\");\n    }\n\n    var _options = options,\n        _options$idAttribute = _options.idAttribute,\n        idAttribute = _options$idAttribute === void 0 ? 'id' : _options$idAttribute,\n        _options$mergeStrateg = _options.mergeStrategy,\n        mergeStrategy = _options$mergeStrateg === void 0 ? function (entityA, entityB) {\n      return _extends({}, entityA, entityB);\n    } : _options$mergeStrateg,\n        _options$processStrat = _options.processStrategy,\n        processStrategy = _options$processStrat === void 0 ? function (input) {\n      return _extends({}, input);\n    } : _options$processStrat,\n        _options$fallbackStra = _options.fallbackStrategy,\n        fallbackStrategy = _options$fallbackStra === void 0 ? function (key, schema) {\n      return undefined;\n    } : _options$fallbackStra;\n    this._key = key;\n    this._getId = typeof idAttribute === 'function' ? idAttribute : getDefaultGetId(idAttribute);\n    this._idAttribute = idAttribute;\n    this._mergeStrategy = mergeStrategy;\n    this._processStrategy = processStrategy;\n    this._fallbackStrategy = fallbackStrategy;\n    this.define(definition);\n  }\n\n  var _proto = EntitySchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _extends2;\n\n      var schema = definition[key];\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\n    }, this.schema || {});\n  };\n\n  _proto.getId = function getId(input, parent, key) {\n    return this._getId(input, parent, key);\n  };\n\n  _proto.merge = function merge(entityA, entityB) {\n    return this._mergeStrategy(entityA, entityB);\n  };\n\n  _proto.fallback = function fallback(id, schema) {\n    return this._fallbackStrategy(id, schema);\n  };\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    var id = this.getId(input, parent, key);\n    var entityType = this.key;\n\n    if (!(entityType in visitedEntities)) {\n      visitedEntities[entityType] = {};\n    }\n\n    if (!(id in visitedEntities[entityType])) {\n      visitedEntities[entityType][id] = [];\n    }\n\n    if (visitedEntities[entityType][id].some(function (entity) {\n      return entity === input;\n    })) {\n      return id;\n    }\n\n    visitedEntities[entityType][id].push(input);\n\n    var processedEntity = this._processStrategy(input, parent, key);\n\n    Object.keys(this.schema).forEach(function (key) {\n      if (processedEntity.hasOwnProperty(key) && typeof processedEntity[key] === 'object') {\n        var schema = _this.schema[key];\n        var resolvedSchema = typeof schema === 'function' ? schema(input) : schema;\n        processedEntity[key] = visit(processedEntity[key], processedEntity, key, resolvedSchema, addEntity, visitedEntities);\n      }\n    });\n    addEntity(this, processedEntity, input, parent, key);\n    return id;\n  };\n\n  _proto.denormalize = function denormalize(entity, unvisit) {\n    var _this2 = this;\n\n    if (isImmutable(entity)) {\n      return denormalizeImmutable(this.schema, entity, unvisit);\n    }\n\n    Object.keys(this.schema).forEach(function (key) {\n      if (entity.hasOwnProperty(key)) {\n        var schema = _this2.schema[key];\n        entity[key] = unvisit(entity[key], schema);\n      }\n    });\n    return entity;\n  };\n\n  _createClass(EntitySchema, [{\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"idAttribute\",\n    get: function get() {\n      return this._idAttribute;\n    }\n  }]);\n\n  return EntitySchema;\n}();\n\nvar PolymorphicSchema = /*#__PURE__*/function () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n\n    this.define(definition);\n  }\n\n  var _proto = PolymorphicSchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = definition;\n  };\n\n  _proto.getSchemaAttribute = function getSchemaAttribute(input, parent, key) {\n    return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n  };\n\n  _proto.inferSchema = function inferSchema(input, parent, key) {\n    if (this.isSingleSchema) {\n      return this.schema;\n    }\n\n    var attr = this.getSchemaAttribute(input, parent, key);\n    return this.schema[attr];\n  };\n\n  _proto.normalizeValue = function normalizeValue(value, parent, key, visit, addEntity, visitedEntities) {\n    var schema = this.inferSchema(value, parent, key);\n\n    if (!schema) {\n      return value;\n    }\n\n    var normalizedValue = visit(value, parent, key, schema, addEntity, visitedEntities);\n    return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : {\n      id: normalizedValue,\n      schema: this.getSchemaAttribute(value, parent, key)\n    };\n  };\n\n  _proto.denormalizeValue = function denormalizeValue(value, unvisit) {\n    var schemaKey = isImmutable(value) ? value.get('schema') : value.schema;\n\n    if (!this.isSingleSchema && !schemaKey) {\n      return value;\n    }\n\n    var id = this.isSingleSchema ? undefined : isImmutable(value) ? value.get('id') : value.id;\n    var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n    return unvisit(id || value, schema);\n  };\n\n  _createClass(PolymorphicSchema, [{\n    key: \"isSingleSchema\",\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n\n  return PolymorphicSchema;\n}();\n\nvar UnionSchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(UnionSchema, _PolymorphicSchema);\n\n  function UnionSchema(definition, schemaAttribute) {\n    if (!schemaAttribute) {\n      throw new Error('Expected option \"schemaAttribute\" not found on UnionSchema.');\n    }\n\n    return _PolymorphicSchema.call(this, definition, schemaAttribute) || this;\n  }\n\n  var _proto = UnionSchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    return this.normalizeValue(input, parent, key, visit, addEntity, visitedEntities);\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    return this.denormalizeValue(input, unvisit);\n  };\n\n  return UnionSchema;\n}(PolymorphicSchema);\n\nvar ValuesSchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(ValuesSchema, _PolymorphicSchema);\n\n  function ValuesSchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n\n  var _proto = ValuesSchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    return Object.keys(input).reduce(function (output, key, index) {\n      var _extends2;\n\n      var value = input[key];\n      return value !== undefined && value !== null ? _extends({}, output, (_extends2 = {}, _extends2[key] = _this.normalizeValue(value, input, key, visit, addEntity, visitedEntities), _extends2)) : output;\n    }, {});\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n\n    return Object.keys(input).reduce(function (output, key) {\n      var _extends3;\n\n      var entityOrId = input[key];\n      return _extends({}, output, (_extends3 = {}, _extends3[key] = _this2.denormalizeValue(entityOrId, unvisit), _extends3));\n    }, {});\n  };\n\n  return ValuesSchema;\n}(PolymorphicSchema);\n\nvar validateSchema = function validateSchema(definition) {\n  var isArray = Array.isArray(definition);\n\n  if (isArray && definition.length > 1) {\n    throw new Error(\"Expected schema definition to be a single schema, but found \" + definition.length + \".\");\n  }\n\n  return definition[0];\n};\n\nvar getValues = function getValues(input) {\n  return Array.isArray(input) ? input : Object.keys(input).map(function (key) {\n    return input[key];\n  });\n};\n\nvar normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  schema = validateSchema(schema);\n  var values = getValues(input); // Special case: Arrays pass *their* parent on to their children, since there\n  // is not any special information that can be gathered from themselves directly\n\n  return values.map(function (value, index) {\n    return visit(value, parent, key, schema, addEntity, visitedEntities);\n  });\n};\nvar denormalize = function denormalize(schema, input, unvisit) {\n  schema = validateSchema(schema);\n  return input && input.map ? input.map(function (entityOrId) {\n    return unvisit(entityOrId, schema);\n  }) : input;\n};\n\nvar ArraySchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(ArraySchema, _PolymorphicSchema);\n\n  function ArraySchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n\n  var _proto = ArraySchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    var values = getValues(input);\n    return values.map(function (value, index) {\n      return _this.normalizeValue(value, parent, key, visit, addEntity, visitedEntities);\n    }).filter(function (value) {\n      return value !== undefined && value !== null;\n    });\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n\n    return input && input.map ? input.map(function (value) {\n      return _this2.denormalizeValue(value, unvisit);\n    }) : input;\n  };\n\n  return ArraySchema;\n}(PolymorphicSchema);\n\nvar _normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  var object = _extends({}, input);\n\n  Object.keys(schema).forEach(function (key) {\n    var localSchema = schema[key];\n    var resolvedLocalSchema = typeof localSchema === 'function' ? localSchema(input) : localSchema;\n    var value = visit(input[key], input, key, resolvedLocalSchema, addEntity, visitedEntities);\n\n    if (value === undefined || value === null) {\n      delete object[key];\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n};\n\nvar _denormalize = function denormalize(schema, input, unvisit) {\n  if (isImmutable(input)) {\n    return denormalizeImmutable(schema, input, unvisit);\n  }\n\n  var object = _extends({}, input);\n\n  Object.keys(schema).forEach(function (key) {\n    if (object[key] != null) {\n      object[key] = unvisit(object[key], schema[key]);\n    }\n  });\n  return object;\n};\n\nvar ObjectSchema = /*#__PURE__*/function () {\n  function ObjectSchema(definition) {\n    this.define(definition);\n  }\n\n  var _proto = ObjectSchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _extends2;\n\n      var schema = definition[key];\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\n    }, this.schema || {});\n  };\n\n  _proto.normalize = function normalize() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _normalize.apply(void 0, [this.schema].concat(args));\n  };\n\n  _proto.denormalize = function denormalize() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _denormalize.apply(void 0, [this.schema].concat(args));\n  };\n\n  return ObjectSchema;\n}();\n\nvar visit = function visit(value, parent, key, schema, addEntity, visitedEntities) {\n  if (typeof value !== 'object' || !value) {\n    return value;\n  }\n\n  if (typeof schema === 'object' && (!schema.normalize || typeof schema.normalize !== 'function')) {\n    var method = Array.isArray(schema) ? normalize : _normalize;\n    return method(schema, value, parent, key, visit, addEntity, visitedEntities);\n  }\n\n  return schema.normalize(value, parent, key, visit, addEntity, visitedEntities);\n};\n\nvar addEntities = function addEntities(entities) {\n  return function (schema, processedEntity, value, parent, key) {\n    var schemaKey = schema.key;\n    var id = schema.getId(value, parent, key);\n\n    if (!(schemaKey in entities)) {\n      entities[schemaKey] = {};\n    }\n\n    var existingEntity = entities[schemaKey][id];\n\n    if (existingEntity) {\n      entities[schemaKey][id] = schema.merge(existingEntity, processedEntity);\n    } else {\n      entities[schemaKey][id] = processedEntity;\n    }\n  };\n};\n\nvar schema = {\n  Array: ArraySchema,\n  Entity: EntitySchema,\n  Object: ObjectSchema,\n  Union: UnionSchema,\n  Values: ValuesSchema\n};\nvar normalize$1 = function normalize(input, schema) {\n  if (!input || typeof input !== 'object') {\n    throw new Error(\"Unexpected input given to normalize. Expected type to be \\\"object\\\", found \\\"\" + (input === null ? 'null' : typeof input) + \"\\\".\");\n  }\n\n  var entities = {};\n  var addEntity = addEntities(entities);\n  var visitedEntities = {};\n  var result = visit(input, input, null, schema, addEntity, visitedEntities);\n  return {\n    entities: entities,\n    result: result\n  };\n};\n\nvar unvisitEntity = function unvisitEntity(id, schema, unvisit, getEntity, cache) {\n  var entity = getEntity(id, schema);\n\n  if (entity === undefined && schema instanceof EntitySchema) {\n    entity = schema.fallback(id, schema);\n  }\n\n  if (typeof entity !== 'object' || entity === null) {\n    return entity;\n  }\n\n  if (!cache[schema.key]) {\n    cache[schema.key] = {};\n  }\n\n  if (!cache[schema.key][id]) {\n    // Ensure we don't mutate it non-immutable objects\n    var entityCopy = isImmutable(entity) ? entity : _extends({}, entity); // Need to set this first so that if it is referenced further within the\n    // denormalization the reference will already exist.\n\n    cache[schema.key][id] = entityCopy;\n    cache[schema.key][id] = schema.denormalize(entityCopy, unvisit);\n  }\n\n  return cache[schema.key][id];\n};\n\nvar getUnvisit = function getUnvisit(entities) {\n  var cache = {};\n  var getEntity = getEntities(entities);\n  return function unvisit(input, schema) {\n    if (typeof schema === 'object' && (!schema.denormalize || typeof schema.denormalize !== 'function')) {\n      var method = Array.isArray(schema) ? denormalize : _denormalize;\n      return method(schema, input, unvisit);\n    }\n\n    if (input === undefined || input === null) {\n      return input;\n    }\n\n    if (schema instanceof EntitySchema) {\n      return unvisitEntity(input, schema, unvisit, getEntity, cache);\n    }\n\n    return schema.denormalize(input, unvisit);\n  };\n};\n\nvar getEntities = function getEntities(entities) {\n  var isImmutable$1 = isImmutable(entities);\n  return function (entityOrId, schema) {\n    var schemaKey = schema.key;\n\n    if (typeof entityOrId === 'object') {\n      return entityOrId;\n    }\n\n    if (isImmutable$1) {\n      return entities.getIn([schemaKey, entityOrId.toString()]);\n    }\n\n    return entities[schemaKey] && entities[schemaKey][entityOrId];\n  };\n};\n\nvar denormalize$1 = function denormalize(input, schema, entities) {\n  if (typeof input !== 'undefined') {\n    return getUnvisit(entities)(input, schema);\n  }\n};\n\nexport { denormalize$1 as denormalize, normalize$1 as normalize, schema };\n"],"mappings":"AAAA,SAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;EACxC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACrC,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;IACAE,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;IACAD,UAAU,CAACE,YAAX,GAA0B,IAA1B;IACA,IAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;IAC3BC,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;EACD;AACF;;AAED,SAASO,YAAT,CAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,WAA/C,EAA4D;EAC1D,IAAID,UAAJ,EAAgBd,iBAAiB,CAACa,WAAW,CAACG,SAAb,EAAwBF,UAAxB,CAAjB;EAChB,IAAIC,WAAJ,EAAiBf,iBAAiB,CAACa,WAAD,EAAcE,WAAd,CAAjB;EACjB,OAAOF,WAAP;AACD;;AAED,SAASI,QAAT,GAAoB;EAClBA,QAAQ,GAAGR,MAAM,CAACS,MAAP,IAAiB,UAAUjB,MAAV,EAAkB;IAC5C,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,SAAS,CAACf,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;MACzC,IAAIiB,MAAM,GAAGD,SAAS,CAAChB,CAAD,CAAtB;;MAEA,KAAK,IAAIQ,GAAT,IAAgBS,MAAhB,EAAwB;QACtB,IAAIX,MAAM,CAACO,SAAP,CAAiBK,cAAjB,CAAgCC,IAAhC,CAAqCF,MAArC,EAA6CT,GAA7C,CAAJ,EAAuD;UACrDV,MAAM,CAACU,GAAD,CAAN,GAAcS,MAAM,CAACT,GAAD,CAApB;QACD;MACF;IACF;;IAED,OAAOV,MAAP;EACD,CAZD;;EAcA,OAAOgB,QAAQ,CAACM,KAAT,CAAe,IAAf,EAAqBJ,SAArB,CAAP;AACD;;AAED,SAASK,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;EAC5CD,QAAQ,CAACT,SAAT,GAAqBP,MAAM,CAACkB,MAAP,CAAcD,UAAU,CAACV,SAAzB,CAArB;EACAS,QAAQ,CAACT,SAAT,CAAmBY,WAAnB,GAAiCH,QAAjC;EACAA,QAAQ,CAACI,SAAT,GAAqBH,UAArB;AACD;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,WAAT,CAAqBC,MAArB,EAA6B;EAC3B,OAAO,CAAC,EAAEA,MAAM,IAAI,OAAOA,MAAM,CAACV,cAAd,KAAiC,UAA3C,KAA0DU,MAAM,CAACV,cAAP,CAAsB,WAAtB,KAAsC;EAC1GU,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYX,cAAZ,CAA2B,WAA3B,CADL,CAAF,CAAR,CAD2B,CAE+B;AAC3D;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASY,oBAAT,CAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,OAA7C,EAAsD;EACpD,OAAO3B,MAAM,CAAC4B,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,CAA2B,UAAUP,MAAV,EAAkBpB,GAAlB,EAAuB;IACvD;IACA;IACA,IAAI4B,SAAS,GAAG,KAAK5B,GAArB;;IAEA,IAAIoB,MAAM,CAACS,GAAP,CAAWD,SAAX,CAAJ,EAA2B;MACzB,OAAOR,MAAM,CAACU,GAAP,CAAWF,SAAX,EAAsBH,OAAO,CAACL,MAAM,CAACW,GAAP,CAAWH,SAAX,CAAD,EAAwBL,MAAM,CAACK,SAAD,CAA9B,CAA7B,CAAP;IACD,CAFD,MAEO;MACL,OAAOR,MAAP;IACD;EACF,CAVM,EAUJI,KAVI,CAAP;AAWD;;AAED,IAAIQ,eAAe,GAAG,SAASA,eAAT,CAAyBC,WAAzB,EAAsC;EAC1D,OAAO,UAAUT,KAAV,EAAiB;IACtB,OAAOL,WAAW,CAACK,KAAD,CAAX,GAAqBA,KAAK,CAACO,GAAN,CAAUE,WAAV,CAArB,GAA8CT,KAAK,CAACS,WAAD,CAA1D;EACD,CAFD;AAGD,CAJD;;AAMA,IAAIC,YAAY,GAAG,aAAa,YAAY;EAC1C,SAASA,YAAT,CAAsBlC,GAAtB,EAA2BmC,UAA3B,EAAuCC,OAAvC,EAAgD;IAC9C,IAAID,UAAU,KAAK,KAAK,CAAxB,EAA2B;MACzBA,UAAU,GAAG,EAAb;IACD;;IAED,IAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;MACtBA,OAAO,GAAG,EAAV;IACD;;IAED,IAAI,CAACpC,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAA3B,EAAqC;MACnC,MAAM,IAAIqC,KAAJ,CAAU,iDAAiDrC,GAAjD,GAAuD,GAAjE,CAAN;IACD;;IAED,IAAIsC,QAAQ,GAAGF,OAAf;IAAA,IACIG,oBAAoB,GAAGD,QAAQ,CAACL,WADpC;IAAA,IAEIA,WAAW,GAAGM,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,IAAlC,GAAyCA,oBAF3D;IAAA,IAGIC,qBAAqB,GAAGF,QAAQ,CAACG,aAHrC;IAAA,IAIIA,aAAa,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,UAAUE,OAAV,EAAmBC,OAAnB,EAA4B;MACjF,OAAOrC,QAAQ,CAAC,EAAD,EAAKoC,OAAL,EAAcC,OAAd,CAAf;IACD,CAFmB,GAEhBH,qBANJ;IAAA,IAOII,qBAAqB,GAAGN,QAAQ,CAACO,eAPrC;IAAA,IAQIA,eAAe,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,UAAUpB,KAAV,EAAiB;MACxE,OAAOlB,QAAQ,CAAC,EAAD,EAAKkB,KAAL,CAAf;IACD,CAFqB,GAElBoB,qBAVJ;IAAA,IAWIE,qBAAqB,GAAGR,QAAQ,CAACS,gBAXrC;IAAA,IAYIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,UAAU9C,GAAV,EAAeuB,MAAf,EAAuB;MAC/E,OAAOyB,SAAP;IACD,CAFsB,GAEnBF,qBAdJ;IAeA,KAAKG,IAAL,GAAYjD,GAAZ;IACA,KAAKkD,MAAL,GAAc,OAAOjB,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkDD,eAAe,CAACC,WAAD,CAA/E;IACA,KAAKkB,YAAL,GAAoBlB,WAApB;IACA,KAAKmB,cAAL,GAAsBX,aAAtB;IACA,KAAKY,gBAAL,GAAwBR,eAAxB;IACA,KAAKS,iBAAL,GAAyBP,gBAAzB;IACA,KAAKQ,MAAL,CAAYpB,UAAZ;EACD;;EAED,IAAIqB,MAAM,GAAGtB,YAAY,CAAC7B,SAA1B;;EAEAmD,MAAM,CAACD,MAAP,GAAgB,SAASA,MAAT,CAAgBpB,UAAhB,EAA4B;IAC1C,KAAKZ,MAAL,GAAczB,MAAM,CAAC4B,IAAP,CAAYS,UAAZ,EAAwBR,MAAxB,CAA+B,UAAU8B,YAAV,EAAwBzD,GAAxB,EAA6B;MACxE,IAAI0D,SAAJ;;MAEA,IAAInC,MAAM,GAAGY,UAAU,CAACnC,GAAD,CAAvB;MACA,OAAOM,QAAQ,CAAC,EAAD,EAAKmD,YAAL,GAAoBC,SAAS,GAAG,EAAZ,EAAgBA,SAAS,CAAC1D,GAAD,CAAT,GAAiBuB,MAAjC,EAAyCmC,SAA7D,EAAf;IACD,CALa,EAKX,KAAKnC,MAAL,IAAe,EALJ,CAAd;EAMD,CAPD;;EASAiC,MAAM,CAACG,KAAP,GAAe,SAASA,KAAT,CAAenC,KAAf,EAAsBoC,MAAtB,EAA8B5D,GAA9B,EAAmC;IAChD,OAAO,KAAKkD,MAAL,CAAY1B,KAAZ,EAAmBoC,MAAnB,EAA2B5D,GAA3B,CAAP;EACD,CAFD;;EAIAwD,MAAM,CAACK,KAAP,GAAe,SAASA,KAAT,CAAenB,OAAf,EAAwBC,OAAxB,EAAiC;IAC9C,OAAO,KAAKS,cAAL,CAAoBV,OAApB,EAA6BC,OAA7B,CAAP;EACD,CAFD;;EAIAa,MAAM,CAACM,QAAP,GAAkB,SAASA,QAAT,CAAkBC,EAAlB,EAAsBxC,MAAtB,EAA8B;IAC9C,OAAO,KAAK+B,iBAAL,CAAuBS,EAAvB,EAA2BxC,MAA3B,CAAP;EACD,CAFD;;EAIAiC,MAAM,CAACQ,SAAP,GAAmB,SAASA,SAAT,CAAmBxC,KAAnB,EAA0BoC,MAA1B,EAAkC5D,GAAlC,EAAuCiE,KAAvC,EAA8CC,SAA9C,EAAyDC,eAAzD,EAA0E;IAC3F,IAAIC,KAAK,GAAG,IAAZ;;IAEA,IAAIL,EAAE,GAAG,KAAKJ,KAAL,CAAWnC,KAAX,EAAkBoC,MAAlB,EAA0B5D,GAA1B,CAAT;IACA,IAAIqE,UAAU,GAAG,KAAKrE,GAAtB;;IAEA,IAAI,EAAEqE,UAAU,IAAIF,eAAhB,CAAJ,EAAsC;MACpCA,eAAe,CAACE,UAAD,CAAf,GAA8B,EAA9B;IACD;;IAED,IAAI,EAAEN,EAAE,IAAII,eAAe,CAACE,UAAD,CAAvB,CAAJ,EAA0C;MACxCF,eAAe,CAACE,UAAD,CAAf,CAA4BN,EAA5B,IAAkC,EAAlC;IACD;;IAED,IAAII,eAAe,CAACE,UAAD,CAAf,CAA4BN,EAA5B,EAAgCO,IAAhC,CAAqC,UAAUC,MAAV,EAAkB;MACzD,OAAOA,MAAM,KAAK/C,KAAlB;IACD,CAFG,CAAJ,EAEI;MACF,OAAOuC,EAAP;IACD;;IAEDI,eAAe,CAACE,UAAD,CAAf,CAA4BN,EAA5B,EAAgCS,IAAhC,CAAqChD,KAArC;;IAEA,IAAIiD,eAAe,GAAG,KAAKpB,gBAAL,CAAsB7B,KAAtB,EAA6BoC,MAA7B,EAAqC5D,GAArC,CAAtB;;IAEAF,MAAM,CAAC4B,IAAP,CAAY,KAAKH,MAAjB,EAAyBmD,OAAzB,CAAiC,UAAU1E,GAAV,EAAe;MAC9C,IAAIyE,eAAe,CAAC/D,cAAhB,CAA+BV,GAA/B,KAAuC,OAAOyE,eAAe,CAACzE,GAAD,CAAtB,KAAgC,QAA3E,EAAqF;QACnF,IAAIuB,MAAM,GAAG6C,KAAK,CAAC7C,MAAN,CAAavB,GAAb,CAAb;QACA,IAAI2E,cAAc,GAAG,OAAOpD,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACC,KAAD,CAArC,GAA+CD,MAApE;QACAkD,eAAe,CAACzE,GAAD,CAAf,GAAuBiE,KAAK,CAACQ,eAAe,CAACzE,GAAD,CAAhB,EAAuByE,eAAvB,EAAwCzE,GAAxC,EAA6C2E,cAA7C,EAA6DT,SAA7D,EAAwEC,eAAxE,CAA5B;MACD;IACF,CAND;IAOAD,SAAS,CAAC,IAAD,EAAOO,eAAP,EAAwBjD,KAAxB,EAA+BoC,MAA/B,EAAuC5D,GAAvC,CAAT;IACA,OAAO+D,EAAP;EACD,CAjCD;;EAmCAP,MAAM,CAACoB,WAAP,GAAqB,SAASA,WAAT,CAAqBL,MAArB,EAA6B9C,OAA7B,EAAsC;IACzD,IAAIoD,MAAM,GAAG,IAAb;;IAEA,IAAI1D,WAAW,CAACoD,MAAD,CAAf,EAAyB;MACvB,OAAOjD,oBAAoB,CAAC,KAAKC,MAAN,EAAcgD,MAAd,EAAsB9C,OAAtB,CAA3B;IACD;;IAED3B,MAAM,CAAC4B,IAAP,CAAY,KAAKH,MAAjB,EAAyBmD,OAAzB,CAAiC,UAAU1E,GAAV,EAAe;MAC9C,IAAIuE,MAAM,CAAC7D,cAAP,CAAsBV,GAAtB,CAAJ,EAAgC;QAC9B,IAAIuB,MAAM,GAAGsD,MAAM,CAACtD,MAAP,CAAcvB,GAAd,CAAb;QACAuE,MAAM,CAACvE,GAAD,CAAN,GAAcyB,OAAO,CAAC8C,MAAM,CAACvE,GAAD,CAAP,EAAcuB,MAAd,CAArB;MACD;IACF,CALD;IAMA,OAAOgD,MAAP;EACD,CAdD;;EAgBAtE,YAAY,CAACiC,YAAD,EAAe,CAAC;IAC1BlC,GAAG,EAAE,KADqB;IAE1B+B,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,OAAO,KAAKkB,IAAZ;IACD;EAJyB,CAAD,EAKxB;IACDjD,GAAG,EAAE,aADJ;IAED+B,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,OAAO,KAAKoB,YAAZ;IACD;EAJA,CALwB,CAAf,CAAZ;;EAYA,OAAOjB,YAAP;AACD,CA7H+B,EAAhC;;AA+HA,IAAI4C,iBAAiB,GAAG,aAAa,YAAY;EAC/C,SAASA,iBAAT,CAA2B3C,UAA3B,EAAuC4C,eAAvC,EAAwD;IACtD,IAAIA,eAAJ,EAAqB;MACnB,KAAKC,gBAAL,GAAwB,OAAOD,eAAP,KAA2B,QAA3B,GAAsC,UAAUvD,KAAV,EAAiB;QAC7E,OAAOA,KAAK,CAACuD,eAAD,CAAZ;MACD,CAFuB,GAEpBA,eAFJ;IAGD;;IAED,KAAKxB,MAAL,CAAYpB,UAAZ;EACD;;EAED,IAAIqB,MAAM,GAAGsB,iBAAiB,CAACzE,SAA/B;;EAEAmD,MAAM,CAACD,MAAP,GAAgB,SAASA,MAAT,CAAgBpB,UAAhB,EAA4B;IAC1C,KAAKZ,MAAL,GAAcY,UAAd;EACD,CAFD;;EAIAqB,MAAM,CAACyB,kBAAP,GAA4B,SAASA,kBAAT,CAA4BzD,KAA5B,EAAmCoC,MAAnC,EAA2C5D,GAA3C,EAAgD;IAC1E,OAAO,CAAC,KAAKkF,cAAN,IAAwB,KAAKF,gBAAL,CAAsBxD,KAAtB,EAA6BoC,MAA7B,EAAqC5D,GAArC,CAA/B;EACD,CAFD;;EAIAwD,MAAM,CAAC2B,WAAP,GAAqB,SAASA,WAAT,CAAqB3D,KAArB,EAA4BoC,MAA5B,EAAoC5D,GAApC,EAAyC;IAC5D,IAAI,KAAKkF,cAAT,EAAyB;MACvB,OAAO,KAAK3D,MAAZ;IACD;;IAED,IAAI6D,IAAI,GAAG,KAAKH,kBAAL,CAAwBzD,KAAxB,EAA+BoC,MAA/B,EAAuC5D,GAAvC,CAAX;IACA,OAAO,KAAKuB,MAAL,CAAY6D,IAAZ,CAAP;EACD,CAPD;;EASA5B,MAAM,CAAC6B,cAAP,GAAwB,SAASA,cAAT,CAAwBC,KAAxB,EAA+B1B,MAA/B,EAAuC5D,GAAvC,EAA4CiE,KAA5C,EAAmDC,SAAnD,EAA8DC,eAA9D,EAA+E;IACrG,IAAI5C,MAAM,GAAG,KAAK4D,WAAL,CAAiBG,KAAjB,EAAwB1B,MAAxB,EAAgC5D,GAAhC,CAAb;;IAEA,IAAI,CAACuB,MAAL,EAAa;MACX,OAAO+D,KAAP;IACD;;IAED,IAAIC,eAAe,GAAGtB,KAAK,CAACqB,KAAD,EAAQ1B,MAAR,EAAgB5D,GAAhB,EAAqBuB,MAArB,EAA6B2C,SAA7B,EAAwCC,eAAxC,CAA3B;IACA,OAAO,KAAKe,cAAL,IAAuBK,eAAe,KAAKvC,SAA3C,IAAwDuC,eAAe,KAAK,IAA5E,GAAmFA,eAAnF,GAAqG;MAC1GxB,EAAE,EAAEwB,eADsG;MAE1GhE,MAAM,EAAE,KAAK0D,kBAAL,CAAwBK,KAAxB,EAA+B1B,MAA/B,EAAuC5D,GAAvC;IAFkG,CAA5G;EAID,CAZD;;EAcAwD,MAAM,CAACgC,gBAAP,GAA0B,SAASA,gBAAT,CAA0BF,KAA1B,EAAiC7D,OAAjC,EAA0C;IAClE,IAAIgE,SAAS,GAAGtE,WAAW,CAACmE,KAAD,CAAX,GAAqBA,KAAK,CAACvD,GAAN,CAAU,QAAV,CAArB,GAA2CuD,KAAK,CAAC/D,MAAjE;;IAEA,IAAI,CAAC,KAAK2D,cAAN,IAAwB,CAACO,SAA7B,EAAwC;MACtC,OAAOH,KAAP;IACD;;IAED,IAAIvB,EAAE,GAAG,KAAKmB,cAAL,GAAsBlC,SAAtB,GAAkC7B,WAAW,CAACmE,KAAD,CAAX,GAAqBA,KAAK,CAACvD,GAAN,CAAU,IAAV,CAArB,GAAuCuD,KAAK,CAACvB,EAAxF;IACA,IAAIxC,MAAM,GAAG,KAAK2D,cAAL,GAAsB,KAAK3D,MAA3B,GAAoC,KAAKA,MAAL,CAAYkE,SAAZ,CAAjD;IACA,OAAOhE,OAAO,CAACsC,EAAE,IAAIuB,KAAP,EAAc/D,MAAd,CAAd;EACD,CAVD;;EAYAtB,YAAY,CAAC6E,iBAAD,EAAoB,CAAC;IAC/B9E,GAAG,EAAE,gBAD0B;IAE/B+B,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,OAAO,CAAC,KAAKiD,gBAAb;IACD;EAJ8B,CAAD,CAApB,CAAZ;;EAOA,OAAOF,iBAAP;AACD,CAhEoC,EAArC;;AAkEA,IAAIY,WAAW,GAAG,aAAa,UAAUC,kBAAV,EAA8B;EAC3D9E,cAAc,CAAC6E,WAAD,EAAcC,kBAAd,CAAd;;EAEA,SAASD,WAAT,CAAqBvD,UAArB,EAAiC4C,eAAjC,EAAkD;IAChD,IAAI,CAACA,eAAL,EAAsB;MACpB,MAAM,IAAI1C,KAAJ,CAAU,6DAAV,CAAN;IACD;;IAED,OAAOsD,kBAAkB,CAAChF,IAAnB,CAAwB,IAAxB,EAA8BwB,UAA9B,EAA0C4C,eAA1C,KAA8D,IAArE;EACD;;EAED,IAAIvB,MAAM,GAAGkC,WAAW,CAACrF,SAAzB;;EAEAmD,MAAM,CAACQ,SAAP,GAAmB,SAASA,SAAT,CAAmBxC,KAAnB,EAA0BoC,MAA1B,EAAkC5D,GAAlC,EAAuCiE,KAAvC,EAA8CC,SAA9C,EAAyDC,eAAzD,EAA0E;IAC3F,OAAO,KAAKkB,cAAL,CAAoB7D,KAApB,EAA2BoC,MAA3B,EAAmC5D,GAAnC,EAAwCiE,KAAxC,EAA+CC,SAA/C,EAA0DC,eAA1D,CAAP;EACD,CAFD;;EAIAX,MAAM,CAACoB,WAAP,GAAqB,SAASA,WAAT,CAAqBpD,KAArB,EAA4BC,OAA5B,EAAqC;IACxD,OAAO,KAAK+D,gBAAL,CAAsBhE,KAAtB,EAA6BC,OAA7B,CAAP;EACD,CAFD;;EAIA,OAAOiE,WAAP;AACD,CAtB8B,CAsB7BZ,iBAtB6B,CAA/B;;AAwBA,IAAIc,YAAY,GAAG,aAAa,UAAUD,kBAAV,EAA8B;EAC5D9E,cAAc,CAAC+E,YAAD,EAAeD,kBAAf,CAAd;;EAEA,SAASC,YAAT,GAAwB;IACtB,OAAOD,kBAAkB,CAAC/E,KAAnB,CAAyB,IAAzB,EAA+BJ,SAA/B,KAA6C,IAApD;EACD;;EAED,IAAIgD,MAAM,GAAGoC,YAAY,CAACvF,SAA1B;;EAEAmD,MAAM,CAACQ,SAAP,GAAmB,SAASA,SAAT,CAAmBxC,KAAnB,EAA0BoC,MAA1B,EAAkC5D,GAAlC,EAAuCiE,KAAvC,EAA8CC,SAA9C,EAAyDC,eAAzD,EAA0E;IAC3F,IAAIC,KAAK,GAAG,IAAZ;;IAEA,OAAOtE,MAAM,CAAC4B,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAAUkE,MAAV,EAAkB7F,GAAlB,EAAuB8F,KAAvB,EAA8B;MAC7D,IAAIpC,SAAJ;;MAEA,IAAI4B,KAAK,GAAG9D,KAAK,CAACxB,GAAD,CAAjB;MACA,OAAOsF,KAAK,KAAKtC,SAAV,IAAuBsC,KAAK,KAAK,IAAjC,GAAwChF,QAAQ,CAAC,EAAD,EAAKuF,MAAL,GAAcnC,SAAS,GAAG,EAAZ,EAAgBA,SAAS,CAAC1D,GAAD,CAAT,GAAiBoE,KAAK,CAACiB,cAAN,CAAqBC,KAArB,EAA4B9D,KAA5B,EAAmCxB,GAAnC,EAAwCiE,KAAxC,EAA+CC,SAA/C,EAA0DC,eAA1D,CAAjC,EAA6GT,SAA3H,EAAhD,GAAyLmC,MAAhM;IACD,CALM,EAKJ,EALI,CAAP;EAMD,CATD;;EAWArC,MAAM,CAACoB,WAAP,GAAqB,SAASA,WAAT,CAAqBpD,KAArB,EAA4BC,OAA5B,EAAqC;IACxD,IAAIoD,MAAM,GAAG,IAAb;;IAEA,OAAO/E,MAAM,CAAC4B,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAAUkE,MAAV,EAAkB7F,GAAlB,EAAuB;MACtD,IAAI+F,SAAJ;;MAEA,IAAIC,UAAU,GAAGxE,KAAK,CAACxB,GAAD,CAAtB;MACA,OAAOM,QAAQ,CAAC,EAAD,EAAKuF,MAAL,GAAcE,SAAS,GAAG,EAAZ,EAAgBA,SAAS,CAAC/F,GAAD,CAAT,GAAiB6E,MAAM,CAACW,gBAAP,CAAwBQ,UAAxB,EAAoCvE,OAApC,CAAjC,EAA+EsE,SAA7F,EAAf;IACD,CALM,EAKJ,EALI,CAAP;EAMD,CATD;;EAWA,OAAOH,YAAP;AACD,CAhC+B,CAgC9Bd,iBAhC8B,CAAhC;;AAkCA,IAAImB,cAAc,GAAG,SAASA,cAAT,CAAwB9D,UAAxB,EAAoC;EACvD,IAAI+D,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAc/D,UAAd,CAAd;;EAEA,IAAI+D,OAAO,IAAI/D,UAAU,CAAC1C,MAAX,GAAoB,CAAnC,EAAsC;IACpC,MAAM,IAAI4C,KAAJ,CAAU,iEAAiEF,UAAU,CAAC1C,MAA5E,GAAqF,GAA/F,CAAN;EACD;;EAED,OAAO0C,UAAU,CAAC,CAAD,CAAjB;AACD,CARD;;AAUA,IAAIiE,SAAS,GAAG,SAASA,SAAT,CAAmB5E,KAAnB,EAA0B;EACxC,OAAO2E,KAAK,CAACD,OAAN,CAAc1E,KAAd,IAAuBA,KAAvB,GAA+B1B,MAAM,CAAC4B,IAAP,CAAYF,KAAZ,EAAmB6E,GAAnB,CAAuB,UAAUrG,GAAV,EAAe;IAC1E,OAAOwB,KAAK,CAACxB,GAAD,CAAZ;EACD,CAFqC,CAAtC;AAGD,CAJD;;AAMA,IAAIgE,SAAS,GAAG,SAASA,SAAT,CAAmBzC,MAAnB,EAA2BC,KAA3B,EAAkCoC,MAAlC,EAA0C5D,GAA1C,EAA+CiE,KAA/C,EAAsDC,SAAtD,EAAiEC,eAAjE,EAAkF;EAChG5C,MAAM,GAAG0E,cAAc,CAAC1E,MAAD,CAAvB;EACA,IAAI+E,MAAM,GAAGF,SAAS,CAAC5E,KAAD,CAAtB,CAFgG,CAEjE;EAC/B;;EAEA,OAAO8E,MAAM,CAACD,GAAP,CAAW,UAAUf,KAAV,EAAiBQ,KAAjB,EAAwB;IACxC,OAAO7B,KAAK,CAACqB,KAAD,EAAQ1B,MAAR,EAAgB5D,GAAhB,EAAqBuB,MAArB,EAA6B2C,SAA7B,EAAwCC,eAAxC,CAAZ;EACD,CAFM,CAAP;AAGD,CARD;;AASA,IAAIS,WAAW,GAAG,SAASA,WAAT,CAAqBrD,MAArB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;EAC7DF,MAAM,GAAG0E,cAAc,CAAC1E,MAAD,CAAvB;EACA,OAAOC,KAAK,IAAIA,KAAK,CAAC6E,GAAf,GAAqB7E,KAAK,CAAC6E,GAAN,CAAU,UAAUL,UAAV,EAAsB;IAC1D,OAAOvE,OAAO,CAACuE,UAAD,EAAazE,MAAb,CAAd;EACD,CAF2B,CAArB,GAEFC,KAFL;AAGD,CALD;;AAOA,IAAI+E,WAAW,GAAG,aAAa,UAAUZ,kBAAV,EAA8B;EAC3D9E,cAAc,CAAC0F,WAAD,EAAcZ,kBAAd,CAAd;;EAEA,SAASY,WAAT,GAAuB;IACrB,OAAOZ,kBAAkB,CAAC/E,KAAnB,CAAyB,IAAzB,EAA+BJ,SAA/B,KAA6C,IAApD;EACD;;EAED,IAAIgD,MAAM,GAAG+C,WAAW,CAAClG,SAAzB;;EAEAmD,MAAM,CAACQ,SAAP,GAAmB,SAASA,SAAT,CAAmBxC,KAAnB,EAA0BoC,MAA1B,EAAkC5D,GAAlC,EAAuCiE,KAAvC,EAA8CC,SAA9C,EAAyDC,eAAzD,EAA0E;IAC3F,IAAIC,KAAK,GAAG,IAAZ;;IAEA,IAAIkC,MAAM,GAAGF,SAAS,CAAC5E,KAAD,CAAtB;IACA,OAAO8E,MAAM,CAACD,GAAP,CAAW,UAAUf,KAAV,EAAiBQ,KAAjB,EAAwB;MACxC,OAAO1B,KAAK,CAACiB,cAAN,CAAqBC,KAArB,EAA4B1B,MAA5B,EAAoC5D,GAApC,EAAyCiE,KAAzC,EAAgDC,SAAhD,EAA2DC,eAA3D,CAAP;IACD,CAFM,EAEJqC,MAFI,CAEG,UAAUlB,KAAV,EAAiB;MACzB,OAAOA,KAAK,KAAKtC,SAAV,IAAuBsC,KAAK,KAAK,IAAxC;IACD,CAJM,CAAP;EAKD,CATD;;EAWA9B,MAAM,CAACoB,WAAP,GAAqB,SAASA,WAAT,CAAqBpD,KAArB,EAA4BC,OAA5B,EAAqC;IACxD,IAAIoD,MAAM,GAAG,IAAb;;IAEA,OAAOrD,KAAK,IAAIA,KAAK,CAAC6E,GAAf,GAAqB7E,KAAK,CAAC6E,GAAN,CAAU,UAAUf,KAAV,EAAiB;MACrD,OAAOT,MAAM,CAACW,gBAAP,CAAwBF,KAAxB,EAA+B7D,OAA/B,CAAP;IACD,CAF2B,CAArB,GAEFD,KAFL;EAGD,CAND;;EAQA,OAAO+E,WAAP;AACD,CA7B8B,CA6B7BzB,iBA7B6B,CAA/B;;AA+BA,IAAI2B,UAAU,GAAG,SAASzC,SAAT,CAAmBzC,MAAnB,EAA2BC,KAA3B,EAAkCoC,MAAlC,EAA0C5D,GAA1C,EAA+CiE,KAA/C,EAAsDC,SAAtD,EAAiEC,eAAjE,EAAkF;EACjG,IAAI/C,MAAM,GAAGd,QAAQ,CAAC,EAAD,EAAKkB,KAAL,CAArB;;EAEA1B,MAAM,CAAC4B,IAAP,CAAYH,MAAZ,EAAoBmD,OAApB,CAA4B,UAAU1E,GAAV,EAAe;IACzC,IAAI0G,WAAW,GAAGnF,MAAM,CAACvB,GAAD,CAAxB;IACA,IAAI2G,mBAAmB,GAAG,OAAOD,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,CAAClF,KAAD,CAA/C,GAAyDkF,WAAnF;IACA,IAAIpB,KAAK,GAAGrB,KAAK,CAACzC,KAAK,CAACxB,GAAD,CAAN,EAAawB,KAAb,EAAoBxB,GAApB,EAAyB2G,mBAAzB,EAA8CzC,SAA9C,EAAyDC,eAAzD,CAAjB;;IAEA,IAAImB,KAAK,KAAKtC,SAAV,IAAuBsC,KAAK,KAAK,IAArC,EAA2C;MACzC,OAAOlE,MAAM,CAACpB,GAAD,CAAb;IACD,CAFD,MAEO;MACLoB,MAAM,CAACpB,GAAD,CAAN,GAAcsF,KAAd;IACD;EACF,CAVD;EAWA,OAAOlE,MAAP;AACD,CAfD;;AAiBA,IAAIwF,YAAY,GAAG,SAAShC,WAAT,CAAqBrD,MAArB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;EAC9D,IAAIN,WAAW,CAACK,KAAD,CAAf,EAAwB;IACtB,OAAOF,oBAAoB,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,CAA3B;EACD;;EAED,IAAIL,MAAM,GAAGd,QAAQ,CAAC,EAAD,EAAKkB,KAAL,CAArB;;EAEA1B,MAAM,CAAC4B,IAAP,CAAYH,MAAZ,EAAoBmD,OAApB,CAA4B,UAAU1E,GAAV,EAAe;IACzC,IAAIoB,MAAM,CAACpB,GAAD,CAAN,IAAe,IAAnB,EAAyB;MACvBoB,MAAM,CAACpB,GAAD,CAAN,GAAcyB,OAAO,CAACL,MAAM,CAACpB,GAAD,CAAP,EAAcuB,MAAM,CAACvB,GAAD,CAApB,CAArB;IACD;EACF,CAJD;EAKA,OAAOoB,MAAP;AACD,CAbD;;AAeA,IAAIyF,YAAY,GAAG,aAAa,YAAY;EAC1C,SAASA,YAAT,CAAsB1E,UAAtB,EAAkC;IAChC,KAAKoB,MAAL,CAAYpB,UAAZ;EACD;;EAED,IAAIqB,MAAM,GAAGqD,YAAY,CAACxG,SAA1B;;EAEAmD,MAAM,CAACD,MAAP,GAAgB,SAASA,MAAT,CAAgBpB,UAAhB,EAA4B;IAC1C,KAAKZ,MAAL,GAAczB,MAAM,CAAC4B,IAAP,CAAYS,UAAZ,EAAwBR,MAAxB,CAA+B,UAAU8B,YAAV,EAAwBzD,GAAxB,EAA6B;MACxE,IAAI0D,SAAJ;;MAEA,IAAInC,MAAM,GAAGY,UAAU,CAACnC,GAAD,CAAvB;MACA,OAAOM,QAAQ,CAAC,EAAD,EAAKmD,YAAL,GAAoBC,SAAS,GAAG,EAAZ,EAAgBA,SAAS,CAAC1D,GAAD,CAAT,GAAiBuB,MAAjC,EAAyCmC,SAA7D,EAAf;IACD,CALa,EAKX,KAAKnC,MAAL,IAAe,EALJ,CAAd;EAMD,CAPD;;EASAiC,MAAM,CAACQ,SAAP,GAAmB,SAASA,SAAT,GAAqB;IACtC,KAAK,IAAI8C,IAAI,GAAGtG,SAAS,CAACf,MAArB,EAA6BsH,IAAI,GAAG,IAAIZ,KAAJ,CAAUW,IAAV,CAApC,EAAqD7D,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAG6D,IAA3E,EAAiF7D,IAAI,EAArF,EAAyF;MACvF8D,IAAI,CAAC9D,IAAD,CAAJ,GAAazC,SAAS,CAACyC,IAAD,CAAtB;IACD;;IAED,OAAOwD,UAAU,CAAC7F,KAAX,CAAiB,KAAK,CAAtB,EAAyB,CAAC,KAAKW,MAAN,EAAcyF,MAAd,CAAqBD,IAArB,CAAzB,CAAP;EACD,CAND;;EAQAvD,MAAM,CAACoB,WAAP,GAAqB,SAASA,WAAT,GAAuB;IAC1C,KAAK,IAAIqC,KAAK,GAAGzG,SAAS,CAACf,MAAtB,EAA8BsH,IAAI,GAAG,IAAIZ,KAAJ,CAAUc,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;MAC7FH,IAAI,CAACG,KAAD,CAAJ,GAAc1G,SAAS,CAAC0G,KAAD,CAAvB;IACD;;IAED,OAAON,YAAY,CAAChG,KAAb,CAAmB,KAAK,CAAxB,EAA2B,CAAC,KAAKW,MAAN,EAAcyF,MAAd,CAAqBD,IAArB,CAA3B,CAAP;EACD,CAND;;EAQA,OAAOF,YAAP;AACD,CAjC+B,EAAhC;;AAmCA,IAAI5C,KAAK,GAAG,SAASA,KAAT,CAAeqB,KAAf,EAAsB1B,MAAtB,EAA8B5D,GAA9B,EAAmCuB,MAAnC,EAA2C2C,SAA3C,EAAsDC,eAAtD,EAAuE;EACjF,IAAI,OAAOmB,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAAlC,EAAyC;IACvC,OAAOA,KAAP;EACD;;EAED,IAAI,OAAO/D,MAAP,KAAkB,QAAlB,KAA+B,CAACA,MAAM,CAACyC,SAAR,IAAqB,OAAOzC,MAAM,CAACyC,SAAd,KAA4B,UAAhF,CAAJ,EAAiG;IAC/F,IAAImD,MAAM,GAAGhB,KAAK,CAACD,OAAN,CAAc3E,MAAd,IAAwByC,SAAxB,GAAoCyC,UAAjD;IACA,OAAOU,MAAM,CAAC5F,MAAD,EAAS+D,KAAT,EAAgB1B,MAAhB,EAAwB5D,GAAxB,EAA6BiE,KAA7B,EAAoCC,SAApC,EAA+CC,eAA/C,CAAb;EACD;;EAED,OAAO5C,MAAM,CAACyC,SAAP,CAAiBsB,KAAjB,EAAwB1B,MAAxB,EAAgC5D,GAAhC,EAAqCiE,KAArC,EAA4CC,SAA5C,EAAuDC,eAAvD,CAAP;AACD,CAXD;;AAaA,IAAIiD,WAAW,GAAG,SAASA,WAAT,CAAqBC,QAArB,EAA+B;EAC/C,OAAO,UAAU9F,MAAV,EAAkBkD,eAAlB,EAAmCa,KAAnC,EAA0C1B,MAA1C,EAAkD5D,GAAlD,EAAuD;IAC5D,IAAIyF,SAAS,GAAGlE,MAAM,CAACvB,GAAvB;IACA,IAAI+D,EAAE,GAAGxC,MAAM,CAACoC,KAAP,CAAa2B,KAAb,EAAoB1B,MAApB,EAA4B5D,GAA5B,CAAT;;IAEA,IAAI,EAAEyF,SAAS,IAAI4B,QAAf,CAAJ,EAA8B;MAC5BA,QAAQ,CAAC5B,SAAD,CAAR,GAAsB,EAAtB;IACD;;IAED,IAAI6B,cAAc,GAAGD,QAAQ,CAAC5B,SAAD,CAAR,CAAoB1B,EAApB,CAArB;;IAEA,IAAIuD,cAAJ,EAAoB;MAClBD,QAAQ,CAAC5B,SAAD,CAAR,CAAoB1B,EAApB,IAA0BxC,MAAM,CAACsC,KAAP,CAAayD,cAAb,EAA6B7C,eAA7B,CAA1B;IACD,CAFD,MAEO;MACL4C,QAAQ,CAAC5B,SAAD,CAAR,CAAoB1B,EAApB,IAA0BU,eAA1B;IACD;EACF,CAfD;AAgBD,CAjBD;;AAmBA,IAAIlD,MAAM,GAAG;EACX4E,KAAK,EAAEI,WADI;EAEXgB,MAAM,EAAErF,YAFG;EAGXpC,MAAM,EAAE+G,YAHG;EAIXW,KAAK,EAAE9B,WAJI;EAKX+B,MAAM,EAAE7B;AALG,CAAb;;AAOA,IAAI8B,WAAW,GAAG,SAAS1D,SAAT,CAAmBxC,KAAnB,EAA0BD,MAA1B,EAAkC;EAClD,IAAI,CAACC,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;IACvC,MAAM,IAAIa,KAAJ,CAAU,mFAAmFb,KAAK,KAAK,IAAV,GAAiB,MAAjB,GAA0B,OAAOA,KAApH,IAA6H,KAAvI,CAAN;EACD;;EAED,IAAI6F,QAAQ,GAAG,EAAf;EACA,IAAInD,SAAS,GAAGkD,WAAW,CAACC,QAAD,CAA3B;EACA,IAAIlD,eAAe,GAAG,EAAtB;EACA,IAAIwD,MAAM,GAAG1D,KAAK,CAACzC,KAAD,EAAQA,KAAR,EAAe,IAAf,EAAqBD,MAArB,EAA6B2C,SAA7B,EAAwCC,eAAxC,CAAlB;EACA,OAAO;IACLkD,QAAQ,EAAEA,QADL;IAELM,MAAM,EAAEA;EAFH,CAAP;AAID,CAbD;;AAeA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuB7D,EAAvB,EAA2BxC,MAA3B,EAAmCE,OAAnC,EAA4CoG,SAA5C,EAAuDC,KAAvD,EAA8D;EAChF,IAAIvD,MAAM,GAAGsD,SAAS,CAAC9D,EAAD,EAAKxC,MAAL,CAAtB;;EAEA,IAAIgD,MAAM,KAAKvB,SAAX,IAAwBzB,MAAM,YAAYW,YAA9C,EAA4D;IAC1DqC,MAAM,GAAGhD,MAAM,CAACuC,QAAP,CAAgBC,EAAhB,EAAoBxC,MAApB,CAAT;EACD;;EAED,IAAI,OAAOgD,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAA7C,EAAmD;IACjD,OAAOA,MAAP;EACD;;EAED,IAAI,CAACuD,KAAK,CAACvG,MAAM,CAACvB,GAAR,CAAV,EAAwB;IACtB8H,KAAK,CAACvG,MAAM,CAACvB,GAAR,CAAL,GAAoB,EAApB;EACD;;EAED,IAAI,CAAC8H,KAAK,CAACvG,MAAM,CAACvB,GAAR,CAAL,CAAkB+D,EAAlB,CAAL,EAA4B;IAC1B;IACA,IAAIgE,UAAU,GAAG5G,WAAW,CAACoD,MAAD,CAAX,GAAsBA,MAAtB,GAA+BjE,QAAQ,CAAC,EAAD,EAAKiE,MAAL,CAAxD,CAF0B,CAE4C;IACtE;;IAEAuD,KAAK,CAACvG,MAAM,CAACvB,GAAR,CAAL,CAAkB+D,EAAlB,IAAwBgE,UAAxB;IACAD,KAAK,CAACvG,MAAM,CAACvB,GAAR,CAAL,CAAkB+D,EAAlB,IAAwBxC,MAAM,CAACqD,WAAP,CAAmBmD,UAAnB,EAA+BtG,OAA/B,CAAxB;EACD;;EAED,OAAOqG,KAAK,CAACvG,MAAM,CAACvB,GAAR,CAAL,CAAkB+D,EAAlB,CAAP;AACD,CAzBD;;AA2BA,IAAIiE,UAAU,GAAG,SAASA,UAAT,CAAoBX,QAApB,EAA8B;EAC7C,IAAIS,KAAK,GAAG,EAAZ;EACA,IAAID,SAAS,GAAGI,WAAW,CAACZ,QAAD,CAA3B;EACA,OAAO,SAAS5F,OAAT,CAAiBD,KAAjB,EAAwBD,MAAxB,EAAgC;IACrC,IAAI,OAAOA,MAAP,KAAkB,QAAlB,KAA+B,CAACA,MAAM,CAACqD,WAAR,IAAuB,OAAOrD,MAAM,CAACqD,WAAd,KAA8B,UAApF,CAAJ,EAAqG;MACnG,IAAIuC,MAAM,GAAGhB,KAAK,CAACD,OAAN,CAAc3E,MAAd,IAAwBqD,WAAxB,GAAsCgC,YAAnD;MACA,OAAOO,MAAM,CAAC5F,MAAD,EAASC,KAAT,EAAgBC,OAAhB,CAAb;IACD;;IAED,IAAID,KAAK,KAAKwB,SAAV,IAAuBxB,KAAK,KAAK,IAArC,EAA2C;MACzC,OAAOA,KAAP;IACD;;IAED,IAAID,MAAM,YAAYW,YAAtB,EAAoC;MAClC,OAAO0F,aAAa,CAACpG,KAAD,EAAQD,MAAR,EAAgBE,OAAhB,EAAyBoG,SAAzB,EAAoCC,KAApC,CAApB;IACD;;IAED,OAAOvG,MAAM,CAACqD,WAAP,CAAmBpD,KAAnB,EAA0BC,OAA1B,CAAP;EACD,CAfD;AAgBD,CAnBD;;AAqBA,IAAIwG,WAAW,GAAG,SAASA,WAAT,CAAqBZ,QAArB,EAA+B;EAC/C,IAAIa,aAAa,GAAG/G,WAAW,CAACkG,QAAD,CAA/B;EACA,OAAO,UAAUrB,UAAV,EAAsBzE,MAAtB,EAA8B;IACnC,IAAIkE,SAAS,GAAGlE,MAAM,CAACvB,GAAvB;;IAEA,IAAI,OAAOgG,UAAP,KAAsB,QAA1B,EAAoC;MAClC,OAAOA,UAAP;IACD;;IAED,IAAIkC,aAAJ,EAAmB;MACjB,OAAOb,QAAQ,CAACc,KAAT,CAAe,CAAC1C,SAAD,EAAYO,UAAU,CAACoC,QAAX,EAAZ,CAAf,CAAP;IACD;;IAED,OAAOf,QAAQ,CAAC5B,SAAD,CAAR,IAAuB4B,QAAQ,CAAC5B,SAAD,CAAR,CAAoBO,UAApB,CAA9B;EACD,CAZD;AAaD,CAfD;;AAiBA,IAAIqC,aAAa,GAAG,SAASzD,WAAT,CAAqBpD,KAArB,EAA4BD,MAA5B,EAAoC8F,QAApC,EAA8C;EAChE,IAAI,OAAO7F,KAAP,KAAiB,WAArB,EAAkC;IAChC,OAAOwG,UAAU,CAACX,QAAD,CAAV,CAAqB7F,KAArB,EAA4BD,MAA5B,CAAP;EACD;AACF,CAJD;;AAMA,SAAS8G,aAAa,IAAIzD,WAA1B,EAAuC8C,WAAW,IAAI1D,SAAtD,EAAiEzC,MAAjE"},"metadata":{},"sourceType":"module"}