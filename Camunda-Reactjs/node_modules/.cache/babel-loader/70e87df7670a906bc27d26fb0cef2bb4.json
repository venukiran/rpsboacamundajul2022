{"ast":null,"code":"import { isCmd, isKey, isShift } from './KeyboardUtil';\nvar LOW_PRIORITY = 500;\nexport var KEYCODE_C = 67;\nexport var KEYCODE_V = 86;\nexport var KEYCODE_Y = 89;\nexport var KEYCODE_Z = 90;\nexport var KEYS_COPY = ['c', 'C', KEYCODE_C];\nexport var KEYS_PASTE = ['v', 'V', KEYCODE_V];\nexport var KEYS_REDO = ['y', 'Y', KEYCODE_Y];\nexport var KEYS_UNDO = ['z', 'Z', KEYCODE_Z];\n/**\n * Adds default keyboard bindings.\n *\n * This does not pull in any features will bind only actions that\n * have previously been registered against the editorActions component.\n *\n * @param {EventBus} eventBus\n * @param {Keyboard} keyboard\n */\n\nexport default function KeyboardBindings(eventBus, keyboard) {\n  var self = this;\n  eventBus.on('editorActions.init', LOW_PRIORITY, function (event) {\n    var editorActions = event.editorActions;\n    self.registerBindings(keyboard, editorActions);\n  });\n}\nKeyboardBindings.$inject = ['eventBus', 'keyboard'];\n/**\n * Register available keyboard bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\n\nKeyboardBindings.prototype.registerBindings = function (keyboard, editorActions) {\n  /**\n   * Add keyboard binding if respective editor action\n   * is registered.\n   *\n   * @param {string} action name\n   * @param {Function} fn that implements the key binding\n   */\n  function addListener(action, fn) {\n    if (editorActions.isRegistered(action)) {\n      keyboard.addListener(fn);\n    }\n  } // undo\n  // (CTRL|CMD) + Z\n\n\n  addListener('undo', function (context) {\n    var event = context.keyEvent;\n\n    if (isCmd(event) && !isShift(event) && isKey(KEYS_UNDO, event)) {\n      editorActions.trigger('undo');\n      return true;\n    }\n  }); // redo\n  // CTRL + Y\n  // CMD + SHIFT + Z\n\n  addListener('redo', function (context) {\n    var event = context.keyEvent;\n\n    if (isCmd(event) && (isKey(KEYS_REDO, event) || isKey(KEYS_UNDO, event) && isShift(event))) {\n      editorActions.trigger('redo');\n      return true;\n    }\n  }); // copy\n  // CTRL/CMD + C\n\n  addListener('copy', function (context) {\n    var event = context.keyEvent;\n\n    if (isCmd(event) && isKey(KEYS_COPY, event)) {\n      editorActions.trigger('copy');\n      return true;\n    }\n  }); // paste\n  // CTRL/CMD + V\n\n  addListener('paste', function (context) {\n    var event = context.keyEvent;\n\n    if (isCmd(event) && isKey(KEYS_PASTE, event)) {\n      editorActions.trigger('paste');\n      return true;\n    }\n  }); // zoom in one step\n  // CTRL/CMD + +\n\n  addListener('stepZoom', function (context) {\n    var event = context.keyEvent; // quirk: it has to be triggered by `=` as well to work on international keyboard layout\n    // cf: https://github.com/bpmn-io/bpmn-js/issues/1362#issuecomment-722989754\n\n    if (isKey(['+', 'Add', '='], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', {\n        value: 1\n      });\n      return true;\n    }\n  }); // zoom out one step\n  // CTRL + -\n\n  addListener('stepZoom', function (context) {\n    var event = context.keyEvent;\n\n    if (isKey(['-', 'Subtract'], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', {\n        value: -1\n      });\n      return true;\n    }\n  }); // zoom to the default level\n  // CTRL + 0\n\n  addListener('zoom', function (context) {\n    var event = context.keyEvent;\n\n    if (isKey('0', event) && isCmd(event)) {\n      editorActions.trigger('zoom', {\n        value: 1\n      });\n      return true;\n    }\n  }); // delete selected element\n  // DEL\n\n  addListener('removeSelection', function (context) {\n    var event = context.keyEvent;\n\n    if (isKey(['Backspace', 'Delete', 'Del'], event)) {\n      editorActions.trigger('removeSelection');\n      return true;\n    }\n  });\n};","map":{"version":3,"names":["isCmd","isKey","isShift","LOW_PRIORITY","KEYCODE_C","KEYCODE_V","KEYCODE_Y","KEYCODE_Z","KEYS_COPY","KEYS_PASTE","KEYS_REDO","KEYS_UNDO","KeyboardBindings","eventBus","keyboard","self","on","event","editorActions","registerBindings","$inject","prototype","addListener","action","fn","isRegistered","context","keyEvent","trigger","value"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/diagram-js/lib/features/keyboard/KeyboardBindings.js"],"sourcesContent":["import {\n  isCmd,\n  isKey,\n  isShift\n} from './KeyboardUtil';\n\nvar LOW_PRIORITY = 500;\n\nexport var KEYCODE_C = 67;\nexport var KEYCODE_V = 86;\nexport var KEYCODE_Y = 89;\nexport var KEYCODE_Z = 90;\n\nexport var KEYS_COPY = ['c', 'C', KEYCODE_C ];\nexport var KEYS_PASTE = [ 'v', 'V', KEYCODE_V ];\nexport var KEYS_REDO = [ 'y', 'Y', KEYCODE_Y ];\nexport var KEYS_UNDO = [ 'z', 'Z', KEYCODE_Z ];\n\n\n/**\n * Adds default keyboard bindings.\n *\n * This does not pull in any features will bind only actions that\n * have previously been registered against the editorActions component.\n *\n * @param {EventBus} eventBus\n * @param {Keyboard} keyboard\n */\nexport default function KeyboardBindings(eventBus, keyboard) {\n\n  var self = this;\n\n  eventBus.on('editorActions.init', LOW_PRIORITY, function(event) {\n\n    var editorActions = event.editorActions;\n\n    self.registerBindings(keyboard, editorActions);\n  });\n}\n\nKeyboardBindings.$inject = [\n  'eventBus',\n  'keyboard'\n];\n\n\n/**\n * Register available keyboard bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {\n\n  /**\n   * Add keyboard binding if respective editor action\n   * is registered.\n   *\n   * @param {string} action name\n   * @param {Function} fn that implements the key binding\n   */\n  function addListener(action, fn) {\n\n    if (editorActions.isRegistered(action)) {\n      keyboard.addListener(fn);\n    }\n  }\n\n\n  // undo\n  // (CTRL|CMD) + Z\n  addListener('undo', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && !isShift(event) && isKey(KEYS_UNDO, event)) {\n      editorActions.trigger('undo');\n\n      return true;\n    }\n  });\n\n  // redo\n  // CTRL + Y\n  // CMD + SHIFT + Z\n  addListener('redo', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && (isKey(KEYS_REDO, event) || (isKey(KEYS_UNDO, event) && isShift(event)))) {\n      editorActions.trigger('redo');\n\n      return true;\n    }\n  });\n\n  // copy\n  // CTRL/CMD + C\n  addListener('copy', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && isKey(KEYS_COPY, event)) {\n      editorActions.trigger('copy');\n\n      return true;\n    }\n  });\n\n  // paste\n  // CTRL/CMD + V\n  addListener('paste', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && isKey(KEYS_PASTE, event)) {\n      editorActions.trigger('paste');\n\n      return true;\n    }\n  });\n\n  // zoom in one step\n  // CTRL/CMD + +\n  addListener('stepZoom', function(context) {\n\n    var event = context.keyEvent;\n\n    // quirk: it has to be triggered by `=` as well to work on international keyboard layout\n    // cf: https://github.com/bpmn-io/bpmn-js/issues/1362#issuecomment-722989754\n    if (isKey([ '+', 'Add', '=' ], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', { value: 1 });\n\n      return true;\n    }\n  });\n\n  // zoom out one step\n  // CTRL + -\n  addListener('stepZoom', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey([ '-', 'Subtract' ], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', { value: -1 });\n\n      return true;\n    }\n  });\n\n  // zoom to the default level\n  // CTRL + 0\n  addListener('zoom', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey('0', event) && isCmd(event)) {\n      editorActions.trigger('zoom', { value: 1 });\n\n      return true;\n    }\n  });\n\n  // delete selected element\n  // DEL\n  addListener('removeSelection', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey(['Backspace', 'Delete', 'Del' ], event)) {\n      editorActions.trigger('removeSelection');\n\n      return true;\n    }\n  });\n};"],"mappings":"AAAA,SACEA,KADF,EAEEC,KAFF,EAGEC,OAHF,QAIO,gBAJP;AAMA,IAAIC,YAAY,GAAG,GAAnB;AAEA,OAAO,IAAIC,SAAS,GAAG,EAAhB;AACP,OAAO,IAAIC,SAAS,GAAG,EAAhB;AACP,OAAO,IAAIC,SAAS,GAAG,EAAhB;AACP,OAAO,IAAIC,SAAS,GAAG,EAAhB;AAEP,OAAO,IAAIC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAWJ,SAAX,CAAhB;AACP,OAAO,IAAIK,UAAU,GAAG,CAAE,GAAF,EAAO,GAAP,EAAYJ,SAAZ,CAAjB;AACP,OAAO,IAAIK,SAAS,GAAG,CAAE,GAAF,EAAO,GAAP,EAAYJ,SAAZ,CAAhB;AACP,OAAO,IAAIK,SAAS,GAAG,CAAE,GAAF,EAAO,GAAP,EAAYJ,SAAZ,CAAhB;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASK,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;EAE3D,IAAIC,IAAI,GAAG,IAAX;EAEAF,QAAQ,CAACG,EAAT,CAAY,oBAAZ,EAAkCb,YAAlC,EAAgD,UAASc,KAAT,EAAgB;IAE9D,IAAIC,aAAa,GAAGD,KAAK,CAACC,aAA1B;IAEAH,IAAI,CAACI,gBAAL,CAAsBL,QAAtB,EAAgCI,aAAhC;EACD,CALD;AAMD;AAEDN,gBAAgB,CAACQ,OAAjB,GAA2B,CACzB,UADyB,EAEzB,UAFyB,CAA3B;AAMA;AACA;AACA;AACA;AACA;AACA;;AACAR,gBAAgB,CAACS,SAAjB,CAA2BF,gBAA3B,GAA8C,UAASL,QAAT,EAAmBI,aAAnB,EAAkC;EAE9E;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAASI,WAAT,CAAqBC,MAArB,EAA6BC,EAA7B,EAAiC;IAE/B,IAAIN,aAAa,CAACO,YAAd,CAA2BF,MAA3B,CAAJ,EAAwC;MACtCT,QAAQ,CAACQ,WAAT,CAAqBE,EAArB;IACD;EACF,CAd6E,CAiB9E;EACA;;;EACAF,WAAW,CAAC,MAAD,EAAS,UAASI,OAAT,EAAkB;IAEpC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI3B,KAAK,CAACiB,KAAD,CAAL,IAAgB,CAACf,OAAO,CAACe,KAAD,CAAxB,IAAmChB,KAAK,CAACU,SAAD,EAAYM,KAAZ,CAA5C,EAAgE;MAC9DC,aAAa,CAACU,OAAd,CAAsB,MAAtB;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX,CAnB8E,CA8B9E;EACA;EACA;;EACAN,WAAW,CAAC,MAAD,EAAS,UAASI,OAAT,EAAkB;IAEpC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI3B,KAAK,CAACiB,KAAD,CAAL,KAAiBhB,KAAK,CAACS,SAAD,EAAYO,KAAZ,CAAL,IAA4BhB,KAAK,CAACU,SAAD,EAAYM,KAAZ,CAAL,IAA2Bf,OAAO,CAACe,KAAD,CAA/E,CAAJ,EAA8F;MAC5FC,aAAa,CAACU,OAAd,CAAsB,MAAtB;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX,CAjC8E,CA4C9E;EACA;;EACAN,WAAW,CAAC,MAAD,EAAS,UAASI,OAAT,EAAkB;IAEpC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI3B,KAAK,CAACiB,KAAD,CAAL,IAAgBhB,KAAK,CAACO,SAAD,EAAYS,KAAZ,CAAzB,EAA6C;MAC3CC,aAAa,CAACU,OAAd,CAAsB,MAAtB;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX,CA9C8E,CAyD9E;EACA;;EACAN,WAAW,CAAC,OAAD,EAAU,UAASI,OAAT,EAAkB;IAErC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI3B,KAAK,CAACiB,KAAD,CAAL,IAAgBhB,KAAK,CAACQ,UAAD,EAAaQ,KAAb,CAAzB,EAA8C;MAC5CC,aAAa,CAACU,OAAd,CAAsB,OAAtB;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX,CA3D8E,CAsE9E;EACA;;EACAN,WAAW,CAAC,UAAD,EAAa,UAASI,OAAT,EAAkB;IAExC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB,CAFwC,CAIxC;IACA;;IACA,IAAI1B,KAAK,CAAC,CAAE,GAAF,EAAO,KAAP,EAAc,GAAd,CAAD,EAAsBgB,KAAtB,CAAL,IAAqCjB,KAAK,CAACiB,KAAD,CAA9C,EAAuD;MACrDC,aAAa,CAACU,OAAd,CAAsB,UAAtB,EAAkC;QAAEC,KAAK,EAAE;MAAT,CAAlC;MAEA,OAAO,IAAP;IACD;EACF,CAXU,CAAX,CAxE8E,CAqF9E;EACA;;EACAP,WAAW,CAAC,UAAD,EAAa,UAASI,OAAT,EAAkB;IAExC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI1B,KAAK,CAAC,CAAE,GAAF,EAAO,UAAP,CAAD,EAAsBgB,KAAtB,CAAL,IAAqCjB,KAAK,CAACiB,KAAD,CAA9C,EAAuD;MACrDC,aAAa,CAACU,OAAd,CAAsB,UAAtB,EAAkC;QAAEC,KAAK,EAAE,CAAC;MAAV,CAAlC;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX,CAvF8E,CAkG9E;EACA;;EACAP,WAAW,CAAC,MAAD,EAAS,UAASI,OAAT,EAAkB;IAEpC,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI1B,KAAK,CAAC,GAAD,EAAMgB,KAAN,CAAL,IAAqBjB,KAAK,CAACiB,KAAD,CAA9B,EAAuC;MACrCC,aAAa,CAACU,OAAd,CAAsB,MAAtB,EAA8B;QAAEC,KAAK,EAAE;MAAT,CAA9B;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX,CApG8E,CA+G9E;EACA;;EACAP,WAAW,CAAC,iBAAD,EAAoB,UAASI,OAAT,EAAkB;IAE/C,IAAIT,KAAK,GAAGS,OAAO,CAACC,QAApB;;IAEA,IAAI1B,KAAK,CAAC,CAAC,WAAD,EAAc,QAAd,EAAwB,KAAxB,CAAD,EAAkCgB,KAAlC,CAAT,EAAmD;MACjDC,aAAa,CAACU,OAAd,CAAsB,iBAAtB;MAEA,OAAO,IAAP;IACD;EACF,CATU,CAAX;AAUD,CA3HD"},"metadata":{},"sourceType":"module"}