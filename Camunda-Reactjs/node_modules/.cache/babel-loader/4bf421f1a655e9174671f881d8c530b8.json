{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Button from '../../elements/Button';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\n\nfunction FormButton(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormButton, props);\n  var ElementType = getElementType(FormButton, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormButton.handledProps = ['as', 'control'];\nFormButton._meta = {\n  name: 'FormButton',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button\n};\nexport default FormButton;","map":{"version":3,"names":["_extends","React","customPropTypes","getElementType","getUnhandledProps","META","Button","FormField","FormButton","props","control","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","defaultProps"],"sources":["D:/projects/Camunda/rpsboacamundajul2022/Camunda-Reactjs/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Form/FormButton.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\n\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Button from '../../elements/Button';\nimport FormField from './FormField';\n\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\nfunction FormButton(props) {\n  var control = props.control;\n\n  var rest = getUnhandledProps(FormButton, props);\n  var ElementType = getElementType(FormButton, props);\n\n  return React.createElement(ElementType, _extends({}, rest, { control: control }));\n}\n\nFormButton.handledProps = ['as', 'control'];\nFormButton._meta = {\n  name: 'FormButton',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\n\nFormButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\n\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button\n};\n\nexport default FormButton;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,EAA6DC,IAA7D,QAAyE,WAAzE;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EACzB,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;EAEA,IAAIC,IAAI,GAAGP,iBAAiB,CAACI,UAAD,EAAaC,KAAb,CAA5B;EACA,IAAIG,WAAW,GAAGT,cAAc,CAACK,UAAD,EAAaC,KAAb,CAAhC;EAEA,OAAOR,KAAK,CAACY,aAAN,CAAoBD,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKW,IAAL,EAAW;IAAED,OAAO,EAAEA;EAAX,CAAX,CAAzC,CAAP;AACD;;AAEDF,UAAU,CAACM,YAAX,GAA0B,CAAC,IAAD,EAAO,SAAP,CAA1B;AACAN,UAAU,CAACO,KAAX,GAAmB;EACjBC,IAAI,EAAE,YADW;EAEjBC,MAAM,EAAE,MAFS;EAGjBC,IAAI,EAAEb,IAAI,CAACc,KAAL,CAAWC;AAHA,CAAnB;AAMAZ,UAAU,CAACa,SAAX,GAAuBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC7D;EACAC,EAAE,EAAEvB,eAAe,CAACuB,EAFyC;;EAI7D;EACAf,OAAO,EAAEH,SAAS,CAACc,SAAV,CAAoBX;AALgC,CAAxC,GAMnB,EANJ;AAQAF,UAAU,CAACkB,YAAX,GAA0B;EACxBD,EAAE,EAAElB,SADoB;EAExBG,OAAO,EAAEJ;AAFe,CAA1B;AAKA,eAAeE,UAAf"},"metadata":{},"sourceType":"module"}